{"raw": "The input of this key:\nNumber 03d CurveKey output [inherited] The output of this key:\n03d. LinearCurveKey Class Reference\nInherits 03d", "type": "mixed", "id": {"id": "3ff7bf6b-a69f-4da9-b895-812cfe8da592"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both structured programming references and a mix of textual descriptions, which can help the model learn span segmentation in diverse contexts. However, it lacks contextual coherence for training purposes due to its fragmented nature. / The segment contains both structured programming references and a mix of text, which can help the model learn span segmentation in diverse contexts. However, it lacks clarity due to repetition (\"03d\") that might confuse learning patterns for spans related specifically to code versus natural language descriptions. / The segment contains a mix of structured elements (keys, class references) that can be segmented into meaningful spans for learning span composition in both programming and documentation contexts. It is clean but lacks context to fully evaluate its training utility without additional surrounding text. / The segment contains a mix of structured programming elements and documentation, with clear inheritance patterns that can be segmented into meaningful spans for learning span composition in both contexts. / Contains both structured programming references and comments, useful for learning span segmentation in a coding context."}}
{"raw": "this render node might not be in the render graph: Note that modifications to this array [e-g: push()] will not affect the underlying RenderNode; while modifications to the array's members will affect them: Returns: An array containing all render nodes of the subtree.", "type": "mixed", "id": {"id": "1214cd11-1eaf-4ae6-999c-cb4aed6aa9d8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical documentation and programming concepts, with clear references to arrays (\"[e-g: push()]\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which could affect its utility as training data. / The segment contains a mix of technical language and programming concepts, with clear references to data structures (arrays) that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or coherence as it appears out-of-place without surrounding text. / Clear distinction between explanatory text and programming constructs, useful for learning span segmentation in both domains. / The segment contains a mix of technical language and structured data (render nodes, arrays), with clear span segmentation opportunities for both programming constructs (\"RenderNode\", \"[e-g: push()]\") and natural descriptions (\"this render node might not be in the render graph\"). / The segment contains a mix of technical language and programming concepts, with clear delineation between explanatory text (\"this render node might not be in the render graph\") and specific instructions or data structures (\"Returns: An array containing all render nodes...\"). It provides examples that can help learn span segmentation for both natural descriptions as well as code constructs."}}
{"raw": "Listof all members\nDetailed Description\nParam which stores a DrawContext:\nPublic Member Functions\nbool bind Param source_param) unbindInput unbindOutput Param destination_param)", "type": "mixed", "id": {"id": "1dc42cce-ddcc-4d4b-878e-85534a54a66f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to identify spans in both contexts effectively. / Clear list-like structure with a mix of descriptive text and programming-related terms, suitable for learning span segmentation in both contexts. / The segment contains a mix of structured elements (list, descriptions) and programming constructs that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully understand the content's domain or function within code structures. / The segment contains a mixture of lists, descriptions and function signatures which can help the model learn to identify different types of spans in both structured (code) and unstructured text (natural language). However, it lacks context for some elements like \"Listof all members\" or specific details about what is meant by 'Bind' functions. / The segment contains a mix of programming constructs and documentation, with clear delineation between function signatures (spans) that can be used for training span segmentation in both contexts."}}
{"raw": "conditional expression\nassignment operator ASSIGN MUL ASSIGN DIV ASSIGN ADD ASSIGN SUB ASSIGN BITWISE AND ASSIGN BITWISE OR ASSIGN BITWISE XOR ASSIGN BITWISE SHIFTL ASSIGN BITWISE SHIFTR ASSIGN\nconstant_expression (ID) = > variable_expression literal value\nconditional_expression logical or expression\nQUESTION expression COLON conditional expression\n?\nlogical_ or expression exclusive or expression\nOR exclusive or expression ) *\nlogical_ and_expression NOT ) ? inclusive or expression\nAND\nNOT ) ?", "type": "code", "id": {"id": "4ae247d9-ccb1-490b-a5b9-a339a5d574db"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans like expressions, operators; well-suited for learning span composition in programming contexts. / Clear syntactic structure representing programming constructs, useful for learning span segmentation in a coding context. / Clear structure with identifiable spans like expressions, operators; well-suited for learning span segmentation in programming context. / Clear structure with identifiable spans like expressions, operators; useful for learning span segmentation in programming context. / Clear structure with identifiable spans like expressions, operators; represents valuable patterns for learning span composition in programming context. However, some punctuation and formatting issues may affect clarity slightly."}}
{"raw": "ObjectBase clientId [inherited] Unique id of the object. This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nbool 03d Element_cull", "type": "mixed", "id": {"id": "4133c245-f679-44d1-9acf-8fc6c304614c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related terms, with clear identifiers for spans like \"clientId\" which is useful for learning span segmentation in both contexts. However, the presence of code-like syntax (\"bool\", \"[inherited]\", etc.) may confuse models trained solely on natural language or exclusively on coding patterns without mixed-context training data. / Contains both a descriptive text segment and programming-related terms, which can help the model learn to distinguish between different types of spans in varied contexts. The structure is clear with identifiable elements like property descriptions (natural language) alongside code constructs (\"clientId\", \"Unique id\"). / The segment contains a mix of descriptive text and technical terms, with clear identifiers like 'clientId' that can be segmented into meaningful spans for learning purposes. It also includes programming-related syntax ('bool', '[inherited]', etc.), which is valuable in the context of span-aware models dealing with code snippets or documentation containing both natural language explanations and coding elements. / The segment contains both a descriptive text and programming-related terms, which can help the model learn span segmentation for different types of content. However, it lacks clarity in separating spans due to overlapping context between natural language explanation (\"Unique id\") and code syntax (\"bool 03d Element_cull\"). / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to potential confusion with similar-looking characters (e.g., '03' vs '0')."}}
{"raw": "true if this object is a or is derived from the given class name. 03d. Param unbindInput [inherited] Breaks any input connection coming into the Param:\n03d. Param unbindOutput Param destination_param [inherited] Breaks a specific param-bind output connection o this param:", "type": "code", "id": {"id": "73404e17-bb0f-4ca5-8fd1-7dc63fc341dc"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans related to programming constructs; useful for learning span segmentation in a coding context. / Clear syntactic structure with identifiable spans; useful for learning programming constructs and patterns. / Clear syntactical structure with identifiable spans like function names, parameters and comments indicating logical segments in programming context. Well-formed for training purposes. / The segment lacks clear, meaningful spans and is not coherent for training purposes; it appears to be a mix of documentation with programming-like syntax that doesn't form well-defined patterns suitable for span segmentation learning. / The segment lacks clear, meaningful spans and is not coherent or representative of useful patterns for span segmentation training. It mixes language with unclear references to programming constructs without context."}}
{"raw": "Parameters: a Operand. b Operand. Returns: (lo3djs_quaternions Quaterion/number)", "type": "code", "id": {"id": "3d3ad657-a2f5-4dcc-8fac-102561f34d87"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear parameters and return types, representing valuable patterns for learning span composition in programming contexts. / Clear structure with parameters and return types, suitable for learning span segmentation in programming contexts. / Clear separation of parameters and return type, representing valuable patterns for learning span composition in both programming context (code) and descriptive text elements (natural language). / Clear parameters and return types, suitable for learning span segmentation in programming contexts. / Clear parameters and return types, representing valuable patterns for learning span composition in programming context."}}
{"raw": "Parameters: pack The pack to create the deserialized objects in. json", "type": "mixed", "id": {"id": "18813470-7b08-476e-aeb8-2707655817c0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear parameter declaration with both descriptive text and structured data (key-value pair), which is representative of the target domain for X-Spanformer training in handling span-aware encoding across natural language descriptions within code-like structures. / The segment contains a mix of programming language syntax and comments, with clear parameters for potential span segmentation; it is clean but lacks context to fully evaluate its training utility. / Clear mix of parameter description and JSON-like structure, useful for learning span segmentation in both contexts. / The segment contains a clear command with parameters that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts and human-readable instructions. It is clean but lacks context or content beyond the parameter definition itself. / Clear parameters and values, suitable for learning span composition in both language context (pack) and technical syntax (json)."}}
{"raw": "Member Function Documentation\nbool 03d. Param bind Param source_param", "type": "mixed", "id": {"id": "ba50ca66-d3fb-4557-8046-baaf1c09d96f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines a programming function signature with comments, providing clear span patterns for both language constructs and documentation elements. / The segment contains a clear function signature with parameters, representing valuable patterns for learning span composition in both programming and documentation contexts. / The segment combines a function name with its documentation, which includes both structured (code-like) and unstructured elements useful for learning span segmentation in diverse contexts. / The segment contains both a function signature and documentation, which are clear spans for training in span-aware models that handle multiple content types. It is clean but lacks context to fully represent natural language or code patterns independently; however, it offers valuable examples of how such elements can be combined within the same text block. / The segment contains a mix of programming terminology and documentation structure, with clear spans for function names (\"Member Function\"), parameters (\"Param source_param\"), and boolean values indicating success or failure in an API context. It is clean but lacks contextual richness that could improve training utility."}}
{"raw": "inclusive or expression ) *\ninclusive or expression exclusive or expression (BITWISE OR exclusive or expression )", "type": "mixed", "id": {"id": "b8bba5bc-fc2f-43eb-aefe-177f6f6d2607"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming expressions and logical operators, which can be segmented into meaningful spans for learning purposes; it is clean but lacks context or clarity in its current form. / Clear structure with logical operators and bitwise expressions suitable for span segmentation in programming context. / The segment contains a mix of programming expressions and logical operators, which can be segmented into meaningful spans for learning purposes; however, it lacks context or clarity on its own. / The text segment contains a mix of programming constructs and logical expressions, which can be segmented into meaningful spans for learning purposes; it is clean but lacks context or clarity in its current form. / The segment contains a mix of programming expressions and logical operators, presenting clear patterns for span segmentation that are relevant to both coding syntax understanding and the semantics behind conditional logic in software development."}}
{"raw": "Passing in null will unbind any m parameter currently bound: Returns: True if the bind succeeded. bool 03d. ObjectBase.isAClassName String class name [inherited] Takes the name ofa class as an argument, and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "e1d12ada-250a-4802-8835-f6ef3c4bf717"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text contains both programming concepts (e.g., \"m parameter\", \"bind succeeded\") and language constructs (\"ObjectBase.isAClassName String class name [inherited]\"), which can help the model learn span segmentation in a code context interspersed with natural descriptions. / The segment mixes programming concepts with a pseudo-code-like syntax, lacking clear structure for meaningful span segmentation and not clean enough to serve as training data. / The segment mixes programming concepts with a non-standard notation (\"ObjectBase.isAClassName String class name [inherited]\"), which lacks clarity and consistency for training purposes. / The segment contains a mix of programming concepts and documentation style, but lacks clear structure for meaningful span segmentation; it is not coherent as training data. / The segment mixes programming concepts with a pseudo-code-like syntax, lacking clear structure for meaningful span segmentation and not cleanly representing either domain's patterns."}}
{"raw": "o3djsmath Matrix4 matrix Reorients the vertices, positions and normals, of this vertexInfo by the given matrix. In other words, it multiplies each vertex by the given matrix and each normal by the inverse-transpose of the given matrix\nParameters: matrix Matrix by which to multiply: o3djs.primitives. VertexInfosetTriangle number triangleIndex number indexl number index2 number index3 Sets the vertex indices of thye triangle at the given triangle index: Parameters: triangleIndex The index of the triangle.", "type": "mixed", "id": {"id": "5d4d7b8e-f809-4352-a7bc-d8fb7514ece5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming concepts and language, with clear spanable elements like function names (Matrix4), parameters descriptions (\"matrix\", \"triangleIndex\"), which are valuable for learning composition in a tokenizer-free context. However, the presence of natural language explanations may slightly reduce clarity but still offers useful patterns for training. / Contains both programming concepts and language, with clear spanable elements like function names, parameters descriptions, which are useful for learning structured patterns in a tokenizer-free context. / Contains both programming concepts and language, with clear spanable elements like function names (\"Matrix4\", \"Reorients\"), parameters (\"matrix Matrix by which to multiply:\"), method descriptions (e.g., multiplying vertices). However, it lacks coherence in natural prose structure. / Contains both structured programming elements and descriptive text, with clear spanable segments like function names, parameters descriptions, etc., suitable for learning diverse patterns in a tokenizer-free context. / Contains both structured programming concepts and descriptive text, with clear spanable elements like function names (\"Matrix4\"), parameters (\"matrix\", \"triangleIndex\"), types (\"VertexInfosetTriangle number triangleIndex\") which are useful for learning composition in a tokenizer-free context."}}
{"raw": "Material createMaterialFromEffect(effect) Io3d Material  createNonTexturedMaterial(type) 03dis_simple SimpleShape   createSimpleShape(shape, material) lo3djs simple_SimpleShape createSphere(radius; smoothness) 03d. Material  createTexturedMaterial(type) ! o3djs simple_Scene loadScene(url)", "type": "mixed", "id": {"id": "01a8e67e-ef84-4e9f-b21f-972249f88f16"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of programming commands and comments, with clear delimiters for different constructs (e.g., function calls). It represents valuable patterns in both coding syntax and documentation style that can aid the model's understanding of span segmentation across code snippets interspersed within natural language explanations. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (e.g., \"createMaterialFromEffect\", \"loadScene\"). It represents valuable patterns in both code structure and natural language descriptions within the context of 3D material creation. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (e.g., `createMaterialFromEffect`, `loadScene`). It includes both code snippets (`03dis_simple SimpleShape`) and natural language descriptions or commands. Despite some inconsistencies in formatting (\"lo3djs\" vs \"o3djs\"), it retains structural clarity that can aid a span-aware model's learning process, especially given the mixed nature of content which is representative for such models. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans; however, it lacks coherence due to the presence of both code snippets (e.g., function calls) and natural language descriptions/commentary within one block. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans; however, the presence of non-standard characters (e.g., '03') may confuse tokenization systems without further cleaning or standardizing code conventions."}}
{"raw": "Transform rotateY Number radians Pre-composes the local matrix of this Transform with a rotation about the y-axis. For example, if the local matrix is a translation, the new local matrix will rotate around the y-axis and then translate.", "type": "mixed", "id": {"id": "37cd237a-7f96-4f16-a6ea-78225cbfda64"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear combination of descriptive text and programming-related terms, useful for learning span segmentation in both domains. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"Transform\", \"rotateY Number radians Pre-composes the local matrix\" which are useful for learning span composition in both code-related contexts (like CSS transforms) and natural language explanations. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"Transform rotateY\", \"Number radians Pre-composes the local matrix\", which are useful for learning span composition in both natural language processing (NLP) tasks related to code documentation. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts (e.g., \"Transform\", \"rotateY\") and natural language descriptions (\"Number radians Pre-composes the local matrix\"). / The segment contains a mix of technical terms and instructions that can be segmented into meaningful spans, such as \"Transform\", \"rotateY Number radians Pre-composes the local matrix\" which are code-like constructs along with natural language explanations like \"For example\". It is clean for training purposes."}}
{"raw": "Pack createDepthStencilSurface Number width, Number height\nCreates a new RenderDepthStencilSurface object of a format suitable for use as a depth-stencil render target. Note: The dimensions of the RenderDepthStencilSurface must be a power of two.", "type": "code", "id": {"id": "d05a5f04-d1fc-4d52-ae94-bc3709de8006"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear span patterns with a mix of programming constructs and descriptive text, suitable for learning both syntax recognition in coding contexts as well as semantic understanding in documentation. / Clear structure with identifiable spans; combines programming concepts and descriptions, useful for learning span segmentation in both contexts. / Clear function declaration and parameters; useful for learning span composition in programming contexts. / Clear function signature and description with identifiable spans for learning (e.g., \"Pack createDepthStencilSurface\", parameters, return type). Well-formed content representative of programming constructs. / Clear structure with identifiable spans (function name, parameters) and valuable patterns for learning span composition in programming context."}}
{"raw": "VertexInfo Class Reference Listof all members\nDetailed Description VertexInfo. Used to store vertices and indices. Source o3djs/debugjs\nConstructor 03dis_debug VertexInfo(opt_vertices, opt_indices)", "type": "mixed", "id": {"id": "8e9a00e3-45de-424e-9cd3-544b826a48bd"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs (class reference, constructor) and comments/documentation that can be segmented into meaningful spans for learning span composition in both contexts. However, the presence of natural language elements like \"List\" makes it less ideal as pure code training data but still valuable due to its structural clarity within mixed content. / The segment contains both programming constructs (class reference, constructor) and comments/documentation in a structured format that can help the model learn span segmentation for different types of content. / The segment contains both a class reference (natural language) and programming constructs, which can help the model learn span segmentation in diverse contexts. However, it lacks clarity due to missing punctuation or context clues for proper parsing into spans. / The segment contains a mix of class reference (natural language) and programming elements, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to formatting issues like missing spaces (\"Listof\" should be \"list of\", etc.). / The segment contains both a class reference and method signatures, which are clear structures suitable for span segmentation in the context of programming languages. It represents valuable patterns combining documentation (natural language) with code constructs that X-Spanformer could learn from to understand such contexts better."}}
{"raw": "03djs.primitives. VertexInfo.addTangentStreams number opt_semanticIndex Calculate tangents and binormals based on the positions, normals and texture coordinates found in existing streams. Parameters: opt_semanticInd The semantic index of the texture coordinate to use and the tangent and ex binormal streams to add. Defaults to zero 03djs primitives.", "type": "code", "id": {"id": "8b21d9e0-b7c6-4161-a9f6-908cec535861"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear semantic markers for span segmentation (e.g., function names like 'addTangentStreams', parameters descriptions). It is coherent but lacks natural linguistic structure due to its technical nature; however, it represents valuable patterns in both code semantics and parameterization. / The segment contains a mix of programming language syntax and comments, with clear semantic markers for potential span segmentation (e.g., function names like \"addTangentStreams\", parameters such as \"opt_semanticIndex\"). It represents valuable patterns in both code structure and natural language descriptions. / Clear structure with identifiable spans for tangents, binormals and semantic indices; well-suited to learning span composition in programming context. / Clear structure with identifiable spans for tangents, binormals; well-defined parameters and defaults indicative of programming patterns. / Clear structure with identifiable spans for parameters and descriptions, representing valuable patterns in programming syntax and semantics."}}
{"raw": "multiplicative_expression cast expression (MUL DIV MOD) cast expression\nX\ncast expression LPAREN ID RPAREN postfix_expression LPAREN basic type_specifier RPAREN postfix_expression unary_ expression\nunary_expression (PLUS | MINUS ) unary_expression", "type": "code", "id": {"id": "7b07ac9e-f968-4b34-b90f-a53182aafaa0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear syntactic structure with identifiable spans for expressions, operators, and types; well-suited to learn span segmentation in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming constructs. / Clear structured patterns of expressions and operators suitable for span segmentation in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming constructs. / Clear structure with identifiable spans for expressions, operators, and types; well-suited to learn span segmentation in programming constructs."}}
{"raw": "This property is read-only. bool 03d Param readOnly [inherited] If true the param is read only.", "type": "mixed", "id": {"id": "abb66134-ff55-4a6d-b1a0-ec4f8854bb0b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, with clear span boundaries for both the property name (\"read-only\") as an identifier phrase in English text style (natural), and its associated code attributes like \"bool\", \"[inherited]\", which are typical syntactic elements found within coding languages. It also includes inline documentation that is common practice among programmers to explain what a particular line or block of code does, thus providing valuable patterns for learning span segmentation across both natural language explanations in comments (natural) and programming constructs/code attributes (code). / The segment contains both a descriptive phrase and an inline comment, which are common in programming contexts; it provides clear examples of span segmentation between language constructs (natural vs. code). / The segment contains a mix of programming language syntax and documentation, with clear span boundaries for both the property description (\"This property is read-only\") as well as its type declaration (\"bool\"). It represents valuable patterns in terms of natural language explanation combined with code semantics which are beneficial to learn. / The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation; it represents valuable patterns in both human-readable text (comments) and technical constructs (code). / The segment contains a mix of language and technical terms, with clear indications for span segmentation (property name, boolean value). It is clean but lacks context or examples that could improve its training utility."}}
{"raw": "Returns:\nTrue if the param was removed. Member Data Documentation\nbool 03d RenderNode active [inherited] Setting false skips this render node. Setting true processes this render node. (ie, renders whatever it's supposed to render)", "type": "mixed", "id": {"id": "528ec34e-8442-42d0-933c-066c0482ad31"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation (natural language) and technical terms with clear span boundaries, useful for learning both contexts. / The segment contains both descriptive text and programming-related terms, which can help the model learn to distinguish between different types of spans in a context that includes multiple languages (natural language descriptions with technical code elements). / The segment contains both technical documentation (natural language) and programming concepts, which can help the model learn to distinguish between different types of spans in a hybrid context. / The segment contains a mix of documentation (natural language) and configuration settings for software rendering nodes, with clear span boundaries between descriptive text (\"Returns:\", \"Setting true processes this render node.\") and code-like expressions (\"bool\", \"[inherited]\", etc.). It is clean but lacks context to fully understand the purpose or function. / Clear distinction between documentation (natural language) and configuration settings/code snippets; spans can be identified for both types, representing valuable patterns for learning span composition in a tokenizer-free context."}}
{"raw": "Parameters:\nwidth The width of the RenderSurface in pixels height The height of the RenderSurface in pixels Returns:\nThe RenderSurface object:\nFileRequest 03d. Pack createFileRequest String type Creates a FileRequest to be used to asynchronously load a Texture:\nParameters:\ntype Must be \"TEXTURE\" Returns:\na FileRequest\nObiectBase 03d. Pack createObject String type_ name Creates an Object by Class name.", "type": "mixed", "id": {"id": "c0d71d62-90f8-4018-a5ac-1d96cca3e503"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and object-oriented terminology, which can help the model learn span segmentation in both contexts. However, it lacks coherence as it's not well-formed text; instead, it resembles code snippets or API documentation excerpts with parameters listed separately from their descriptions. / The segment contains a mix of parameter descriptions and object creation commands, which are structurally clear for span segmentation; however, the presence of different programming languages (JavaScript-like syntax) may pose challenges in learning consistent patterns across spans. / The segment contains a mix of parameter descriptions and object instantiation commands, which are structurally clear for span segmentation; it represents valuable patterns across both programming constructs (code) and descriptive language (natural). However, the presence of multiple languages within one block may require careful handling during training. / The segment contains a mix of parameter descriptions and object creation commands, which are structurally clear for span segmentation in both programming contexts (code) and descriptive text formats (natural language). It represents valuable patterns that can aid the model's understanding of different syntactic structures. / The segment contains both structured programming constructs and descriptive text, providing a variety of patterns for span segmentation in different contexts. However, the presence of typographical errors (\"ObiectBase\" instead of \"ObjectBase\") may slightly reduce clarity but still retains its compositional value as training data."}}
{"raw": "Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only. bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source.", "type": "mixed", "id": {"id": "3bcba4b8-4dc2-4ed3-80e4-4b4416ec47f8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to its informal structure (\"Its value\") and incomplete sentences (e.g., \"can not be set\"). / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a mixture context. However, it lacks clarity due to its informal structure (\"Its value\") and potential ambiguity without further contextual information. / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to its informal nature (\"Its value\") and incomplete sentence structure. / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to mixing natural text with code-like elements without clear separation or consistent formatting. / The segment contains both descriptive text and programming-related terms, showing a mix of language styles that can help the model learn span segmentation in diverse contexts."}}
{"raw": "+\nprimary_expression constructor variable or call expression literal value LPAREN expression RPAREN\nvariable_expression ID LBRACKET expression RBRACKET\n?\nvariable or call expression returns [03d String identifier, 03d String arglist] ID\nLBRACKET expression RBRACKET\n?\nLPAREN argument_expression_ list RPAREN\nconstructor vector_type_specifier matrix type_ specifier LPAREN expression COMMA expression )", "type": "code", "id": {"id": "8aff302a-babf-4090-86ac-0e9be49b9c7b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear syntactic structure with identifiable spans for programming constructs, suitable training data. / The segment lacks clarity and coherence, making it difficult to identify meaningful spans or learnable patterns for span segmentation; it's a mix of syntax-like elements without clear context. / The segment contains clear syntactic patterns of programming constructs, which are ideal for training a span-aware model on coding syntax and structure. Despite being somewhat terse with symbols like \"+\", it is still well-formed in terms of representing variable expressions within the context of an abstract language or pseudo-code format that could be beneficial to understand code semantics without relying heavily on tokenization. / The segment contains clear syntactic structures of programming language constructs, which are valuable for learning span segmentation in a tokenizer-free context. However, it lacks coherence as it's not an executable snippet but rather appears to be part of documentation or abstract syntax representation. / Clear syntactic structure representing programming constructs, useful for learning span segmentation in coding contexts."}}
{"raw": "createObject ( '03d. Transform' ) ;\nt.className =\n'03d. Transform' ;", "type": "code", "id": {"id": "651868a2-b376-4539-b97c-4dbcb1825284"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements for span segmentation; well-formatted and representative of programming constructs. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structured elements like function calls and object properties, suitable for learning span composition in programming contexts. / Clear structure with identifiable spans for class names and object creation; clean, well-formatted representation of programming constructs. / Clear structure with identifiable spans for object creation and class naming in programming context. Well-suited to learn span composition patterns typical of coding syntax."}}
{"raw": "CanvasPaint 03d ClearBuffer 03d Counter 03d. Curve\n03d DrawContext\n03d DrawElement\n03d DrawList\n03d", "type": "code", "id": {"id": "4f521b77-09d1-4dd8-9eb8-bb88e7cbaa41"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements representing function names and identifiers, suitable for learning span segmentation in programming context. / Clear, structured segments representing method names and properties typical in programming context; useful for learning span composition related to coding patterns. / Clear structure with identifiable spans related to programming constructs; clean and coherent for training purposes. / Clear structure with identifiable spans representing function names and parameters, suitable for learning span composition in programming context. / Clear structure with identifiable spans related to programming constructs, suitable for learning span segmentation in a coding context."}}
{"raw": "Elementmaterial [inherited] The Material for this element. String 03d NamedObjectname [inherited] The object's name.", "type": "code", "id": {"id": "1273207c-8558-4bd9-9513-d1e5c194d631"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear span patterns for programming elements; clean and coherent, representing valuable training data for a tokenizer-free model focused on coding syntax. / Contains both structured data (names, types) and unstructured descriptions (\"The Material for this element\"), representing a mix of patterns useful in span segmentation. / Clear spanable elements with consistent naming conventions, suitable for learning both syntax and semantics in a mixed context. / Clear, structured elements representing meaningful spans; clean and well-formatted for training purposes. / Clear structured elements with identifiable spans; represents valuable patterns for learning span composition in programming contexts."}}
{"raw": "[inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from: Passing in null will unbind any m parameter currently bound. Returns:\nTrue if the bind succeeded.", "type": "mixed", "id": {"id": "72abd384-300d-4c9b-84e6-4be0ce188c8e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of structured comments and parameter descriptions that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both documentation (natural language) and programming context (code). / The segment contains a mix of technical documentation (natural language) and programming concepts, with clear references to parameters (\"source_para\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context on how the binding process works or examples which could improve its utility as training data. / The segment contains a mix of documentation (natural language) and configuration-like statements, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to shorthand notation like \"[inherited]\" without context or explanation. / The segment contains a mix of documentation-style text and programming concepts, with clear references to parameters (\"source_para\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks explicit examples or varied contexts which could improve its utility as training data. / The segment contains a mix of descriptive text and structured parameter definitions, which can help the model learn both span segmentation in prose as well as syntactical patterns found within programming contexts. However, it lacks explicit examples with varied complexity that could further improve its utility for training purposes."}}
{"raw": "DrawPass\n03d Effect\n03d FunctionEval\n03d IndexBuffer\n03d Material\n03d ParamArray 93d", "type": "code", "id": {"id": "782337e5-33c2-4ca6-afaf-ce74f9559038"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured commands typical for shader programming; well-suited to learn span segmentation in a coding context. / Clear, structured list of programming-related terms suitable for span segmentation and learning patterns in a coding context. / Clear structured elements representing function names and parameters, suitable for span segmentation in programming context. / Clear, structured list of programming constructs; well-suited for learning span segmentation in a coding context. / Clear, structured list of function names likely representing meaningful spans in a programming context; clean and coherent for training purposes."}}
{"raw": ".unbindOutput Param destination_param [inherited] Breaks a specific param-bind output connection on this param: Parameters:\ndestination_param param to unbind. 03d.", "type": "mixed", "id": {"id": "6a5a4211-91e3-40cf-87c7-fbb11acab352"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear parameters that can be segmented into meaningful spans for learning purposes. However, the presence of an unclear character (\"03d.\") may slightly reduce its score due to potential ambiguity in interpretation or formatting errors. / The segment contains a mix of programming language syntax and documentation, with clear structured elements like function names (\"unbindOutput\") that can be segmented into meaningful spans for training purposes. It is clean but lacks context or additional examples to improve its utility as standalone data. / The segment contains a mix of descriptive text and programming-related terms, with clear structure for span segmentation; however, the presence of an ambiguous symbol (03d) reduces clarity slightly. / The segment contains a mix of descriptive text and programming-related terms, with clear delimiters for potential spans like \".unbindOutput\", \"destination_param\", etc., which can be useful in learning span segmentation patterns across different contexts. / The segment contains a mix of programming language syntax and documentation, with clear parameter names that can be segmented into meaningful spans for learning purposes. Despite the presence of an unusual character sequence (\"03d.\"), it still maintains sufficient clarity to serve as training data."}}
{"raw": "Setting this has no meaning to 03D, but is useful for debugging and for the functions Client_getObjects, Pack-getObject, RenderNode getRenderNodesByNamelnTree and RenderNode:getTransformsByNameInTree which search for objects by name. Reimplemented from 03d NamedObjectBase:", "type": "mixed", "id": {"id": "6c2149d0-34eb-446d-8121-8bf8b51c526d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and function names, which can be segmented into meaningful spans for learning span composition in both programming contexts (code) and explanatory text (natural language). It is clean but lacks context that could improve its utility as training data. / The segment combines both programming concepts and debugging practices, providing a rich context for learning span segmentation in diverse contexts. It includes function names which are clear spans to be learned by the model. However, it lacks explicit natural language explanations that could further enhance its utility as training data. / The segment contains a mixture of technical descriptions and function names, which are structurally clear for span segmentation; it is clean but lacks context to fully represent the domain's patterns. / The segment contains a mix of technical descriptions and function names, which can help the model learn span segmentation for both human-readable text (natural language) and programming constructs (code). Despite being somewhat informal (\"Setting this has no meaning to\"), it still maintains structural clarity with identifiable spans like \"Client_getObjects,\" making it valuable training data. / The segment contains a mix of technical descriptions and function names, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typos (\"NamelnTree\" should be \"NameNodeTree\") and could benefit from further cleaning for optimal training utility."}}
{"raw": "'03d. WorldViewProjectionInverseTransposeParamMatrix4'\nReturns:\nThe newly created Param or null on failure. Param 03d. ParamObject-getParam String param_name ) [inherited] Searches by name for a Param defined in the object:\nParameters:\nparam name Name to search for Returns:\nThe Param with the given name, Or null otherwise.", "type": "mixed", "id": {"id": "49c1a3b1-07bb-4772-bff5-73a4a1a56521"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines both programming language syntax and documentation, which can help the model learn to distinguish between different types of spans in a context that includes variable names (code) alongside descriptions or comments about them (natural). However, it lacks clarity due to potential misinterpretation as code. / The segment contains a mix of programming language syntax and documentation, with clear structured elements like function names ('WorldViewProjectionInverseTransposeParamMatrix4'), return types (e.g., 'Returns:'), parameters descriptions ('Parameters:', followed by parameter details). It represents valuable patterns for learning span composition in both code structure and natural language explanations. / The segment contains a mix of programming concepts and language, with clear structure for learning span segmentation in both contexts. However, the presence of '03d' as an identifier could be ambiguous without context; it may represent code or natural text depending on usage which might need clarification during training data curation. / The segment mixes programming concepts with a lack of clear, coherent sentences or phrases that can be easily segmented into meaningful spans for training purposes. It also lacks context and clarity needed to understand the structure fully. / Clear structured elements with identifiable spans, representing valuable patterns for learning span composition in programming context."}}
{"raw": "[inherited] The object's name. This property is read-only.", "type": "mixed", "id": {"id": "ef34a1ff-bbb5-4194-8971-a0bcc170a659"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation language (\"The object's name\") and programming concepts (read-only property), which can help the model learn span segmentation in both contexts. / The segment contains a mix of markup language and plain text, with clear indication that 'The object's name' is an inherited property which can be segmented into meaningful spans for training purposes. It represents valuable patterns in both natural language descriptions (e.g., \"This property's read-only\") and code-like syntax (\"[inherited]\"). / The segment contains a mix of documentation-style text and programming-like syntax, which can help the model learn to recognize span boundaries in both contexts. However, it lacks sufficient length or complexity for robust training data evaluation. / The segment contains a mix of documentation style (natural language) and programming concepts, with clear span identification for both the property name \"The object's name\" as an inherited attribute in object-oriented code design. It is clean but lacks context which might be necessary to fully understand its usage or purpose within larger systems; however, it still provides valuable patterns related to inheritance properties that can aid learning about mixed content types. / The segment contains a mix of language and markup, with clear span boundaries for \"The object's name\" as an inherited property description in programming context. It is clean but lacks contextual richness needed to fully represent the domain's patterns."}}
{"raw": "int literal DECIMAL LITERAL literal value DECIMAL LITERAL FLOAT LITERAL STRING LITERAL+ T FALSE T TRUE float literal FLOAT LITERAL NOT NOT_EQUAL AND LPAREN RPAREN MUL MUL ASSIGN PLUS PLUS PLUS ADD ASSIGN COMMA MINUS MINUS MINUS SUB ASSIGN DIV DIV ASSIGN MOD ASSIGN COLON SEMI LESS LESSEQUAL ASSIGN EQUAL GREATER GREATEREQUAL QUESTION LBRACKET RBRACKET LCURLY OR RCURLY DOT BITWISE NOT BITWISE SHIFTL BITWISE SHIFTR BITWISE AND BITWISE OR BITWISE XOR BITWISE SHIFTL ASSIGN BITWISE SHIFTR ASSIGN BITWISE AND ASSIGN", "type": "code", "id": {"id": "656011b5-296f-4c77-a842-08a18e62a9eb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8200000000000001, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured representation of programming constructs and operators suitable for learning span segmentation in a tokenizer-free context. / The segment contains clear, structured programming constructs that can be segmented into meaningful spans for learning span composition in a tokenizer-free context. It is clean and well-formed as it represents an unambiguous sequence of operators used within expressions or statements typical to many coding languages like C-like syntax. / The segment contains a clear sequence of programming constructs and operators, which can be segmented into meaningful spans for learning span composition in the context of parsing or understanding arithmetic expressions within coding languages. It is clean from an instructional perspective but lacks natural language elements to provide compositional value outside its domain-specific use case. / The segment contains a clear sequence of programming syntax and constructs, which are valuable for learning span segmentation in the context of coding languages. It is well-formed with identifiable patterns like operators, literals, parentheses grouping expressions that can be segmented into meaningful spans suitable as training data for an X-Spanformer model focused on code understanding. / Clear structure with distinct programming constructs and operators, representing valuable patterns for learning span composition in a coding context."}}
{"raw": "[inherited] Unique id of the object:\nThis id will be unique, even across multiple O3D clients in the same page. This property is read-only: String 03d NamedQbiect name [inherited] The object's name. Setting this has no meaning to 03D, but is useful for debugging and for the functions ClientgetObjects, Pack-getObject, RenderNode_getRenderNodesByNameInIree and RenderNode-getTransformsByNameInTree which search for objects by name. Reimplemented from 03d NamedQbiectBase:\nNumber 03d FieldnumComponents", "type": "mixed", "id": {"id": "cf87f948-fe6b-4bdd-ac86-a680c079b132"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and properties that are not clearly structured for meaningful span segmentation; lacks coherence as it appears to be an excerpt from documentation with incomplete sentences, making its utility questionable. / The segment contains a mix of documentation-style text and programming-related terms, with clear identifiers like \"Unique id\" that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully evaluate its training utility without additional examples or surrounding content. / The segment contains a mixture of structured data (code-like elements) and descriptive text, which can help the model learn to differentiate between spans in both contexts. It has clear identifiers like \"Unique id\" that are useful for span segmentation training purposes. / The segment contains both structured programming elements (fields, methods) and descriptive text that can be segmented into meaningful spans for a span-aware model to learn from. It is clean but lacks context which could improve its utility as training data. / The segment contains a mix of documentation-style text and programming-related terms, which could help the model learn span segmentation in both contexts. However, it lacks clear examples for some constructs like \"FieldnumComponents.\" More varied segments are needed to improve learning outcomes."}}
{"raw": "ParamObject 03d Primitive 03d RenderFrameCounter 03d RenderNode\n03d RenderSurfaceSet\n03d Sampler 93d SecondCounter 03d Shape 03d Skin 03d SkinEval 03d", "type": "code", "id": {"id": "bac1e16f-0817-4993-bf2d-173812cd161c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements representing meaningful spans for a tokenizer-free, span-aware model in the context of programming constructs. / Clear structured elements representing meaningful spans for a tokenizer-free, span-aware model; well-suited to learning patterns in programming constructs. / Clear, structured representation of programming constructs; spans can be segmented into meaningful identifiers and types for learning purposes. / Clear, structured representation of programming constructs; spans can be identified as individual elements or groups (e.g., \"ParamObject\", \"RenderFrameCounter\"). Well-formed for training purposes and represents valuable patterns in learning span composition within a coding context. / Clear, structured representation of programming constructs; spans can be identified as individual elements or groups relevant to a coding context."}}
{"raw": "ClearBufferclearColor The color to clear the buffer in RGBA Float4 format:\nbool 03d ClearBuffer_clearColorFlag true clears the current render target's color buffer to the clear color: false does not clear the color buffer", "type": "mixed", "id": {"id": "ad88162b-a2b4-4401-9dcc-c6e55c289b0a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and descriptive text, providing a good mix of structured elements for learning span segmentation in different contexts. / The segment contains a mix of programming concepts and language, with clear spans for both the function name \"ClearBuffer\" as well as its parameters (\"clearColorFlag\") which are identifiable in code context; it is clean but lacks natural linguistic structure. / The segment contains both programming language syntax and descriptive text, showing clear structure for span segmentation with terms like \"ClearBuffer_clearColorFlag\" which can be identified as a single entity in the context of code documentation. It is clean but lacks contextual coherence due to mixing languages; however, it still represents valuable patterns that X-Spanformer could learn from mixed content types. / The segment contains both programming language syntax and descriptive text, providing a clear example of span segmentation between commands/flags (e.g., \"ClearBuffer_clearColorFlag\") and their descriptions (\"true clears the current render target's color buffer to the clear color\"). It is well-formed for training purposes. / The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation between commands/flags (e.g., \"ClearBuffer_clearColorFlag\", \"true\") and descriptions (\"clears the current render target's color buffer to the clear color\"). It is coherent but lacks context."}}
{"raw": "03d. BezierCurveKey Class Reference\nInherits 03d. CurveKey:\nList of allmembers\nDetailed Description\nAn CurveKey that uses a bezier curve for interpolation between this key and the next\nPublic Member Functions\ndestroy bool isAClassName (String class_name)\nPublic Attributes\nFloat2 inTangent Float2 outTangent Number input Number output Id clientld", "type": "mixed", "id": {"id": "a633f17b-040d-4689-96ae-c29d4b60ddfd"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of class names, attributes with types and values (code), along with descriptions that are in English prose form which is beneficial for training an encoder to understand both natural language context as well as code constructs. It has clear structural elements like method signatures (\"destroy bool\") indicating span boundaries suitable for learning patterns related to programming languages mixed with documentation style text. / Clear structure with class references, attributes and methods indicative of programming constructs; good for learning span segmentation in a coding context. / The segment contains a mix of class names, attributes and descriptions which can be segmented into meaningful spans for learning span composition in both programming context (code) as well as technical documentation language (natural). / The segment contains both structured programming elements (class, member functions) and descriptive text that can help the model learn span segmentation in a context combining coding constructs with documentation language. / Clear structure with class references, attributes and methods; represents valuable patterns for learning span composition in programming context."}}
{"raw": "Number 03d Primitive numberVertices The number of vertices the primitive has. Shape 03d Element_owner [inherited] The current owner of this Draw Element: Pass in null to stop being owned. Note: Elements are referenced by the Pack they are created in and their owner: If the Element is removed from its Pack then setting the owner to null will free the Element: Or; visa versa, if you set the Element's owner to null then removing it from its Pack will free the Element:\nArray 03d", "type": "code", "id": {"id": "b90e0d4f-560c-4c32-b3ed-1786ecbcadd2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured programming concepts with meaningful spans like \"Primitive numberVertices\" and ownership patterns in elements. Well-suited for learning span segmentation within a coding context. / Clear distinction between descriptive text and technical terms related to a programming context, with identifiable spans for both elements. / Clear structure with meaningful spans; represents valuable patterns for learning span composition in programming context. / The segment contains a mix of technical descriptions and structured data (primitive numbers, elements), which can help the model learn span segmentation in both contexts. However, it lacks clarity due to fragmented sentences; thus it's not perfect but still valuable for training purposes. / Clear structure with identifiable spans related to programming concepts; clean and coherent for training purposes."}}
{"raw": "Param updateInput [inherited] If true, this param will make sure its input param is up to date when using it as a source. Default = true. This is for helping with Param cycles. If paramA gets its value from paramB and paramB gets its value from paramA: Ifyou go paramA:value, paramB will evaluate then copy to paramA If you go paramB.value, paramA will evaluate then copy to paramB. Ifyou set paramB updateInput = false, then: If you go paramA.value, paramB will evaluate then copy to paramA. If you go", "type": "mixed", "id": {"id": "89499f2a-4344-4c69-98c9-43feac88fea0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn span segmentation in both contexts; however, it lacks clarity due to potential misinterpretation as code or natural language. Further refinement may be needed for optimal training utility. / The segment contains a mix of technical descriptions and parameter settings, which can be segmented into meaningful spans for learning span composition in both programming contexts (code) and explanatory text (natural language). However, the explanation is somewhat convoluted; clarity could improve training utility with better formatting. / The segment contains a mix of technical language and configuration-like instructions, with clear parameter references that can be segmented into meaningful spans for learning span composition in both contexts. / The segment contains a mix of technical documentation and programming concepts, with clear parameter descriptions that can be segmented into meaningful spans for learning span composition in both contexts. However, the text is somewhat repetitive which may affect clarity slightly but still retains its compositional value as training data. / The text contains a mixture of technical descriptions and pseudo-code-like structures, which can help the model learn span segmentation in both programming contexts (code) as well as explanatory prose that describes how parameters interact within an algorithmic process. However, there are some inconsistencies with punctuation (\"Ifyou go\" instead of \"If you go\") affecting clarity slightly but not significantly enough to discard it entirely for training purposes."}}
{"raw": "03d. Shape\n!03djs primitives_VertexInfo 03djs.primitives createPlaneVertices\nnumber\nwidth\nnumber depth number subdivisionsWidth number subdivisionsDepth !o3djsmath Matrix4 opt_matrix Creates XZ plane vertices The created plane has position, normal and uv streams.", "type": "mixed", "id": {"id": "9b52cae6-b84f-4654-b1f0-30224ddc8e6e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (\"03djs primitives_VertexInfo\"), variable assignments (e.g., \"number width\", \"Matrix4 opt_matrix\"). It is coherent but lacks context or natural language explanation. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (\"03djs primitives_VertexInfo\"), variable assignments (e.g., \"number width\", \"opt_matrix Creates XZ plane vertices\"). It is coherent but lacks natural language context. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans such as function names (\"03djs primitives_VertexInfo\"), variable assignments (e.g., \"number width\", \"Matrix4 opt_matrix\"), which are valuable patterns to learn. However, the presence of non-standard characters like '0' instead of 'o', mixed casing ('Opt_Matrix'), and lack of punctuation may affect clarity slightly but still retain compositional value for training purposes. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans; however, it lacks coherence due to the presence of both human-readable text (\"Shape\", \"Create XZ plane vertices\") and code-like syntax (e.g., \"!03djs primitives_VertexInfo\"). / The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (`03djs primitives_VertexInfo`), variable declarations (e.g., `number width number depth number subdivisionsWidth number subdivisionsDepth`), and code statements. It is coherent but lacks context or explanation that could improve its training utility."}}
{"raw": "BITWISE XOR ASSIGN\n'^='\nBREAK break' BUFFER buffer' ; COLUMN MAJOR column major' ; CBUFFER cbuffer' CENTROID centroid' T CONST const' CONTINUE continue' ; DISCARD discard\" DO do ' ELSE 'else' EXTERN 'extern' T FALSE false' ; FLOAT (('f' |'F') ( '1' |'L') ( '0 ' | '0' ) ( 'a' | 'A') ( 't' | 'T') )", "type": "code", "id": {"id": "8ba8a6c6-71a5-450c-9405-896859f82ff6"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, well-defined spans representing programming constructs and constants; suitable for learning span segmentation in a coding context. / Clear structure with programming constructs, useful for learning span segmentation in a coding context. / Clear, well-defined programming constructs and keywords suitable for learning span segmentation in a coding context. / Clear structure with programming constructs and keywords, useful for learning span segmentation in coding context. / Clear and distinct programming constructs; useful for learning span segmentation in a coding context."}}
{"raw": "The offset of this field in the Buffer in bytes. This property is read-only:\nNumber 03d Field size [inherited] The size of one element of this field. This property is read-only:\n03d. UInt32Field Class Reference\nInherits 03d Field\nList_of all members\nDetailed Description\nfield that contains integers.", "type": "mixed", "id": {"id": "b0deefb9-9efd-4075-8f9a-4e9517043a3a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines both descriptive text and technical details about a field in programming, which includes clear spanable elements like \"offset,\" \"Buffer,\" \"[in bytes],\" etc., representing valuable patterns for learning span composition across natural language descriptions of code constructs. / The segment combines both technical descriptions and structured data, which can help the model learn span segmentation in a context that includes programming concepts alongside descriptive text. However, it lacks clarity due to repetition (\"The offset of this field...\") and could be improved for better training utility by removing redundancy or clarifying its structure further. / Clear structure with distinct segments; useful for learning span segmentation in programming contexts. / The segment combines both descriptive text and technical details about a field in programming, which can help the model learn span segmentation for different types of content. / The segment combines both descriptive text and technical details about a field in programming, showing clear structure for span segmentation with terms like \"offset,\" \"Buffer,\" \"Field size,\" etc., which are valuable patterns to learn from. It is clean but lacks context or examples that could enhance its utility as training data."}}
{"raw": "o3djs particles OneShot I03d Transform opt_parent o3djs particles ParticleEmitter createOneShot Creates a OneShot particle emitter instance.", "type": "mixed", "id": {"id": "c1c24a22-8087-4815-8209-f55fa67ed0db"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terms and descriptions, with clear spans for both syntax (code constructs) like \"o3djs particles\" or function calls (\"createOneShot\"), as well as natural language explanations such as \"Creates a OneShot particle emitter instance.\" This combination provides valuable patterns in span segmentation across different content types. / The segment contains a mix of programming terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both contexts. / The segment contains a mix of programming terms and object names that can be segmented into meaningful spans, reflecting the structure found in software documentation or API references which are valuable for learning span composition. / The segment contains a mix of programming terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both domains. It is clean but lacks context to fully understand the code's purpose or function within its larger scope. / The segment contains a mix of programming terminology and function calls, which can help the model learn span segmentation for both language constructs (e.g., \"OneShot\", \"ParticleEmitter\") and code-specific elements (\"o3djs particles\")."}}
{"raw": "To make a particle system be continuous set this to match the lifeTime.", "type": "mixed", "id": {"id": "fad335ce-46a3-4e84-b8d3-08199138c732"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear instruction with identifiable spans (\"particle system\", \"continuous set this to match the lifeTime\"), representing valuable patterns for learning span composition in both programming contexts and natural language instructions. It is clean, coherent, but lacks context which might be beneficial for more comprehensive training data. / The segment contains a clear instruction with both imperative language and technical terms, which can help the model learn to distinguish between different types of spans in programming contexts combined with human instructions. / The segment contains a clear instruction with both technical terms (\"particle system\", \"lifeTime\") and programming concepts, providing valuable patterns for learning span composition in the context of software development documentation or code comments. / The segment contains a mix of programming instructions and comments, with clear span boundaries for both the command (\"make\") and its argument (\"particle system\"). It is clean but lacks context which might be necessary to understand fully in training scenarios. / Contains a mix of programming instructions and comments, with clear span for the actionable instruction (\"set this to match\"). The structure is clean enough that it can be used as an example where natural language meets code semantics."}}
{"raw": "; FOR for' IF 1f' T IN in' INLINE inline' ; T INOUT inout' T LINEAR linear' MATRIX ('m' | 'M' )", "type": "code", "id": {"id": "55f74625-e2f7-4afc-978d-3d0c770cc1d0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear programming constructs and patterns for span segmentation; well-suited to learning tokenizer-free encoding of code segments. / Clear programming constructs and keywords; well-suited for learning span segmentation in a coding context. / Clear programming constructs and keywords identifiable as spans; well-suited for learning span composition in a coding context. / Clear programming constructs and keywords; well-suited for learning span segmentation in a coding context. / Clear programming constructs and patterns for span segmentation; well-defined syntax elements."}}
{"raw": "ClearBuffer clearDepthFlag true clears the current render target's depth buffer to the clear depth value. false does not clear the depth buffer:\nNumber 03d ClearBuffer_clearStencil The value to clear the stencil buffer to (0 - 255).", "type": "mixed", "id": {"id": "66ff15a0-f0ff-4480-b9e1-57865de922b2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines both programming instructions and numerical values, which can help the model learn span segmentation for different types of content within a single context. However, it lacks clarity in separating natural language explanations from code constructs due to its brevity. / Contains both programming instructions and numerical values, showcasing clear span segmentation opportunities in a technical context. / The segment contains a mix of programming concepts and values, with clear structure for span segmentation; however, it lacks context which could be beneficial in training. / The segment contains both programming instructions and numerical values, demonstrating clear patterns for span segmentation in a coding context with embedded constants. / Contains both programming concepts and values, useful for learning span segmentation in a mix of contexts."}}
{"raw": "Public Member Functions\nsetAt Number start_index; Array values) Array getAt Number start_index, Number num_elements) bool isAClassName (String class_ name)\nPublic Attributes\nNumber numComponents Buffer buffer\nNumber offset\nNumber size\nString name Id clientld String className", "type": "mixed", "id": {"id": "306d526c-8713-4f54-933c-23fe26369cff"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans for functions, attributes; well-suited to learn span segmentation in programming context. / The segment contains a mix of programming constructs and attributes, with clear spanable elements like function names (\"Public Member Functions\"), parameters (e.g., \"Number start_index\", \"Array values\"), method calls (\"getAt\"), boolean expressions (\"isAClassName\"), class members (\"public Attributes\"), variable declarations (\"String name Id clientld String className\"). It is well-formed and clean, representing valuable patterns for learning span composition in both code structures. / Clear structure with identifiable spans; combines both class-like structures and attribute definitions, representing valuable patterns for learning span segmentation in a mixed context. / Clear structure with identifiable spans; useful for learning span segmentation in programming context. / Clear structure with identifiable spans; represents both class/object-oriented programming patterns and attribute/method definitions, enhancing span composition learning for a tokenizer-free model."}}
{"raw": "Viewport 03d. Matrix4AxisRotation 03d Matrix4Composition 03d Matrix4Scale 03d Matrix4Translation 03d ParamOp2FloatsToFloat2 93d ParamQp3FloatsToFloat? 03d ParamOpAFloatsToFloat4 03d", "type": "code", "id": {"id": "1f98cb3f-3e86-4b19-ac6f-07ff18a14066"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured programming constructs identifiable as spans; clean and coherent for training purposes. / Clear structured elements representing span composition; clean and well-formatted for training purposes. / Clear, structured programming constructs; spans are identifiable as function names and parameters. Well-suited for learning span segmentation in a coding context. / Clear structured elements representing meaningful spans for a tokenizer-free span-aware model; well-suited to learning patterns in programming constructs. / Clear, structured programming constructs with identifiable spans for learning; well-suited to X-Spanformer training."}}
{"raw": "Id 03d ObjectBase clientId [inherited] Unique id of the object. This id will be unique, even across multiple 03D clients in the same page. This property is read-only\nParam 03d Param inputConnection [inherited] The input connection for this param:\nThis property is read-only:", "type": "mixed", "id": {"id": "bd3da256-dd02-4492-bc41-ac154425e813"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of identifiers and descriptions that can be segmented into meaningful spans, such as \"Id\", \"[inherited]\", etc., which are useful for learning span composition in both code-like structures (e.g., property names) and natural language explanations (\"Unique id\"). / The segment contains a mix of structured identifiers and descriptions, with clear separation between object properties (spans) that can be used for training span segmentation in both programming contexts and documentation language. / The segment contains a mix of descriptive text and structured data (ID, Param), which can help the model learn both span segmentation in human language as well as recognizing patterns typical for programming contexts like identifiers or parameters with their descriptions. However, it lacks coherence due to its fragmented nature; thus it's not ideal but still valuable enough to be kept for mixed-context learning purposes. / The segment contains a mix of structured identifiers and descriptions, which can help the model learn to differentiate between different types of spans in both programming contexts (IDs) and descriptive text. However, it lacks clarity due to repetition (\"inherited\" appears twice). / The segment contains a mix of structured identifiers and descriptions, with clear patterns for span segmentation that can be useful in training the model to understand both programming constructs (e.g., object properties) and descriptive text elements. However, it lacks context which might affect its utility as standalone data."}}
{"raw": "WorldViewParamMatrix4 Class Reference\nInherits 03d ParamMatrix4;\nList of allmembers\nDetailed Description\ntype of ParamMatrix4 that supplies the current world view matrix at render time.", "type": "mixed", "id": {"id": "748378d2-e343-4356-b42d-005a8332581e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of class reference notation and descriptive text, with clear structured elements like \"WorldViewParamMatrix4 Class Reference,\" which can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples that could improve its training utility. / The segment contains a mix of class reference notation and descriptive text, providing both structured (class name) and unstructured elements that can help the model learn span segmentation in different contexts. / The segment contains a mix of class reference notation and descriptive text, with clear structure for span segmentation into terms like \"WorldViewParamMatrix4 Class Reference,\" inheritance notations (\"Inherits\"), member listings (\"List of allmembers\"), descriptions (\"Detailed Description type of ParamMatrix4 that supplies the current world view matrix at render time.\"), which are valuable patterns to learn. / Clear mix of class reference (code) and descriptive text, representing both structured programming elements and explanatory prose. / The segment contains a mix of class reference notation (code) and descriptive text, which can help the model learn span segmentation for both programming constructs (\"WorldViewParamMatrix4 Class Reference\", \"Inherits\") as well as natural language descriptions (\"Detailed Description\")."}}
{"raw": "Number num components\nDefines a field on this buffer\nNote: Creating a field after having allocated the buffer is an expensive operation as the data currently in the buffer has to be shuffled around to make room for the new field. Parameters:\nfield_type\ntype of data in the field. Valid types are \"FloatField\" \"UInt32Field\" \"UByteNField\".", "type": "mixed", "id": {"id": "ee55537a-0d45-4538-914a-1d289663c512"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical terms related to buffer fields, which can help the model learn span segmentation for both human-readable descriptions (\"Number num components\", \"Defines a field on this buffer\") and specific programming concepts (\"field_type\"). / The segment contains a mix of descriptive text and technical specifications, which can help the model learn to distinguish between different types of spans in both domains. It is structured clearly with identifiable components like field definitions that are common patterns for span segmentation tasks involving code documentation or configuration descriptions. / The segment contains a mix of descriptive text and technical terms related to buffer fields, which can help the model learn span segmentation for both human-readable descriptions (\"Number num components\", \"Defines a field on this buffer\") as well as specific programming constructs (e.g., parameter names like \"field_type\"). / The segment contains a mix of descriptive text and programming-related terms, which can help the model learn span segmentation in both contexts. However, it lacks clear examples for each type separately; thus it's not ideal as standalone training data but could be useful when combined with other segments. / The segment contains a mix of descriptive text and programming-related terms, with clear delineation between the explanation (\"Defines a field on this buffer\") and technical specifications (field types). It is clean for training purposes but lacks contextual examples or varied sentence structures that could improve its utility."}}
{"raw": "ClearBuffer clearStencilFlag true clears the current render target's stencil buffer to the clear stencil value.", "type": "code", "id": {"id": "27bb97b7-3ed4-4aed-9b99-35867b8f2411"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear programming concept with identifiable spans such as function names, parameters (e.g., \"clearStencilFlag\"), and descriptions (\"clears the current render target's stencil buffer to the clear stencil value\"). It is clean for training purposes from an NLP perspective. / The segment contains a clear programming-related term (\"ClearBuffer\") and an associated flag value, representing valuable patterns for learning span composition in the context of coding language semantics. / The segment contains a clear command with parameters that can be segmented into meaningful spans for learning, representing valuable patterns in programming language syntax and semantics. It is clean and well-formed as part of the target domain (code). / The segment contains a clear command with parameters that are easily identifiable as meaningful spans for learning span composition in the context of programming language constructs. It is clean and well-formed, representing valuable patterns relevant to X-Spanformer training data focused on coding syntax understanding. / The segment contains a clear, structured command with identifiable spans for the 'ClearBuffer' function and its parameters in programming context. It's clean, well-formed, representing valuable patterns for learning span composition within coding constructs."}}
{"raw": "String 03d NamedObjectBase name [inherited] The object's name. This property is read-only:", "type": "mixed", "id": {"id": "7bc27377-a2bc-4878-b54a-152937149d4e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear spans for the object name (\"String 03d\") that can be used to learn span segmentation in both natural text (documentation) and code constructs. However, it lacks coherence as an isolated example; additional context would improve its utility. / The segment contains a mix of programming language syntax and documentation, with clear span boundaries for both the identifier 'String' as part of an object name in code ('03d NamedObjectBase') and its descriptive text ('The object's name'). It is clean but lacks context. / The segment contains a mix of programming-like syntax and comments, which can be useful for learning span segmentation in both contexts. However, the clarity could improve with better formatting or additional context to enhance training utility. / The segment contains a mix of programming language syntax and comments, which can be useful for learning span segmentation in both contexts. However, the clarity could improve by separating syntactic elements from descriptive text. / The segment contains a mix of programming concepts and documentation, with clear spanable elements like \"String\", \"[inherited]\", which are useful for learning both syntax (code) patterns as well as natural language descriptions in technical contexts. However, the lack of context makes it less ideal compared to fully fleshed-out examples."}}
{"raw": "Note that modifications to this array [e.g. push()] will not affect the underlying ParamObiect; while modifications to the array's members will affect them:\nThis property is read-only:\nPrimitiveType 03d Primitive_primitiveType The type of primitive the primitive is (i.e,, PrimitivePOINTLIST; Primitive. LINELIST, Primitive. TRIANGLELIST; etc.)", "type": "mixed", "id": {"id": "91a447a8-2abf-4640-8f9c-08abe99ede7d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical notes and programming concepts, with clear spanable elements like array modifications (e.g., push()), read-only properties (\"This property is read-only:\"), primitive types (\"Primitive_primitiveType\"), which are valuable for learning the composition in both natural language explanations and code constructs. / The segment contains both structured programming concepts and comments, which can help the model learn span segmentation in a coding context with embedded explanations. / The segment contains a mix of comments, programming language constructs (e.g., array references), and technical terms that can be segmented into meaningful spans for learning purposes. Despite some informal phrasing (\"[e.g.]\"), it is clean enough to serve as training data with minor adjustments. / The segment contains a mixture of comments and programming constructs, with clear spans for both the note/comment (\"Note that modifications...\") as well as technical terms like \"ParamObiect\" which can be useful in learning span segmentation across different contexts. / The segment contains a mix of programming concepts and documentation, with clear structure for learning span segmentation in both contexts. However, the presence of typographical errors (\"Primitive_primitiveType\" instead of \"Primitive primitiveType\") may affect clarity slightly but does not significantly detract from its overall utility as training data."}}
{"raw": "bool 03d. ParamObject removeParam Param param Removes a Param from a ParamObject: [inherited]\nThis function will fail if the param does not exist on this ParamQbject or if the param is unremovable. Parameters:\nparam param to remove.", "type": "mixed", "id": {"id": "c24ef9e6-0ac7-40a1-a483-92b92893c5bd"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear structured elements like function names (\"removeParam\"), parameters (\"param param to remove.\"), which are valuable for learning span segmentation in both code context (e.g., \"bool\", \"03d.\", \"[inherited]\") and natural language descriptions. / Clear distinction between language and programming constructs; spans can be identified for both types, representing valuable patterns in span segmentation across different domains. / The segment contains both programming language keywords and comments, demonstrating a clear structure with identifiable spans for learning purposes. It includes function names (\"removeParam\"), parameters (\"param param to remove.\"), code-like syntax (e.g., \"bool\", \"03d.\", \"[inherited]\") as well as natural language explanations that are coherent within the context of programming documentation. / The segment contains a mix of programming concepts and documentation, with clear spans for both the function name \"removeParam\" as well as its parameters description which are valuable patterns to learn span segmentation in code context. / The segment contains a mix of programming language syntax and comments, with clear indications for parameter removal in an object context; it has meaningful spans that can be learned by the model."}}
{"raw": "see http://developer:mozilla org/en/DOMlevent initKeyEvent Parameters: eventName one of 'keypress' , 'keydown' or 'keyup' . charCode the character code for the key: keyCode the key code for the key: control whether the control key is down: alt whether the alt/option key is down_ shift whether the shift key is down: meta whether the meta/command key is down: number 03djs.event-getEventKeyChar ! Event event Extracts the key char in number form from the event; in a cross-browser manner", "type": "mixed", "id": {"id": "403c3a69-d9aa-46ca-9f0c-524cde577d4c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment mixes URLs, programming concepts (DOM event parameters), and a mix of English text with technical terms; lacks clear structure for meaningful span segmentation. / The segment contains a mix of URLs, programming concepts (DOM event parameters), and descriptions that can be segmented into meaningful spans for learning span composition in both contexts. However, the presence of special characters like ':', ' ', '_', and punctuation may pose challenges during training due to potential tokenization issues; thus it is not perfect but still valuable as mixed content. / The segment mixes URLs, programming terms (like 'event', 'keyCode'), and a mix of English words with punctuation; lacks clear structure for meaningful span segmentation. / The segment contains a mix of URLs, programming parameters descriptions (natural language), and specific key codes which are clear spans for the model to learn from. It's clean but lacks contextual coherence as it jumps between different types without transitions or explanations. / The segment contains a mix of URLs, programming concepts (DOM event parameters), and descriptions that can be segmented into meaningful spans for training purposes; however, it lacks clarity due to the presence of special characters like ':', which may confuse tokenization processes."}}
{"raw": "( 'n' | 'N') ( 'g' | 'G' ) ; STRUCT struct' SWITCH switch TBUFFER tbuffer TEXTURE ('t' | 'T') ( 'e' | 'E' ) ( 'x'|'X') ('t' | 'T') ( 'u' | 'U') ('r' | 'R' ) ( 'e' | 'E' ) ; TEXTURELD TexturelD' ; TEXTUREIDARRAY TexturelDArray' ; TEXTUREZD Texture2D' ; TEXTUREZDARRAY Texture2DArray' ; TEXTUREZDMS Texture2DMS TEXTUREZDMSARRAY Texture2DMSArray' 1 TEXTURE3D Texture3D ' TEXTURECUBE TextureCUBE TEXTURECUBEARRAY TextureCUBEArray' TEXTURERECT TextureRECT ' T TRUE true TYPEDEF typedef' UNIFORM uniform VECTOR ('v' |", "type": "code", "id": {"id": "acac8bc7-b122-47c5-b2eb-cd22ac4cb869"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements representing programming constructs, suitable for learning span segmentation in a coding context. / Clear, structured programming constructs with consistent naming patterns for spans; well-representative of target domain (code). / The segment lacks clear, meaningful spans due to its arbitrary combination of characters and symbols without context or coherence in either programming syntax or semantics. It doesn't represent structured patterns for learning span composition effectively as a training dataset. / Clear structure with identifiable patterns for span segmentation; well-suited to training a tokenizer-free, span-aware model focused on programming constructs. / Clear, structured patterns of variable names and constants suitable for span segmentation in programming context."}}
{"raw": "num components number of components in the field. Returns:\nThe created field.", "type": "mixed", "id": {"id": "52e24a45-30b1-4cb5-ae30-f7f5e53391b8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of numbers, variable names (\"num components\", \"number of components\"), and programming-related terms that can be segmented into meaningful spans for learning purposes in both natural language processing (NLP) tasks related to code comprehension as well as general text understanding. / The segment contains a mix of programming terminology and documentation, with clear phrases that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples to improve its training utility further. / The segment contains a mix of numerical values, variable names (\"num components\", \"number of components\"), and programming-related terminology that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully understand the domain or function it represents in code. / The segment contains a mix of programming-related terminology and documentation-style text, which can help the model learn span segmentation for both technical terms (\"num components\", \"number of components\") as well as natural language phrases like \"in the field\" and \"Returns\". / The segment contains a mix of numerical values and descriptive text, which can help the model learn to distinguish between different types of spans in both numeric expressions (e.g., \"num components\") and natural language descriptions (\"number of components\")."}}
{"raw": "Reimplemented in 03d NamedQbiect: Array 03d Param outputConnections [inherited] The output connections for this param. This property is read-only:\nbool 03d Param readOnly [inherited] If true the param is read only.", "type": "mixed", "id": {"id": "ccf7f195-7036-4131-bbb3-33f186136731"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to inconsistent formatting (\"03d\" instead of \"3D\"). Clean up for better training utility. / Clear structured elements with identifiable spans; represents valuable patterns for learning span composition in programming contexts. / The segment contains a mix of programming terms and descriptions, with clear spanable elements like \"03d NamedQbiect\", which can be useful for learning how to parse such constructs in code contextually embedded within natural language explanations. / The segment contains a mix of programming terminology and descriptions, with clear spanable elements like class names (\"03d NamedQbiect\"), properties (\"outputConnections\", \"readOnly\") that can be useful for learning context-aware segmentation in both code structures and natural language explanations. / Contains both structured programming elements and comments, which can help the model learn span segmentation in a coding context with embedded documentation."}}
{"raw": "Returns:\nTrue if the param was removed.", "type": "mixed", "id": {"id": "ff0d246d-5c53-40db-a853-fde8a058c23e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear function signature with parameters and return values, representing valuable patterns for learning span composition in both programming contexts (code) and documentation language structures (natural). / Clear, concise statement with a predictable structure suitable for learning span segmentation in the context of conditional statements and boolean expressions. / Clear, concise statement with a predictable structure suitable for learning span segmentation in the context of conditional expressions and function return values. / The segment contains a clear function signature with parameters and return values, which are common in programming documentation; it represents valuable patterns for learning span composition between technical terms like \"Returns\", \"True\", \"param was removed\". / The segment contains a clear function signature with parameters and return values, which are common in programming documentation; it represents valuable patterns for learning span composition between keywords like \"Returns\", boolean expressions (\"True\"), parameter names (\"param\"), etc., across both natural language descriptions (docstrings) and code constructs."}}
{"raw": "compatible with this parameter: Parameters: source_para The parameter that the value originates from.", "type": "mixed", "id": {"id": "fd5b2b35-ac47-47c0-a5b7-434412424736"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-like syntax and descriptive text, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to potential ambiguity (\"compatible with this parameter\" could refer to multiple things). / The segment contains a mix of parameter descriptions and programming context, which can help the model learn span segmentation in both domains. It is clean but lacks complexity for higher scores. / The segment contains a mix of parameter names and descriptions, which can help the model learn span segmentation in both programming contexts (code) and documentation language (natural). However, it lacks context for full comprehension; additional examples with more varied content would improve training utility. / The segment contains a mix of parameter notation and descriptive text, offering clear examples for span segmentation in both technical (code-like) expressions (\"source_para\") and explanatory phrases (\"The parameter that the value originates from\"). This combination can help X-Spanformer learn to distinguish between different types of spans. / The segment contains a mix of parameter names and descriptions, which can be useful for learning span segmentation in both programming contexts (code) and documentation language (natural). However, the clarity is somewhat compromised by lack of punctuation or context clues that would normally aid understanding."}}
{"raw": "03d. Transform rotateZYX Vector3 radiansXYZ Pre-composes the local matrix of this Transform with a rotation: Interprets the three entries of the given vector as angles by which to rotate around the X, y and z axes Rotates around the X-axis first; then the y-axis, then the z-axis. Parameters: radiansXYZ A vector of angles (in radians) by which to rotate around the X, y and z axes. 03d.Transform.scale Number X, Number Y, Number Z Pre-composes the local matrix of this transform by a scaling transformation. For", "type": "code", "id": {"id": "b469d4a5-58e1-4af5-9f5f-36bf682499a9"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains clear structured elements like function names, parameters and descriptions which are useful for learning span segmentation in both programming contexts (code) and explanations or documentation style text (natural language). / Clear structure with identifiable spans for rotation angles and scaling parameters, representing valuable patterns in programming context. / Clear, structured commands with identifiable parameters for learning transformations and scaling in a programming context. / Clear structure with identifiable spans for rotation angles and scaling parameters, suitable patterns for learning span composition in programming context. / Clear structured elements with distinct spans for parameters and descriptions, representing valuable patterns in programming constructs."}}
{"raw": "This allows you to specify different features per area.", "type": "natural", "id": {"id": "f78ff815-f401-4d7d-81b9-2678f016bc85"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear instructional text with a potential span for \"different features per area\" that can be segmented and understood in context. / Clear, coherent sentence with a clear subject (\"you\") and verb (\"allows\"), indicating an action related to specifying features per area; suitable for learning span composition in the context of instructions or descriptions. / Clear, coherent sentence with a meaningful span of instructions for learning context and composition in natural language. / The segment contains a clear, coherent sentence with potential for learning about feature specification in different contexts; however, it lacks complexity and variety needed to train an advanced model effectively. / Clear, coherent sentence with a single meaningful span; good for learning simple noun phrases and action verbs in context."}}
{"raw": "This property is read-only. Id 03d ObjectBase clientld [inherited] Unique id of the object.", "type": "mixed", "id": {"id": "8cd4e294-44a0-46be-9bc9-f8bb57e89408"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear identifiers like \"Id\", which can be segmented into meaningful spans for learning purposes. However, the readability could improve by correcting typos (\"clientld\" should likely read as \"Client ID\") to enhance training utility further. / The segment contains a mix of programming language syntax and comments, which can be useful for learning span segmentation in both contexts. However, the readability could improve by separating syntactic elements from descriptive text. / The segment contains a mix of programming language syntax and comments, with clear identifiers for object properties that can be segmented into meaningful spans such as \"This property is read-only\", \"[inherited]\", and \"Unique id\". It represents valuable patterns in both code structure (object attributes) and natural language descriptions. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation for both types of content. However, it lacks clarity due to potential typos (\"clientld\" instead of \"Client\") that could confuse learners if not cleaned up first. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation for both types of content. However, it lacks clarity due to potential typos (\"clientld\" instead of \"Client\") and missing punctuation or capitalization that could hinder learning if not cleaned up."}}
{"raw": "[inherited] Unique id of the object. This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nNumber 03d. CurveKey input [inherited] The input of this key:\nFloat2 03d BezierCurveKeyinTangent The in tangent for this key:\nNumber 03d.", "type": "mixed", "id": {"id": "50627295-9de6-49d6-897a-c240c0a9fcec"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear identifiers like \"Unique id\" that can be segmented into meaningful spans for learning purposes. However, the presence of multiple similar terms (e.g., '03d') could potentially confuse learners without context or additional data to disambiguate them. / The segment contains a mix of descriptive text and structured data (code-like elements), with clear spans for both types that can be used to learn span segmentation in diverse contexts. / The segment contains a mix of descriptive text and technical terms related to programming, with clear structure for span segmentation; however, it lacks context or examples that would improve its utility as training data. / The segment contains a mix of descriptive text and programming-related terms, with clear identifiers like \"Unique id\" that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully evaluate its training utility without additional examples. / The segment contains a mix of descriptive text and technical terms with clear span boundaries, representing valuable patterns for learning both language structure (natural) and coding constructs (code). However, the presence of \"inherited\" without context reduces clarity slightly but does not significantly detract from its utility."}}
{"raw": "Passing in null will unbind any m parameter currently bound: Returns: True if the bind succeeded.\nbool 03d. ObjectBase.isAClassName String class name [inherited] Takes the name of a class as an argument, and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "0b8960ca-69ae-473c-997e-420c0214bec2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming concepts (object-oriented inheritance) and a function signature, providing diverse patterns for span segmentation in the context of software documentation or educational material on object-oriented principles. / The segment contains both programming concepts (e.g., \"ObjectBase.isAClassName\") and explanatory text (\"Passing in null will unbind any m parameter currently bound\"), which can help the model learn span segmentation for code comments, documentation strings, or natural language explanations. / The segment contains both programming concepts (e.g., \"ObjectBase.isAClassName\") and language constructs (\"Passing in null\", boolean expressions), which are valuable for learning span segmentation across different domains. However, the mix of natural language explanations with code syntax may require careful handling during training to ensure accurate model performance on mixed content types. / The segment contains both programming concepts (e.g., \"m parameter\", \"bind succeeded\") and object-oriented terminology (\"ObjectBase.isAClassName\"), which can help the model learn span segmentation across different domains. However, it lacks context for a full understanding of each concept's usage in code or documentation separately. / The segment contains both programming concepts and language constructs, offering diverse patterns for span segmentation training in a tokenizer-free context."}}
{"raw": "Parameters: width Width of the plane.", "type": "mixed", "id": {"id": "b61d2514-e8a2-4ad1-aa7d-27e878d6cea1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a parameter definition with clear structure, suitable for learning span composition in both programming contexts and documentation language. / Clear parameter declaration with a mix of words and symbols, representing valuable patterns for learning span composition in both textual descriptions (natural language) and programming context (code). / Clear parameter declaration with a mix of words and symbols, representing valuable patterns for learning span composition in both text and programming contexts. / Clear parameter declaration with a spanable term \"width\" and its descriptive phrase, suitable for learning both coding context (parameters) and language structure. / The segment contains a parameter definition with clear structure, representing valuable patterns for learning span composition in both programming and documentation contexts."}}
{"raw": "opt_matrix A matrix by which to multiply all the vertices. Returns: lo3dis primitivesVertexInfo The created sphere vertices. 03djs.primitives create VertexInfo Creates a new VertexInfo.\nReturns: lo3djs_primitives VertexInfo", "type": "mixed", "id": {"id": "95c88e23-5e13-436d-a95e-ad9b8dedc071"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text segment contains a mix of programming language syntax and comments, with clear delimiters for spans (e.g., function names like \"opt_matrix\" or return types). It is well-formed but lacks context to fully understand the domain-specific patterns it represents. / The segment contains a mix of programming language syntax and comments, with clear delimiters for spans such as function names (\"opt_matrix\", \"create VertexInfo\") that can be used to train the model on span segmentation in code context. / The segment contains a mix of programming language syntax and comments, with clear delimiters for spans (e.g., \"Returns:\", function names). It is coherent but lacks context to fully understand the domain-specific patterns it represents. More examples would be beneficial. / The segment contains a mix of programming language syntax and documentation, with clear references to functions/methods (e.g., \"opt_matrix\", \"create VertexInfo\") that can be segmented into meaningful spans for learning purposes. However, the presence of typographical errors (\"lo3dis\" instead of likely \"lo3djs\") slightly reduces its score but still maintains good structural clarity and compositional value as a mixed content example. / The segment contains a mix of programming language syntax and comments, with clear delimiters for spans such as function names (\"opt_matrix\", \"create VertexInfo\") that can be used to train the model on span segmentation in code context."}}
{"raw": "ViewProjectionParamMatrix4 Class Reference\nInherits 03d ParamMatrix4: List of all members_\nDetailed Description\ntype of ParamMatrix4 that supplies the current view projection matrix at render time. Public Member Functions\nbool bind Param source_param) unbindlnput unbindQutput Param destination_param) unbindQutputs bool isAClassName (String class name)\nPublic Attributes\nMatrix4 value\nbool updateInput bool readOnly Param inputConnection Array outputConnections String name Id clientId String className", "type": "code", "id": {"id": "6c6ef0c1-1d7a-438d-9af2-1a12a313aac3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans like class names, function signatures and attributes; well-suited for learning span composition in programming context. / Clear structure with identifiable spans like class names, function signatures, and attributes; well-suited for learning span segmentation in programming contexts. / The segment contains a mix of class references and method signatures, which are clear structures suitable for learning span segmentation in both programming contexts (code) and descriptive text elements related to software documentation (natural language). However, the presence of underscores (\"_\") may confuse tokenization. / Clear structure with identifiable spans like class names, method signatures, and attributes; well-suited for learning span segmentation in programming contexts. / Clear structure with identifiable spans like class names, methods (bind/unbind), attributes/members; well-suited for learning span segmentation in programming contexts."}}
{"raw": "CurveKey output [inherited] The output of this key:\nFloat2 03d BezierCurveKey outTangent The out tangent for this key:", "type": "mixed", "id": {"id": "d2ad87b1-d22f-4e52-ac38-570fc5bb7012"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear separation of phrases and terms, representing both language (natural) elements like \"output\", \"tangent\" as well as technical notation (\"Float2\") indicative of programming constructs; useful for learning span segmentation in a code context with natural descriptions. / Clear structure with identifiable spans; includes both programming constructs and documentation, representing valuable patterns for learning span composition in a tokenizer-free context. / Contains a mix of programming language syntax and comments, with clear spanable elements like function names (\"outTangent\") and descriptive phrases (\"Float2\", \"03d BezierCurveKey outTangent\"). The segment is clean for training purposes as it represents valuable patterns in both code structure (e.g., key-value pairs) and natural descriptions. / Clear distinction between descriptive text and technical terms/code-like phrases, useful for learning span segmentation in both domains. / Contains both programming constructs and descriptive text, with clear spanable elements like key names (\"CurveKey\", \"Float2\") and descriptions of outputs which are useful for learning context-aware spans in a mix of code documentation."}}
{"raw": "class Float2\nclass Float3\nclass Float4\nclass VertexSource\nclass Viewport\n03d. ArchiveRequest Class Reference Inherits 03d ObjectBase:\nList of all members\nDetailed Description\nAn ArchiveRequest object is used to carry out an asynchronous request for a compressed archive (containing multiple files).", "type": "mixed", "id": {"id": "f8e549ee-ca5f-4134-ba47-ee8c03c233c6"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both class definitions (code) and descriptive text, providing a mix of structured programming constructs with explanatory language that can help the model learn span segmentation in different contexts. / The text lacks clear sentence structure and coherent descriptions, making it difficult to identify meaningful spans for training purposes. Additionally, the mix of class names with a fragmented description reduces its utility as representative content for learning span composition in either natural language or code contexts. / The segment mixes class names with unrelated text, lacking clear span segmentation patterns for training. It combines structured programming elements (class definitions) and descriptive prose without a coherent structure suitable as is. Separate segments of pure code or natural language would be more beneficial to the model's learning process. / The segment mixes class names and a description, lacking clear span segmentation patterns for training purposes. It combines unrelated elements without distinct boundaries suitable for learning. / The text contains a mix of class names and descriptions, with clear delimiters for spans; however, it lacks context on usage patterns which could be beneficial to learn from."}}
{"raw": "Public Member Functions Io3djs primitives VertexStreamInfo addStream(numComponents, semantic, opt_semanticIndex) addTangentStreams(opt_semanticIndex) addTriangle(index /, index2, index3) ! o3d Shape createShape(pack; material) o3djs primitives VertexStreamInfo findStream(semantic, opt_semanticIndex) ! Array<number >  getTriangle(triangleIndex) number  numTrianglesC removeStream(semantic, opt_semanticIndex) reorient(matrix) setTriangle(triangleIndex, indexl , index2, index3) validatec\nConstructor", "type": "code", "id": {"id": "762ff33f-a76b-49c1-adde-9aad5c138584"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and function calls, which can help the model learn span segmentation for both syntactic elements (code) and semantic meaning in context descriptions (\"addStream\", \"createShape\"). However, it lacks clarity due to missing punctuation or separators. / Clear function signatures and parameters, representing valuable patterns for learning span composition in programming context. / Clear function signatures and parameters indicative of programming constructs, suitable for learning span segmentation in a coding context. / Clear function calls and parameters; well-suited for learning span segmentation in programming contexts. / Clear function signatures and parameters indicative of meaningful spans; well-suited for learning span composition in programming context."}}
{"raw": "j s: Added aliases for inverse, multiply, and the determinant of 4-by-4 matrices. Tools Changes Added 03dVerifier; a tool that test-compiles the contents of a shader ( . Ex) file and converts it into the shader format accepted by O3D. Removed performance timer output from the 03D Sample Converter (03dConverter).", "type": "mixed", "id": {"id": "e2f59b32-cc80-414e-befb-a25eaf2eb6f5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both technical jargon and programming-related terms, which can help the model learn span segmentation in a context that includes coding language elements alongside descriptive text. / The segment contains a mixture of technical descriptions and specific tool names, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clear delimiters for span boundaries; thus additional context or examples may be needed during training. / The segment contains a mix of technical descriptions and commands, which can help the model learn span segmentation in both contexts. It's clean but lacks context for full comprehension. / The segment contains a mix of technical descriptions and software tool names, which can help the model learn to distinguish between different types of spans in both domains. However, it lacks clear delimiters for span boundaries due to its informal structure; this could be improved by adding punctuation or other markers that indicate where one concept ends and another begins. / The segment contains a mixture of technical descriptions and commands, with clear delimiters for potential span segmentation (e.g., \"j s:\", tool names like '03dVerifier', etc.). It is clean but lacks coherence as it appears to be an excerpt from documentation or release notes."}}
{"raw": "The following CgJHLSL datatypes are unsupported as uniform parameters. Note that they can still be used as temporaries, varyings, and function parameters inside shaders. int2 int3 int4 bool2 bool3 bool4 float2x2 float2x3 floatzx4 float3x2 float3x3 float3x4 float4x2 float4x3\nArrays of any type other than float are also unsupported", "type": "code", "id": {"id": "e5f10f35-e800-4180-ab27-5eeff5b3abd2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear and structured representation of Cg datatypes, suitable for learning span segmentation in shader programming context. / Clear segmentation into Cg datatypes and shader-related terms; clean, well-formed for training purposes with valuable patterns in span composition. / Clear structure with distinct data types and arrays; valuable for learning span segmentation in programming contexts. / Clear list of Cg datatypes with consistent formatting, representing valuable patterns for learning span segmentation in shader programming language context. / Clear structure with identifiable spans representing different data types and their descriptions, suitable for learning span segmentation in programming contexts."}}
{"raw": "This property is read-only:\nbool 03d Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only.", "type": "mixed", "id": {"id": "5f04c140-5a2e-475f-a4a2-ea70ce8f8953"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like syntax, with clear span boundaries for both the explanation (\"This property is read-only\") and technical terms like \"bool\", which can be useful in learning how to parse different types of spans within code comments or documentation. / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to distinguish between different types of spans in both contexts. It is clear that \"This property\" refers back to an earlier mentioned item (likely code), indicating structural clarity for span segmentation; however, it lacks context about what 'property' or 'Param' are referring to within a programming language's documentation which could be important learning patterns missing here. / Clear distinction between properties and their descriptions, with both technical terms (\"Param\", \"readOnly\") indicating a mix of language constructs. / The segment contains a mix of descriptive text and programming-like syntax, with clear span boundaries for both the explanation (\"This property is read-only\") and technical terms or phrases like \"bool\", \"Param\", etc., which are useful patterns to learn from in training data. / The segment contains a mix of documentation-style text and programming-like notation, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to repetition (\"This property is read-only.\")"}}
{"raw": "bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source. Default = true.", "type": "mixed", "id": {"id": "c4e0389b-a522-44b8-934a-c26733b96a8a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation; it represents valuable patterns in both coding conventions (e.g., parameter descriptions) and natural language explanations within code documentation. / Clear distinction between language and programming constructs; spans can be identified as \"bool\", \"[inherited]\", etc., representing meaningful patterns for span segmentation in both domains. / The segment contains a mix of programming language syntax and comments, with clear span boundaries for both the parameter name \"03d\" (code) and its description (\"Param updatelnput [inherited] If true...\"). It is clean but lacks punctuation which could be improved. / Contains a mix of programming language syntax and comments, with clear structure for span segmentation; useful patterns present in both languages. / Contains a mix of programming language syntax and comments, with clear span segmentation for both keywords (\"bool\", \"03d\") and phrases (parameter descriptions). Well-formed text suitable as training data."}}
{"raw": "[inherited] Sets the 4-by-4 matrix stored by the Param by a length-4 array of arrays of 4 numbers.\n03d. WorldViewTransposeParamMatrix4", "type": "code", "id": {"id": "ff7d69f9-c404-407d-a9b1-05e887561594"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; useful for learning span composition in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear combination of programming terminology and parameter description, representing valuable patterns for learning span composition in both contexts. / Clear structure with identifiable spans; useful for learning span composition in programming context. / Clear reference to a programming concept with identifiable spans; useful for learning span composition in the context of coding constructs."}}
{"raw": "03d. ProjectionTransposeParamMatrix4 Class Reference\nInherits 03d ParamMatrix4: List of all members_\nDetailed Description\ntype of ParamMatrix4 that supplies the current projection transpose matrix at render time. Public Member Functions\nbool bind Param source_param) unbindlnput unbindQutput Param destination_param) unbindQutputs bool isAClassName (String class name)\nPublic Attributes\nMatrix4 value", "type": "code", "id": {"id": "a76e89b1-5cc8-4bbd-9962-0f24a601147b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains clear, structured elements such as class names and method signatures that are typical in programming documentation; it is well-formed for training purposes with identifiable spans like \"ProjectionTransposeParamMatrix4 Class Reference\" and public member functions which represent valuable patterns for learning span composition. / Clear structure with identifiable spans such as class names, method signatures and attributes; well-suited for learning span segmentation in programming context. / Clear structure with identifiable spans like class names, member functions, and attributes; well-suited for learning span segmentation in programming contexts. / Clear structure with identifiable spans for class reference, attributes, and member functions; well-suited to learning span segmentation in programming context. / Clear structure with distinct spans for class reference, member functions and attributes; well-suited to learn span segmentation in programming context."}}
{"raw": "opt_prefix optional prefix for indenting; 03djs.dump.dumpFloat4 string label lo3d Float4 float4 string opt_prefix Dumps a float4 Parameters: label Label to put in front of dump. float4 Float4 to dump. opt_prefix optional prefix for indenting: 03djs.dumpdumpMatrix string label !", "type": "mixed", "id": {"id": "77316d95-941e-4e3b-8930-b802d920db7b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming elements (function names, parameters) and descriptive text that can be segmented into meaningful spans for learning purposes. / The segment contains both structured programming elements (code) and descriptive text, providing a good mix for learning span segmentation in diverse contexts. / The segment contains a mix of descriptive text and programming-related terms, with clear delimiters for different spans (e.g., labels like 'opt_prefix', parameters description). It shows patterns in naming conventions that could be useful to learn span segmentation across natural language descriptions intertwined with code-like elements. / The segment contains a mix of descriptive text and programming-related terms, with clear delimiters for potential spans like \"opt_prefix\", which could help the model learn span segmentation in both natural language descriptions related to code functionality as well as specific coding syntax elements. / The segment contains a mix of programming-related terms and descriptions, with clear structure for span segmentation; it includes both literal values (e.g., \"03djs.dumpdumpMatrix\") and labels (\"float4\", \"!\"), which are useful patterns to learn from in the context of code documentation."}}
{"raw": "Source 93djs/arcballjs\nPublic Member Functions <static > ! o3djs arcball ArcBall create(areaWidth; areaHeight)\nMember Function Documentation\n! o3djs arcballLArcBall 03djs.arcball create number areaWidth number  areaHeight Creates a new arcball.", "type": "mixed", "id": {"id": "afc26496-a32c-4b01-a6e5-6fc93e0d7f8c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear function signature and parameters, representing valuable patterns for learning span segmentation in programming contexts. / Contains both programming constructs and documentation, with clear span segmentation opportunities for learning purposes. / Contains both programming constructs and documentation, with clear span segmentation opportunities for learning context-aware encoding. / Clear function signature and parameters; represents valuable patterns for learning span segmentation in programming contexts. / Contains both programming constructs and documentation, with clear span segmentation opportunities for learning purposes."}}
{"raw": "Mandatory Comments in O3D Shaders O3D requires three pieces of information in a special comment format: They should appear as follows: #03d VertexshaderEntryPoint FunctionName #03d PixelShaderEntryPoint FunctionName #03d MatrixLoadOrder RowMajor ColumnMajor\nwhere", "type": "code", "id": {"id": "ed78c289-a66c-465d-9c97-bb5f018c3c99"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured comments with consistent patterns for learning span segmentation in shader metadata. / Clear, structured comments with consistent patterns suitable for span segmentation in shader metadata. / Clear structured patterns for shader entry points and matrix load order in O3D shaders, suitable for learning span segmentation in programming contexts. / Clear, structured comments with consistent patterns for span segmentation; representative of shader programming conventions in O3D. / Clear structured comments with consistent patterns for span segmentation; highly representative of shader configuration in O3D."}}
{"raw": "bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source.", "type": "mixed", "id": {"id": "aa6a6b49-5f0a-465f-97c8-520f70d81748"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming language syntax and comments, providing a good example of span segmentation across different content types. However, the presence of non-standard characters (e.g., '03d') may affect clarity for some models. / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a coding context combined with explanatory text. However, it lacks clarity due to potential confusion caused by mixing code-like expressions (\"bool\", \"03d\") that are not standard identifiers or values within typical languages like Python or JavaScript. / The segment contains both programming language syntax and a description, which can help the model learn to distinguish between different types of spans in an integrated context. / Contains both programming language syntax and documentation, with clear spanable elements like parameter names, types (bool), values ([inherited]), descriptions (\"If true\"), which are useful for learning context-aware spans in a tokenizer-free model. / The segment contains both programming language syntax and documentation, with clear spanable elements like variable names (\"bool\", \"03d\"), function parameters (\"Param updatelnput\"), keywords (\"inherited\", \"true\"), which are valuable for learning code comprehension in a tokenizer-free context."}}
{"raw": "Select the resources you want to bundle in the Package Explorer view and then select File > New > ClientBundle to open the New ClientBundle Interface wizard:", "type": "mixed", "id": {"id": "a2fd211c-9453-4da6-bb90-0ddd51f12783"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mixture of instructions (natural language) and actions related to software development tools, which can help the model learn span segmentation for both types of content. / The segment contains a mixture of instructions and UI elements, which can be segmented into meaningful spans like \"Select the resources\", \"File > New > ClientBundle\" for learning span composition in both natural language commands and code-like structures. / The segment contains a mix of instructions and UI elements, which can be segmented into meaningful spans like \"Select the resources\", \"Package Explorer view\", etc., representing valuable patterns for learning span composition in both natural language commands and software interface descriptions. / The segment contains a mixture of instructions and UI elements, with clear spans for actions (\"Select the resources\", \"File > New > ClientBundle\") that can be useful in training an encoder to understand both natural language commands and code-like structures. / The segment contains a mixture of instructions and UI elements, which can be segmented into meaningful spans for training purposes. It is clean but lacks complexity that could further enhance learning patterns in span segmentation."}}
{"raw": "o3djsmath Matrix4 opt matrix Creates a wedge shape. A wedge being an extruded triangle. The wedge will be created around the 3 2d points passed in and extruded along the Z-axis. The created wedge has position, normal and uv streams. Parameters: pack Pack to create wedge elements in.", "type": "mixed", "id": {"id": "7e51e2b3-6ffa-4c20-86e0-4d2603a6e3a2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and descriptions, with clear references to data structures (Matrix4), functions/methods ('opt matrix'), parameters ('pack Pack', '3 2d points'). It demonstrates meaningful spans for learning span segmentation in both code constructs (\"creates\", \"extruded\") and natural language explanations. / The segment contains a mix of programming concepts (e.g., \"Matrix4\", \"extruded triangle\") and descriptive text (\"Creates a wedge shape\"), which can help the model learn to distinguish between code constructs, function descriptions, parameters description in both natural language context. / Contains both programming concepts and descriptive text, with clear parameters for a function that can be segmented into meaningful spans like \"o3djsmath Matrix4\", \"opt matrix Creates a wedge shape\" etc., representing valuable patterns in span composition across different domains. / The segment contains a mix of descriptive text and programming-related terms, with clear references to parameters that can be segmented into meaningful spans for learning purposes. However, it lacks explicit examples or structured code snippets which could enhance its utility as training data. / The segment contains a mix of programming concepts and descriptions, with clear parameters for creating geometric shapes in an API context; however, it lacks explicit span boundaries which may hinder learning without additional annotations or examples."}}
{"raw": "This is for helping with Param cycles\nIf paramA gets its value from paramB and paramB gets its value from paramA: Ifyou go paramA.value, paramB will evaluate then copy to paramA. If you go paramB value, paramA will evaluate then copy to paramB. Ifyou set paramB updateInput = false;, then: If you go paramA value, paramB will evaluate then copy to paramA If you go paramB value, paramB just copy paramA. paramA will NOT evaluate when paramB asks for its value.", "type": "mixed", "id": {"id": "9770d8a3-0c63-46d0-ae42-460c8540d68a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text segment contains a mixture of programming concepts and pseudo-code, which can help the model learn span segmentation in both contexts; however, it lacks clarity due to repetition (\"Ifyou go paramA.value,\" repeated twice) that could confuse learning patterns. / The segment contains a mix of programming logic and comments, with clear references to variables (\"paramA\", \"paramB\") that can be segmented into meaningful spans for learning purposes. It is coherent but lacks natural language clarity due to the presence of code-like expressions intertwined with explanatory text. / The segment contains a mixture of descriptive text and pseudo-code-like expressions, which can help the model learn span segmentation for both programming constructs (e.g., \"paramA\", \"value\") and natural language explanations (\"If you go\"). / The segment contains a mix of pseudo-code and comments, with clear references to variables (\"paramA\", \"paramB\") that can be segmented into meaningful spans for learning purposes; however, it lacks clarity due to informal language like 'you go'. / The segment contains a mixture of explanatory text and pseudo-code-like statements that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both domains. However, the clarity could improve to enhance training utility further."}}
{"raw": "Setting this has no meaning to 03D, but is useful for debugging and for the functions Client_getObjects, Pack-getObject; RenderNode getRenderNodesByNamelnTree and RenderNode-getTransformsByNameInTree which search for objects by name. Reimplemented from 03d NamedQbiectBase: Array 03d ParamQbiect_params", "type": "mixed", "id": {"id": "2334d23d-17d4-4261-a5f1-8cf016751151"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and programming concepts that can be segmented into meaningful spans, such as function names (e.g., \"Client_getObjects\") which are valuable for learning span composition in both natural language processing tasks related to code understanding or documentation generation. / Contains both programming concepts and function names, useful for learning span segmentation in a combined context. However, the text lacks clarity due to typographical errors (\"03D\" instead of \"03d\", etc.). Clean-up could improve its utility as training data. / The segment contains a mix of programming concepts and comments, with clear references to functions that can be segmented into meaningful spans for learning purposes. Despite some spelling errors (\"03D\" instead of \"03d\"), the overall structure is understandable in its context as code documentation or commentary. / Contains both programming constructs and comments, with clear spanable elements like function names and object references. Well-suited for learning complex spans in a mixed context. / The segment contains a mixture of programming concepts and function names, which can help the model learn span segmentation across different contexts (code constructs vs descriptive text). However, some phrases like \"03D\" are unclear without context; this could be an area for further refinement."}}
{"raw": "Remove a stream from the VertexInfo. Does nothing if a matching stream does not exist; Parameters: semantic The semantic of the stream. opt_semanticIndex The semantic index of the stream: Defaults to zero. 03djs primitives VertexInfo reorient !", "type": "mixed", "id": {"id": "fdc367e3-b0f7-4dd9-b3dc-ce32b4e86b75"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming constructs and comments, demonstrating span segmentation between commands/parameters and descriptive text. / Contains both programming constructs and comments, with clear semantic markers for span segmentation. / The segment contains both programming constructs and comments, which can help the model learn to differentiate between executable commands (code) and descriptive text or instructions that are not meant for execution but provide context (natural language). However, it lacks clarity in terms of structural separation due to its informal nature. / The segment contains both programming constructs and comments, which are valuable for learning span segmentation in a tokenizer-free context. However, the presence of non-standard characters ('03djs') may affect clarity slightly but still retains its compositional value as it includes code-like syntax with natural language explanations (comments). / The segment contains a mix of programming concepts and commands, with clear semantic markers for potential span segmentation; however, it lacks context which could hinder learning patterns in an isolated manner."}}
{"raw": "number 03djs particles ParticleSpec spinSpeed The spin speed of a particle in radians. number 03djs.particles ParticleSpec spinSpeedRange The spin speed range. number 03djs-particles ParticleSpec spinStart", "type": "mixed", "id": {"id": "e110b7d8-0882-4411-9909-8199392467fa"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both numerical identifiers and descriptive terms with clear span segmentation potential between numbers, labels (e.g., \"spinSpeed\", \"spinStart\"), properties (\"range\" vs. singular), indicating a mix of code-like structure within natural language descriptions. / Contains clear, structured elements with consistent naming patterns useful for span segmentation in a mixed context of programming and documentation. / Contains clear, structured patterns combining both numerical identifiers and descriptive phrases relevant for learning span segmentation in a mixed context. / Contains both structured data (code-like identifiers) and descriptive text, useful for learning span segmentation in a mixed context. / Contains both numerical identifiers and descriptive phrases, showing a mix of structured data that can be useful for learning span segmentation in different contexts."}}
{"raw": "Array 03d Param outputConnections [inherited] The output connections for this param:\nThis property is read-only:\nbool 03d Param readOnly [inherited] If true the param is read only: Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only:", "type": "code", "id": {"id": "8f57cacf-4443-466a-a626-0a7867f98490"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured programming-related content with identifiable spans for learning; well-formatted and coherent. / Clear, structured segments with identifiable spans; well-suited for learning span composition in programming context. / Clear structured elements with meaningful spans; well-suited for learning span composition in programming context. / Clear, structured segments with meaningful spans; well-suited for learning span composition in programming contexts. / Clear structured elements with identifiable spans; well-suited for learning span composition in programming contexts."}}
{"raw": "Pre-composes the local matrix of this transform by a scaling transformation. For example, if the local matrix is a rotation, the new local matrix will scale and then rotate.", "type": "natural", "id": {"id": "b56dc8a4-4e55-46f9-8b47-1bd36d0584c2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with identifiable phrases; useful for learning span composition in English text. / Clear sentence structure with identifiable spans; useful for learning context and composition in text. / Clear sentence structure with identifiable phrases; useful for learning span composition in English text. / Clear sentence structure with identifiable spans for scaling and rotation concepts in transformation context. Suitable for learning compositional patterns of transformations. / Clear sentence structure with identifiable phrases and terms related to transformations, suitable for learning span composition in a tokenizer-free context."}}
{"raw": "03djs.debug DebugHelper:setCubeScale lo3d Transform transform number scale Sets the scale of a cubes.", "type": "mixed", "id": {"id": "97aaadfd-fb46-4ef4-9c6e-b7c597e6487c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and a description, which can help the model learn to distinguish between different types of spans in an integrated context. However, it lacks clarity due to potential typos (\"lo3d\" instead of \"log\") that could confuse learners; thus it's not perfect but still valuable for mixed content training. / The segment contains both programming language syntax and a descriptive phrase, which can help the model learn to distinguish between different types of spans in an integrated context. / The segment contains both programming constructs and comments, providing a good mix for learning span segmentation in diverse contexts. / The segment contains both programming language syntax and a descriptive phrase, providing examples of span segmentation in different contexts (code constructs like variable names or function calls alongside explanatory text). This mix can help the model learn to differentiate between code elements that should be tokenized separately from natural language explanations. / The segment combines both programming concepts (debugging, setting scale) and specific terminology (\"lo3d\", \"Transform transform number\"), which can help the model learn span segmentation in a context that includes code constructs alongside natural language descriptions."}}
{"raw": "03d. WorldTransposeParamMatrix4 Class Reference\nInherits 03d ParamMatrix4;\nList_of all members\nDetailed Description\ntype of ParamMatrix4 that supplies the current world transpose matrix at render time.", "type": "mixed", "id": {"id": "b4373c1c-3592-4fbc-ac37-f76d916c540c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear inheritance and member listing, representing valuable patterns for learning span composition in both programming context (code) and descriptive text (natural language). / The segment contains a mix of structured elements (class reference, inheritance notation) that can be segmented into meaningful spans for learning span composition in both programming and documentation contexts. It is clean but lacks context to fully evaluate its training utility without additional examples or surrounding text. / Clear inheritance and class reference structure, representing valuable patterns for learning span composition in both programming context (class name) and descriptive text (\"Detailed Description\"). / Clear inheritance and class reference structure, representing valuable patterns for learning span composition in both documentation (natural language) and programming context (code). / Clear inheritance and class reference structure, representing valuable patterns for learning span composition in both programming context (class names) and descriptive text (\"Detailed Description\")."}}
{"raw": "Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source. Default = true.", "type": "mixed", "id": {"id": "18fd04a1-6312-490b-88a8-0ee77763ec5b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear parameter descriptions that can be segmented into meaningful spans for learning purposes. / The segment contains a mix of programming language syntax and comments, with clear parameter descriptions that can be segmented into meaningful spans for learning purposes. / The segment contains a mix of programming language syntax and comments, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to missing punctuation or clearer separation markers like parentheses for code constructs; this could be improved upon but still holds potential value as training data. / The segment contains a mix of descriptive text and programming-like syntax, showing clear patterns for span segmentation that can be useful in training an X-Spanformer model to understand both types of content. / Clear mix of language and parameter notation, with identifiable spans for both syntax (code) elements like \"Param\", \"[inherited]\", etc., as well as semantic content (\"updatelnput [inherited]\"). Well-formed structure suitable for learning span segmentation."}}
{"raw": "[inherited] The object's name. Setting this has no meaning to O3D, but is useful for debugging and for the functions Client_getObiects, Pack-getObject, RenderNode_getRenderNodesByNameln Tree and RenderNode-getTransformsByNameInTree which search for objects by name. Reimplemented from 03d", "type": "mixed", "id": {"id": "50d3f3e3-e4dd-4afb-b9cb-ab5c0508b5ca"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming elements and comments, representing a useful pattern for learning span segmentation in diverse contexts. / Contains a mix of programming terminology and documentation, but lacks clear span segmentation due to the presence of typos (\"Obiects\" instead of \"Objects\", etc.) and unclear context for meaningful learning. / The segment contains a mix of programming terminology and comments, but lacks clear structure for meaningful span segmentation due to the presence of typos (\"Obiects\" instead of \"Objects\", etc.) and unclear context which could confuse training data generation. / The segment contains a mix of programming and documentation language, with clear references to object names in an O3D context which can be segmented into meaningful spans for learning purposes. Despite some typos (\"Obiects\" instead of \"Objects\", etc.), it retains its compositional value as part of the target domain's mixed content type. / The segment mixes language with technical terms and lacks clear, consistent structure for effective span segmentation training. It also contains typos (\"Obiects\" instead of \"Objects\") which could confuse a model during learning."}}
{"raw": "o3djs primitives VertexInfo create WedgeVertices(inPoints, depth; opt_matrix) <static > setCullingInfo(primitive)\nMember Function Documentation\nIo3d Shape o3djs-primitives createBox l03dPack pack ! o3d Material material number width number height number depth ! o3djsmath Matrix4 opt_ matrix Creates a box: The box will be created around the origin. The created box has position, normal and uv streams. Parameters: pack Pack to create Box elements in.", "type": "mixed", "id": {"id": "d3cb429d-4c18-462b-803a-c56eb9287736"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and documentation, with clear spans for function names (\"create\"), parameters (\"inPoints\", \"depth; opt_matrix\"), return types (\"WedgeVertices\"), comments explaining the purpose (e.g., \"setCullingInfo(primitive)\"), method calls (\"o3djs primitives VertexInfo create WedgeVertices(inPoints, depth; opt_matrix)\" and \"Create a box: The created box has position...\"). It is clean but lacks coherence due to mixed content types. / The segment contains a mix of programming constructs and documentation, with clear spanable elements like function names (\"create\"), parameters (e.g., \"inPoints\", \"depth; opt_matrix\"), and comments explaining the code's purpose. Despite some syntactical errors ('l03dPack' instead of 'lodPack'), it retains structural clarity for training purposes in a mixed context. / The segment contains a mix of programming constructs and documentation, with clear spans for function names (\"create\"), parameters (\"inPoints\", \"depth; opt_matrix\"), and descriptions that can aid in learning span segmentation patterns across both code syntax and natural language explanations. / The segment contains a mix of programming constructs and documentation, with clear spanable elements like function names (\"create\"), parameters (\"inPoints\", \"depth; opt_matrix\"), types (\"static > setCullingInfo(primitive)\"), which are valuable for learning the composition. Despite some syntactical errors (e.g., missing semicolons), it is mostly coherent as a mixed content example, representing both code and its documentation context well. / The segment contains a mix of programming constructs and documentation, with clear spans for function names (\"create\"), parameters (\"inPoints\", \"depth; opt_matrix\"), types (\"static > setCullingInfo(primitive)\"), and descriptions that can be segmented into meaningful parts."}}
{"raw": "This command invokes the GWT compiler which generates a number of JavaScript and HTML files from the MyWebApp Java source code in the MyWebApp /war / subdirectory: To see the final application, open the file MyWebApp, war /MyWebApp .html in your web browser:", "type": "mixed", "id": {"id": "53108e69-2410-46cd-9d44-023ef46d67e1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mixture of commands, file paths and instructions which can be segmented into meaningful spans for training purposes. It is clean but lacks context that could improve its utility as an example. / The segment contains a mix of instructions (natural language) and file paths or commands related to Java source files, which can help the model learn span segmentation for both types of content. However, it lacks clear delimiters between code constructs (\"MyWebApp /war / subdirectory\") making some spans ambiguous; thus not scoring 1.0. / Clear spans of commands, file paths and URLs; represents a mix of structured command-line instructions with references to files in both programming (Java source) and web contexts. Good for learning span segmentation across different domains. / Contains both command-line instructions and file paths, representing valuable patterns for learning span segmentation in a mixed context. / The segment contains a mixture of command-line instructions and file paths, which can be segmented into meaningful spans for training purposes; however, it lacks explicit delimiters between different types of content (code vs natural language). It is clean but could benefit from additional context or punctuation to improve clarity."}}
{"raw": "Fixed 03dConverter t0 return all the mesh streams found in the COLLADA file.", "type": "mixed", "id": {"id": "ff381cf8-9e1f-40c9-8017-02da15e8a0f5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terminology and text, with clear structure for span segmentation; however, it lacks context which is essential to fully understand the meaning in both domains. / The segment contains a mix of programming terminology and instructions, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typos (\"03dConverter\" instead of \"3D Converter\") that could confuse training data interpretation. / The segment contains a mix of programming terminology and instructions, which can be segmented into meaningful spans for learning span composition in both contexts. However, the presence of potential typos (\"03dConverter\" instead of \"3D Converter\") may affect clarity slightly but still retains its compositional value as it represents common patterns found when dealing with 3D conversion processes involving COLLADA files and mesh streams. / The segment contains a mix of programming terminology and instructions, which can be segmented into meaningful spans for learning span composition in both coding context (e.g., \"03dConverter\", \"mesh streams\") and natural language descriptions (\"Fixed\", \"return all the mesh streams found\"). / The segment contains a mix of programming terminology and instructions, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typos (\"03dConverter\" instead of \"3D Converter\") that could confuse learners or misrepresent typical code patterns."}}
{"raw": "matrix/vector multiplications aS mul (vector, matrix) ColumnMajor indicates that all matrix parameters are loaded in column-major order (OpenGL-style). Use this setting if your shaders specify matrix/multiplications as mul (matrix, vector) Unsupported Features There are several features of FX and CgFX files that are not supported in 03D\nTechnique Blocks No techniques should be specified in the shader file.", "type": "mixed", "id": {"id": "af5a3591-b22e-4fcc-b2ab-c958ff615cda"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming concepts and language, with clear spanable elements like function names (\"matrix/vector multiplications\"), parameters (\"vector\", \"matrix\"), settings (\"ColumnMajor\"), features (\"Unsupported Features\"), techniques (\"Technique Blocks\"). It is coherent for training purposes but lacks context. / The segment contains both programming concepts (matrix/vector multiplications, shader files) and textual descriptions of settings/limitations; it offers diverse patterns for span segmentation in a mixed context. / The segment contains a mix of programming concepts and language, with clear references to matrix/vector operations in the context of shader files (code), as well as descriptions that are understandable without prior knowledge (\"Unsupported Features\", \"Technique Blocks\"). It presents learnable patterns for span segmentation between code constructs. / The segment contains both programming concepts and instructions, with clear structure for span segmentation; however, it lacks coherence as a standalone example due to the abrupt ending. It can still serve in training by highlighting different types of spans (code constructs vs textual descriptions). / The segment contains a mix of programming concepts and language, with clear references to matrix/vector multiplications in both OpenGL-style (code) and shader files (mixed). It also mentions unsupported features which can be useful for learning about limitations or edge cases in span segmentation."}}
{"raw": "ProjectionInverseParamMatrix4' , '03d. ProjectionTransposeParamMatrix4' , '03d. ProjectionInverseTransposeParamMatrix4' , '03d. ViewParamMatrix4' , '03d. ViewInverseParamMatrix4'\n'03d.", "type": "code", "id": {"id": "b314eedd-bb34-41f0-8b7e-3e83397d9afc"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured patterns of matrix names, suitable for learning span segmentation in programming context. / Clear, structured patterns of parameter matrices indicative for span segmentation in programming context. / Clear structured elements representing matrix names, suitable for learning span segmentation in programming contexts. / Clear, structured patterns of matrix names and identifiers suitable for span segmentation in programming context. / Clear structured elements representing matrix names, suitable for learning span segmentation in programming contexts."}}
{"raw": "[inherited] The width of the surface, in pixels. This property is read-only\n03d. RenderDepthStencilSurface", "type": "mixed", "id": {"id": "18741455-43c3-476b-a729-5900d45ca4a8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear reference to an API property with readable identifiers, which can be segmented into meaningful spans for learning purposes in the context of programming documentation or configuration files. / Clear span identification with consistent structure; useful for learning spans in programming context. / The segment contains a mix of programming terminology and documentation style, with clear spans for \"width,\" \"surface,\" etc., which are valuable patterns to learn span composition in both contexts. / The segment contains a mix of programming language syntax and documentation, with clear markers for inherited properties in the context of software development (\"[inherited]\") which can be segmented into meaningful spans such as property name \"width\" and its description along with metadata like \"[03d. RenderDepthStencilSurface]\" indicating an identifier or label that could serve to teach span segmentation between code elements (property names, comments) and natural language descriptions in documentation. / The segment contains a mix of documentation (natural language) and technical notation, with clear markers for inherited properties (\"[inherited]\") that can be segmented into meaningful spans such as \"The width\", \"[inherited]\", and the rest being code-like syntax which is useful for learning span segmentation in both natural text and programming constructs."}}
{"raw": "Public Member Functions\nbool bind Param source_param) unbindInput ubindOutput (Param destination_param) unbindQutputs bool isAClassName (String class name)", "type": "code", "id": {"id": "1ec98e39-62fd-4897-a3e1-414636aeb660"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear function signatures and parameters; useful for learning span segmentation in programming contexts. / Clear function signatures and parameters, representing valuable patterns for learning span composition in programming context. / Clear function signatures and parameters, representing valuable patterns for learning span composition in programming context. / Clear function signatures with parameters and return types, representing valuable patterns for learning span composition in programming contexts. / The segment combines both programming constructs (functions and parameters) with a mix of keywords, which can help the model learn span segmentation in diverse contexts."}}
{"raw": "bool updateInput bool readOnly Param inputConnection Array outputConnections String name Id clientId String className", "type": "code", "id": {"id": "1f280d08-cc8d-4573-8f36-451b787986e3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear syntactic structure with identifiable spans for parameters, types, and values; well-suited to learning span composition in programming contexts. / Clear structure with identifiable spans; useful for learning span composition in programming contexts. / Clear syntactic structure with identifiable spans for parameters and values, suitable for learning span segmentation in programming contexts. / Clear structure with identifiable spans for parameters, connections and identifiers; well-suited to learn span segmentation in programming contexts. / Clear structure with identifiable spans for parameters and connections, suitable for learning span segmentation in programming contexts."}}
{"raw": "03djs math Matrix4 matrix string opt_prefix Dumps a matrix Parameters: label Label to put in front of dump. matrix Matrix to dump.", "type": "mixed", "id": {"id": "6bb68de0-1ca6-4e61-ae7d-cead97b40279"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear structure with identifiable spans such as labels, parameters descriptions and values which are typical in programming documentation; it is well-formed for training purposes on span segmentation within the context of coding language. / The segment contains a mix of programming terms and descriptions, with clear labels for spans such as \"matrix\" which can be useful in training an encoder to understand contextually different elements within the same domain. / The segment contains a mix of programming terms and descriptions, which can be useful for learning span segmentation in both contexts; however, it lacks clarity due to the absence of punctuation or clear delimiters between elements like '03djs', 'math Matrix4 matrix string opt_prefix Dumps' etc. / The segment contains both programming terms and a descriptive sentence, providing examples of span segmentation in different contexts (code constructs like \"Matrix4\" alongside phrases such as \"opt_prefix Dumps\"). It is well-formed for training purposes with clear structural elements that can be segmented into meaningful spans. / The segment contains a mix of programming terms and descriptions, with clear labels for parameters that can be segmented into meaningful spans; it is clean but lacks context which may affect training utility slightly."}}
{"raw": "The base module for 03djs. Source o3djs/base js\nPublic Member Functions <static > string  formatErrorStack(stack) <static > string getFy 'unctionName(aFunction) <static > string  getStackTrace(stripCount) <static > init(clientObject)", "type": "mixed", "id": {"id": "ad83c3db-b216-4235-a305-c62baa3bfdd2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming constructs and function names, showing clear span segmentation opportunities for a tokenizer-free model. / Contains both programming constructs and function names, showing clear span segmentation opportunities in a hybrid context. / Contains both programming constructs and function names, showing clear span segmentation opportunities for a tokenizer-free model. / Contains a mix of programming constructs and function names, showing clear span segmentation opportunities for learning purposes. / The segment contains a mix of programming constructs and function names, with clear delimiters for potential span segmentation; however, it lacks coherence as is due to the inclusion of multiple unrelated elements in one line. It may need cleaning before being used effectively for training purposes."}}
{"raw": "Instead, the mandatory comment fields described above should indicate the vertex and pixel shader entry points The sample COLLADAConverter can be used to automatically convert CgFX and FX shader files containing techniques to the O3D format:", "type": "mixed", "id": {"id": "2127f66c-c438-4a25-b232-e8092bbaa930"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical language and instructions that can be segmented into meaningful spans, such as \"vertex shader entry points\" or the command-like phrase \"convert CgFX and FX shader files.\" It is clean but lacks context for full comprehension without additional information. / Contains both programming concepts (vertex, pixel shader entry points) and a command for software usage (\"COLLADAConverter\"), which are valuable patterns in span segmentation across different domains. / The segment contains a mix of technical language and programming-related terms, with clear indications for span segmentation such as \"vertex\", \"pixel shader entry points\", which are valuable patterns to learn in the context of code documentation or comments. However, it lacks coherence due to its instructional nature rather than being an example sentence structure that could be used directly by a tokenizer-free model without additional contextual information. / The segment contains a mix of technical jargon and instructions that can be segmented into meaningful spans, such as \"mandatory comment fields,\" \"vertex and pixel shader entry points,\" which are relevant for learning span composition in both code-related contexts (e.g., CgFX) and natural language descriptions. / The segment contains a mix of technical language and instructions, with clear references to programming concepts like shader entry points that can be segmented into meaningful spans for training purposes. It is coherent but lacks context which may limit its utility as standalone data; however, it represents valuable patterns in the intersection between natural language descriptions and code-related terminology."}}
{"raw": "ArchiveRequestCallback onreadystatechange ArchiveRequestCallback onfileavailable String wri RawData data Number streamLength Number bytesReceived Number readyState", "type": "code", "id": {"id": "22d8ac5b-cf97-4605-8052-4732ce34023b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, well-defined spans representing properties and methods; clean for training purposes. / The segment contains a mix of programming-related terms and numbers, which can be segmented into meaningful spans representing different properties or states in an asynchronous file upload process; it's clean but lacks context for full comprehension. / The segment lists properties of an object, which are clear and structured for span segmentation; it represents valuable patterns in programming context. / The segment lacks clear sentence structure and coherent phrases, making it difficult to identify meaningful spans for training purposes. It appears as a list of terms without context or explanation that could be useful in learning span segmentation patterns. / Clear list of properties and methods related to a JavaScript object, suitable for learning span segmentation in programming contexts."}}
{"raw": "[inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from Passing in null will unbind any m parameter currently bound. Returns:\nTrue if the bind succeeded.", "type": "mixed", "id": {"id": "0c0f5307-79c5-4fe1-b1aa-1538169c0b3d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation-style language and technical terms related to programming, with clear references that can be segmented into meaningful spans for learning purposes. / Clear separation of parameters and outcomes; spans for \"source_para\" as a parameter, \"True if the bind succeeded.\" as an outcome are identifiable. Mixed content type due to programming context with natural language descriptions. / Clear structure with identifiable spans; combines both technical terminology and instructional language, representing valuable patterns for learning span composition in a mixed context. / Clear distinction between documentation (natural language) and parameter binding syntax, representing valuable patterns for learning span segmentation in both domains. / The segment contains a mix of documentation (natural language) and configuration-like syntax, with clear delineation between descriptions (\"Directly binds two Param elements...\") and parameter definitions (\"Parameters:\"), which can help the model learn span segmentation for both natural text structures as well as code constructs."}}
{"raw": "TextureCUBE getRenderSurface CubeFace face, Number mip_level, Pack pack\nReturns a RenderSurface object associated with a given cube face and mip_level of a texture. Parameters:\nface The cube face from which to extract the surface.", "type": "mixed", "id": {"id": "86180099-4ebd-405a-81a1-36a075f909f2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans for both parameters and return type, representing valuable patterns in span composition across different contexts (natural language descriptions alongside programming concepts). / The segment contains a clear command structure with parameters and return type, representing valuable patterns for learning span composition in both programming context (code) and descriptive text elements. / Clear structure with identifiable spans; combines both programming concepts and descriptive text, useful for learning span segmentation in a diverse context. / Clear structure with identifiable spans; combines both programming concepts and terminology, useful for learning span segmentation in a hybrid context. / Clear structure with identifiable spans; combines both programming concepts and descriptive text, representing valuable patterns for learning span composition in a tokenizer-free context."}}
{"raw": "material to use. points Array of 2d points in the format [[xl, yl], [x2, y2];, [x3, y3]] that describe a 2d triangle. depth The depth to extrude the triangle.", "type": "mixed", "id": {"id": "e4a07e67-cd67-425d-841e-1d053bbbe763"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and structured data (2d points array), which can help the model learn both textual context for spans as well as numerical patterns in arrays, representing valuable learning opportunities for span segmentation across different content types. / Contains both structured data (points Array) and descriptive text (\"material to use\", \"depth\"), which can help the model learn span segmentation in a diverse context. / Contains both structured data (points Array) and descriptive text, offering diverse span patterns for learning. / Contains both programming concepts (points, depth) and mathematical descriptions that can be segmented into meaningful spans for a span-aware model to learn from. The structure is clear with identifiable patterns in the code-like syntax interspersed within natural language explanations of geometric shapes. / Contains both structured data (points Array) and descriptive text, with clear span segmentation opportunities for a tokenizer-free model."}}
{"raw": "GWT LIBRARY MODULES\nGWT library can be used to package classes for mutualization and/or modularization. A GWT library is just a java archive (JAR) containing both classes and java sources for later GWT compilation and a gwt: xml module descriptor:\nGWT projects can be organized in a variety of ways. However; particular conventions are encouraged to make it easy to identify which code is intended to run on the client browser; the server; or both:", "type": "mixed", "id": {"id": "646373fb-d2b9-4351-bf98-dd30c7100f0d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mixture of descriptive text and technical terms related to GWT (Google Web Toolkit), which can help the model learn span segmentation in both contexts, though it lacks explicit examples for direct learning. / The segment contains a mix of descriptive text and technical terms related to GWT, with clear separations between explanations (natural language) and specific instructions or descriptions for modules in Java Archive files (code). It provides valuable patterns on how code is organized within the context. / The text segment contains a mix of descriptive prose and technical terms related to GWT library modules, which can help the model learn span segmentation in both contexts. However, it lacks clear delimiters for spans; thus it's not ideal but still valuable due to its domain-specific content. / The segment contains a mix of descriptions and instructions that can be segmented into meaningful spans, such as \"GWT library\", \"java archive (JAR)\", etc., providing valuable patterns for learning span composition in both natural language explanations and code-related contexts. / The segment contains a mix of descriptive text and technical terms related to GWT (Google Web Toolkit), which can help the model learn span segmentation for both programming concepts (\"GWT library\", \"java archive\") and explanatory prose (\"packaging classes\")."}}
{"raw": "Multipass Techniques FX and CgFX files may contain techniques with more than one pass. The O3D system supports only single-pass shaders and will reject shaders containing more than one pass Multipass techniques can still be created programmatically in JavaScript using the 03D API:", "type": "mixed", "id": {"id": "2a11b0e7-3a05-4752-9a6c-d9387b029fe2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and programming references, with clear separations between explanatory text (\"Multipass Techniques FX...\") and an example in JavaScript using the \"03D API\". This provides valuable patterns for learning span segmentation across both natural language explanations about multipass techniques as well as code constructs. / Contains both programming concepts (JavaScript, O3D system) and technical descriptions (\"Multipass Techniques\", \"single-pass shaders\") that can be segmented into meaningful spans for learning purposes. The text is clean but lacks context to fully understand the patterns in span composition related to code execution or shader processing. / Contains both programming concepts and documentation, with clear spans for technical terms like \"Multipass Techniques\", \"FX files\" which can be useful in training a span-aware model to understand context switching between natural language explanations and code references. / The segment contains both technical jargon and programming concepts, which can help the model learn span segmentation in a context that includes multiple languages (natural language descriptions alongside JavaScript syntax). / The segment contains a mix of technical descriptions and programming references, with clear delineation between explanatory text (\"Multipass Techniques FX...\") and an example usage in JavaScript using the \"03D API\". It has meaningful spans that can be segmented into natural language explanations alongside code constructs."}}
{"raw": "[inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from.", "type": "mixed", "id": {"id": "82df276d-690c-46f0-b621-a418ba22e3e2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical language and structured elements that can be segmented into meaningful spans, such as \"Directly binds,\" \"[inherited],\" parameters list with clear labels (\"source_para\"), which are valuable for learning span composition in both natural and code contexts. / The segment contains a mix of structured language and technical terms that can be segmented into meaningful spans, such as \"Directly binds two Param elements,\" which is valuable for learning span composition in both natural language processing (NLP) tasks related to code understanding or documentation parsing. / The segment contains a mix of technical language and structured elements like parameters, which can help the model learn span segmentation in both contexts. However, it lacks context for full comprehension by X-Spanformer without additional data. / The segment contains a mix of documentation-style text and parameter descriptions, which are clear structured elements suitable for learning span segmentation in both contexts. However, it lacks explicit examples or varied patterns that could enhance training utility further. / The segment contains a mix of documentation-style text and parameter descriptions, which can help the model learn span segmentation for both human-readable explanations (natural language) and technical terms or identifiers related to code constructs. However, it lacks explicit structural markers like punctuation that could further enhance clarity in training data."}}
{"raw": "[inherited] Sets the 4-by-4 matrix stored by the Param by a length-4 array of arrays of 4 numbers:\n03d. WorldViewProjectionParamMatrix4 Class Reference\nInherits 03d ParamMatrix4;\nList_of all members\nDetailed Description\ntype of ParamMatrix4 that supplies the current world view projection matrix at render time. Public Member Functions\nbool bind Param source_param) unbindInput ubindOutput (Param destination_param) unbindQutputs bool isAClassName (String class name)", "type": "mixed", "id": {"id": "2a421d02-9b91-40b4-bbe3-a1b1136c18a8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation (natural language) and programming constructs, with clear references to classes/methods that can be segmented into meaningful spans for training purposes. However, the presence of code-like elements such as \"03d\" may require additional preprocessing or filtering in practice. / Contains a mix of documentation (natural language) and programming constructs, with clear spanable elements like class names, function signatures, and parameter lists that are valuable for learning both syntax patterns in code as well as descriptive text structures. / The segment contains a mix of documentation (natural language) and programming constructs, with clear references to classes/methods that can be segmented into meaningful spans for learning purposes. However, the presence of code-like syntax may pose challenges in training without further preprocessing or specialized handling mechanisms within X-Spanformer. / The segment contains a mix of documentation (natural language) and programming concepts, with clear references to class structures that can be segmented into meaningful spans for learning purposes. However, the presence of code-like elements such as \"Param source_param)\" may require additional preprocessing or handling in training data preparation. / The segment contains a mix of documentation (natural language) and programming constructs, with clear references to classes/methods that can be segmented into meaningful spans for learning purposes. However, the presence of code-like syntax within natural text may pose challenges in span segmentation without further context or preprocessing steps tailored specifically towards handling mixed content types effectively."}}
{"raw": "o3djs_io LoadInfo loadTexture(pack, url, callback)\nMember Function Documentation\n! o3djs_io LoadInfo 03djs.io.createLoadInfo\n(lo3d ArchiveRequestllo3d FileRequestl XMLHttpRequest)\nopt_request\nopt_hasStat US\nboolean\nCreates a LoadInfo object. Parameters: opt_request The request to watch: opt hasStatu true if opt_request is a 03d.", "type": "mixed", "id": {"id": "29d4998c-f124-4f29-a879-a242ebd669f4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear structure for learning span segmentation in both contexts. However, there are some typos that need correction (\"o3djs_io\" should be \"O3D.js.io\", etc.). / The segment contains a mix of programming concepts and documentation, with clear function names (\"LoadInfo\") that can be segmented into meaningful spans for learning purposes. Despite minor spelling errors ('lo3d' instead of 'load'), the overall structure is understandable as it relates to code functions in JavaScript or similar languages. / The segment contains a mix of programming terms and documentation, but the syntax errors (e.g., \"o3djs_io\", \"03d\") make it difficult to parse as meaningful spans for training purposes without correction. Additionally, there are typos (\"opt_hasStat\" should be \"hasStatus\"), which could confuse learners about proper span segmentation in mixed content types. / The segment contains a mix of programming terms and documentation, but the structure is unclear due to typos (e.g., \"03djs.io.createLoadInfo\" instead of \"o3djs_io.CreateLoadInfo\") which could confuse learning patterns for span segmentation. / The segment contains a mix of programming terms and documentation, but the structure is unclear due to inconsistent formatting (e.g., \"o3djs_io\", \"03d\"). It lacks clear delimiters for meaningful spans in code context or natural language text."}}
{"raw": "VertexInfo.validate Validates that all the streams contain the same number of elements, that all the indices are within range and that a position stream is present:\n03djs-primitives VertexStreamInfo Class Reference List of all members_ Detailed Description Used to store the elements of a stream: Source 93djs/primitives js", "type": "mixed", "id": {"id": "cfc41c30-c9cc-4ad2-9be3-ff28f2aebb77"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear references to classes (VertexStreamInfo) that can be segmented into meaningful spans for learning purposes. However, the presence of code-like elements (\"Source\", \"js\") may confuse non-code-focused models; thus it is rated slightly lower than pure natural language or mixed content without such direct coding terms. / The segment contains both programming constructs (class reference, method signature) and descriptive text that can help the model learn span segmentation in a context where language meets coding syntax. / The segment contains a mix of programming concepts and documentation, with clear references to classes (\"VertexStreamInfo\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context on the usage or implementation details which could improve its utility as training data. / The segment contains a mix of programming concepts and documentation, with clear references to classes/members that can be segmented into meaningful spans for learning purposes. However, it lacks context which might affect the training utility slightly. / Contains both structured programming elements and documentation, with clear span segmentation opportunities for learning patterns in a combined context."}}
{"raw": "Techniques with Compile-time Parameters Although the 03D system will not accept a shader file containing a technique block; the sample COLLADAConverter will accept such technique blocks and automatically convert them to the 03D format: However; the Converter will not accept techniques containing compile statements with arguments.", "type": "mixed", "id": {"id": "f3c710d2-abfa-406c-bb36-48cd643c2732"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical language and structured elements (technique blocks, shader files), which can help the model learn span segmentation in both contexts. / The segment contains a mix of technical language and programming concepts, with clear delineation between descriptive text (\"Techniques\", \"shader file\") and specific instructions or examples (\"the sample COLLADAConverter will accept such technique blocks\"). It exemplifies the kind of span segmentation that X-Spanformer needs to learn. / The segment contains a mix of technical descriptions and programming concepts, with clear boundaries between phrases that can be segmented into meaningful spans for training purposes. It is clean but could benefit from additional context or examples to improve learning utility further. / The segment contains a mix of technical language and programming concepts, with clear structure for span segmentation; however, it lacks coherence due to the abrupt ending (\"However;\" without continuation). It could be improved by completing or clarifying this part before use in training data. / The segment contains a mix of technical language and specific terminology related to shader files, COLLADAConverter, and the 03D format which can help in learning span segmentation for both natural text descriptions (like \"techniques with Compile-time Parameters\") as well as code-related phrases (\"shader file containing a technique block\")."}}
{"raw": "Array params String name Id clientld String className\nMember Function Documentation\n03d. ParamObject copyParams ParamQbject source_param_object [inherited] Copies all the params from a the given source_param_object to this param object: Does not replace any currently existing params with the same name. Parameters:\nsource_param_object param object to copy params from.", "type": "mixed", "id": {"id": "bb5af2e3-beb6-43dc-b89c-64c08698ad51"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear spans for parameters (\"source_param_object\", \"param object to copy params from\") that can be used as training examples for span segmentation in both code constructs (e.g., variable names) and natural descriptions. / The segment contains a mix of programming concepts and documentation, with clear spans for identifiers (e.g., \"Array\", \"String name\") that can be useful in training the model to understand span segmentation across different domains. However, it lacks coherence as it's not well-formed text; there are typographical errors (\"clientld\" instead of \"className\"). / The segment contains a mix of programming language syntax and documentation, with clear spans for parameters (\"source_param_object\", \"param object to copy params from.\") and descriptions that can be used as training data for span segmentation in both code constructs (e.g., function names) and natural language explanations. / The segment contains a mix of programming concepts and documentation, with clear structure for span segmentation; however, it lacks coherence as an isolated example due to the abrupt transition between elements. / The segment contains a mix of programming concepts and documentation, with clear spans for parameters (\"Array params\", \"String name Id clientld String className\") that can be used to learn span segmentation in code context. However, it lacks coherence as the text seems incomplete or incorrectly formatted (e.g., 'clientld' instead of likely 'ClientId')."}}
{"raw": "Passing in null will unbind any m parameter currently bound.", "type": "mixed", "id": {"id": "4c15e56d-2c12-4e35-89e8-ee340c47ec63"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text contains a clear instruction with both imperative and descriptive language, representing valuable patterns for learning span composition in the context of programming documentation or comments. / The segment contains a clear instruction with both imperative language (\"Passing in\") and technical terminology (\"null\", \"unbind\", \"m parameter\"). It represents valuable patterns for learning span composition, especially useful when dealing with natural language instructions combined with code-like expressions or commands. / The segment contains a clear instruction with both technical language and programming context, which is beneficial for learning span segmentation in the X-Spanformer model. It represents valuable patterns that can be learned from code documentation or comments combined with natural language explanations. / The segment contains a mix of programming language syntax and English text, with clear boundaries for spans such as \"Passing in null\", \"unbind any m parameter currently bound\". It is clean but lacks context which could be beneficial to the model's learning process. / The segment contains a clear command with parameters, representing valuable patterns for learning span composition in both programming and instructional contexts. It is clean but lacks context to fully evaluate its training utility without additional examples."}}
{"raw": "Parameters:\nX amount t0 scale in the X dimension: y amount to scale in the y dimension: 2 amount to scale in the 2 dimension 03d.Transform.scale Vector3 scale Pre-composes the local matrix of this transform by a scaling transformation. For example, if the local matrix is a rotation; the new local matrix will scale and then rotate. Parameters:\nscale amount to scale. 03d.", "type": "mixed", "id": {"id": "5ff3064c-2477-4245-a456-a288eb1f73ae"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and parameters, with clear delineation between them; it provides examples that can help the model learn span segmentation in both contexts. / The segment contains both structured parameters and descriptive text, offering a variety of patterns for span segmentation in different contexts (natural language descriptions combined with technical parameter listings). / The segment contains a mix of descriptive text and technical parameters, with clear delimiters for different spans (e.g., \"Parameters:\", parameter names). It is clean but lacks coherence due to the mixture; however, it still provides valuable patterns for learning span segmentation in both natural language descriptions and code-like structures. / The segment contains both structured parameters and descriptive text, providing a mix of patterns for span segmentation in different contexts (natural language descriptions alongside programming-like parameter declarations). / The segment contains a mix of parameter descriptions and programming concepts, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to formatting issues like missing spaces (\"amount\" should be \"Amount\", etc.)."}}
{"raw": "NamedObjectBase: Array 03d StreamBank vertexStreams An array of the vertex streams on this StreamBank:\nEach access to this field gets the entire list so it is best to get it just once.", "type": "mixed", "id": {"id": "efc61f9d-54ac-45d3-8d43-c1d3747c9391"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear mix of technical terms and descriptions, representing both structured data (code) elements like \"Array\" or \"StreamBank\", as well as explanatory text (\"Each access to this field gets the entire list so it is best to get it just once\"). This combination can help X-Spanformer learn how to segment spans that include code constructs alongside natural language explanations. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"NamedObjectBase\", \"Array 03d StreamBank vertexStreams\" which are likely code constructs or domain-specific terminology in the context of programming libraries related to audio processing. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming context (code) and explanatory text (natural language). It is clean but lacks explicit examples or varied structures to improve training utility. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"NamedObjectBase,\" \"Array\", etc., which are relevant for learning span composition in both code context (e.g., variable names) and natural language explanations. / The text segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"NamedObjectBase\", \"Array 03d StreamBank vertexStreams\" which are likely code-related constructs or API documentation elements in natural language context."}}
{"raw": "Fixed od3Converter to better handle local paths to shader files in the archive. Changed the default extension to asset files generated by the 03dConverter from tgz to o3dtgz to avoid issues on certain server configurations (blog post with details to follow)", "type": "mixed", "id": {"id": "ed47a1e0-c32f-4a00-937e-f3299d5ab54d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical jargon and instructions, with clear references to file extensions (\"tgz\", \"o3dtgz\") that can be segmented into meaningful spans for learning purposes. It also implies an action (fixing) which adds context useful in training span-aware models. / The segment contains a mix of technical language and instructions, with clear references to file extensions (\"tgz\" to \"o3dtgz\") that can be segmented into meaningful spans for learning purposes. It also hints at future content (blog post), which could provide additional context or examples useful in training the model on span composition within mixed contexts. / The segment contains a mix of technical instructions and narrative, with clear references to file types (tgz, o3dtgz) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks explicit code examples or natural language explanations separately identifiable as training data. / The segment contains a mixture of technical jargon and instructions that can be segmented into meaningful spans, such as \"Fixed od3Converter,\" which is likely referring to software or an API function name; this could help the model learn span segmentation in both code-related contexts (like file extensions) and natural language descriptions. / The segment contains a mix of technical jargon and instructions, with clear references to software components (\"od3Converter\", \"shader files\") that can be segmented into meaningful spans for training purposes. It also includes actionable items like changing file extensions which represent learnable patterns in span segmentation within the context of server configurations or development workflows."}}
{"raw": "WorldViewProjectionParamMatrix4' , '03d. WorldViewProjectionInverseParamMatrix4' , '03d. WorldViewProjectionTransposeParamMatrix4' , '03d. WorldViewProjectionInverseTransposeParamMatrix4'\nReturns: The newly created Param or null on failure.", "type": "code", "id": {"id": "c2b5b98f-3470-468f-800d-3ab048d541a4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment lacks clear sentence structure and meaningful phrases; it's a list of identifiers without context or explanation, making it difficult to learn span composition from this data alone. / Clear structured elements representing function names and parameters, valuable for learning span segmentation in programming contexts. / Clear, structured programming constants with consistent naming patterns suitable for span segmentation learning. / Clear, structured programming constants with consistent naming patterns suitable for span segmentation and composition learning in a tokenizer-free context. / Clear, structured representation of programming constants and functions; valuable for learning span segmentation in a coding context."}}
{"raw": "Programmable Graphics Pipeline\n03D uses a programmable graphics pipeline model instead of a fixed-function pipeline. This programmable pipeline makes use of a shader language, based on HLSL and Cg, that enables you to program the GPU directly through the use of vertex shaders and pixel shaders.", "type": "mixed", "id": {"id": "1446d267-63f4-4cab-bd2c-e2cfac21abd4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear distinction between programming concepts and language syntax, representing valuable patterns for learning span composition in both domains. / Clear distinction between descriptive text and technical terms related to graphics programming, with identifiable spans for both language (e.g., \"Programmable Graphics Pipeline\") and specific concepts or constructs (\"shader language\", \"vertex shaders\"). / Clear distinction between descriptive text and technical terms related to graphics programming, with identifiable spans for both language (e.g., \"Programmable Graphics Pipeline\") and specific concepts or constructs (\"shader language\", \"vertex shaders\"). / Clear distinction between programming concepts and language syntax, useful for span segmentation in both domains. / Clear distinction between programming concepts and language syntax, useful for learning span segmentation in both domains."}}
{"raw": "This technique allows the programmer to change the size of the array on the fly, and the Cg runtime will automatically recompile the shader when necessary to accommodate the new array size. This technique is not supported in HLSL and hence is prohibited in 03D shaders. To achieve similar functionality in 03D, create the shader string with the size of the array as a replaceable constant string and perform a JavaScript substitution on the shader string at runtime before compiling the shader: For example, in t", "type": "mixed", "id": {"id": "646ee3de-3fc7-4728-8057-4604626fefd4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical instructions and programming concepts, with clear references to arrays in Cg runtime which can be segmented into meaningful spans for learning purposes. Despite being somewhat fragmented (incomplete sentence), it is clean enough as an example that combines natural language explanation within code context. / The segment contains a blend of technical explanations and instructions (natural language) with specific programming concepts related to shader compilation, which can help the model learn span segmentation in both contexts. However, it lacks complete sentences or clear examples that would make its utility for training higher. / The segment contains a mix of technical explanations and instructions, with clear references to programming concepts like arrays in Cg runtime which can be segmented into meaningful spans for learning purposes. It is coherent but lacks context at the end (\"For example, in t\"). / The segment contains a mixture of technical descriptions and instructions that can be segmented into meaningful spans, such as \"array size,\" \"shader string,\" etc., which are useful for learning span composition in both natural language processing (NLP) contexts like documentation or comments within code. / The segment contains a mix of technical explanations and instructions, with clear references to programming concepts (arrays in Cg runtime) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context due to the incomplete sentence at the end (\"For example, in t\")."}}
{"raw": ".unbindOutput Param destination_param [inherited] Breaks a specific param-bind output connection on this param. Parameters:\ndestination_param param to unbind.", "type": "code", "id": {"id": "4a404b53-267a-4f7a-bf5f-cde8d1c4e506"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; useful for learning param-binding patterns in programming contexts. / Clear, structured command with identifiable parameters and action; suitable for learning span segmentation in programming contexts. / Clear separation of parameters and descriptions, representing both language constructs (natural) with programming-like syntax (code). / The segment contains a mix of descriptive text and parameter notation, providing clear examples for span segmentation in both contexts. / Clear, structured command with identifiable parameters and action; suitable for learning span segmentation in programming context."}}
{"raw": "Public Member Functions\nbool bind Param source_param) unbindInput ubindOutput (Param destination_param) unbindQutputs bool isAClassName (String class name)", "type": "code", "id": {"id": "2e70ea9c-38b5-4332-aa00-e9aae864cd73"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear function signatures with parameters and return types, representing valuable patterns for learning span segmentation in programming context. / Clear function signatures and parameters; good for learning span segmentation in programming context. / Clear function signatures and parameters, representing valuable patterns for learning span composition in programming context. / Clear function signatures and parameters, representing valuable patterns for learning span composition in programming context. / Clear function signatures and parameters, representing valuable patterns for learning span segmentation in programming contexts."}}
{"raw": "Param 03d. ParamObject-getParam String param name ) [inherited] Searches by name for a Param defined in the object:\nParameters:\nparam_ name Name to search for: Returns:\nThe Param with the given name, or null otherwise.", "type": "mixed", "id": {"id": "16fec454-bc35-47ea-bc81-6159409600ba"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-like syntax and comments, which can help the model learn to distinguish between different types of spans in both contexts. / The segment contains a mix of programming-like syntax and documentation, with clear parameter naming conventions that can be segmented into meaningful spans for training purposes. / Contains both structured programming elements and descriptive text, offering diverse span patterns for learning. / Contains both structured programming elements and parameter descriptions, useful for learning span segmentation in a coding context with embedded documentation. / The segment contains a mix of programming-like syntax and comments, with clear parameters that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully understand the domain-specific patterns it represents."}}
{"raw": "Before this era of programmable GPUs, the graphics programmer was limited to a fixed-function pipeline. Algorithms for calculating transformations, lighting, texture coordinates, and other environmental effects were pre- programmed into software such as early OpenGL or Direct 3D, which controlled the graphics hardware. In systems based on a fixed-function pipeline, global states are set up for lights, materials, and textures, and then the shape information is passed in to this pipeline.", "type": "natural", "id": {"id": "7f256b99-af8d-4464-9f75-8ff88b324b6b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear narrative structure with identifiable spans like \"fixed-function pipeline,\" and useful for learning about historical context in programming languages. / Clear narrative structure with identifiable spans for entities like \"era,\" \"programmer,\" and technical terms that can help the model learn contextually relevant span segmentation in prose. / Clear narrative structure with identifiable spans like \"fixed-function pipeline\", \"algorithms for calculating transformations\" etc., representing valuable patterns in span segmentation and composition within the context of programming history. / Clear, coherent prose with identifiable spans for training; represents valuable patterns in language structure and composition. / Clear narrative structure with identifiable spans; useful for learning context and composition in text."}}
{"raw": "ArchiveRequest send Send the request: Unlike XMLHttpRequest the onreadystatechange callback will be called no matter what; with success or failure.", "type": "mixed", "id": {"id": "be191a21-7e91-4fb6-9921-399de4923455"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines both a command-like structure (\"ArchiveRequest send\") and explanatory text, which can help the model learn to distinguish between different types of spans in an integrated context. However, it lacks clear delimiters for span boundaries like punctuation or explicit markers that are typically used in programming code; thus it's not ideal but still valuable mixed content training data. / The segment contains a mix of technical language and instructions that can be segmented into meaningful spans, such as \"ArchiveRequest\", \"Send the request\", which are likely to represent valuable patterns for learning span composition in both natural language processing (NLP) tasks related to code documentation or comments. / The segment contains a mix of programming concepts and language, with clear references to XMLHttpRequest (code) and onreadystatechange callback function which can be segmented into meaningful spans for learning purposes. It is clean but lacks context that could improve its utility as training data. / The segment contains a mix of technical language and instructions, with clear phrases that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which might affect its utility as standalone training data. / The segment contains a mix of programming concepts and documentation, with clear spans for both technical terms (\"ArchiveRequest\", \"Send the request\") and explanatory phrases that can be useful in training an encoder to understand contextually rich span segmentation across different domains."}}
{"raw": "03d. Param.! unbindOutputs [inherited] Breaks all param-bind output connections on this param.", "type": "code", "id": {"id": "e47fb2a9-8bdd-4639-b50d-fef858dbbf79"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structure with identifiable spans; well-suited for learning span composition in programming context. / Clear syntactic structure with identifiable spans for parameters and functions, suitable for learning span segmentation in programming context. / Clear structured elements with meaningful spans; clean and representative of programming constructs. / Clear structured elements with meaningful spans; clean and well-formed for training purposes, representing valuable patterns in span composition specific to programming constructs."}}
{"raw": "mip_level The mip-level of the surface to be returned.", "type": "code", "id": {"id": "3215e7b5-c2c7-49db-8ffd-e2e211b713ee"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with a keyword indicating programming context; useful for learning span composition in coding environments. / Clear, concise definition suitable for learning span segmentation and composition in programming contexts. / Clear, concise definition suitable for learning span segmentation; represents valuable patterns in programming context. / Clear, concise definition suitable for learning span segmentation; represents valuable patterns in programming context. / The segment contains a clear technical term (\"mip_level\") and its associated context, which is valuable for learning span segmentation in both programming language syntax (code) and documentation style (natural). It represents an identifiable pattern that combines code-related terminology with natural descriptive text."}}
{"raw": "'03d. ProjectionInverseParamMatrix4' , '03d. ProjectionTransposeParamMatrix4' , '03d. ProjectionInverseTransposeParamMatrix4' , '03d. ViewParamMatrix4' , '03d.", "type": "code", "id": {"id": "ac556ca5-75a5-4af7-baed-13cb6654ea17"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains only identifiers without context or meaningful spans for learning. / Clear, structured programming constants suitable for span segmentation and learning patterns in a tokenizer-free context. / Clear, structured programming constants that represent meaningful spans for a tokenizer-free span-aware model to learn from. / Clear, structured list of programming constants; well-suited for learning span segmentation in a coding context. / Clear, structured programming constants with consistent naming patterns suitable for span segmentation and learning."}}
{"raw": "opt_matrix A matrix by which to multiply all the vertices.", "type": "mixed", "id": {"id": "9fdbbfdf-886c-4739-a8dd-df93f6d85e0a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear span for a programming concept with both technical term (\"opt_matrix\") and descriptive phrase (\"A matrix by which to multiply all the vertices\"), representing valuable patterns in learning how spans can be composed from code-related terms. / Clear span between \"opt_matrix\" and the rest of sentence, representing a common pattern in documentation with both technical terms (\"matrix\", \"vertices\") and instructional language (instruction to multiply). Mixed content type is suitable for X-Spanformer training on diverse input formats. / The segment contains a clear definition (natural language) and an associated term ('opt_matrix') that could be considered as part of programming syntax or documentation, representing valuable patterns for learning span composition in both contexts. / The segment contains a clear definition with both technical terms (\"matrix\", \"vertices\") and an action verb phrase, which is valuable for learning span composition in the context of programming or documentation. / The segment contains a clear definition with both technical terms (\"matrix\", \"vertices\") and an action verb, making it suitable for learning span segmentation in the context of programming or documentation that includes code-like structures."}}
{"raw": "gwt xml an <inherits> entry would be needed:\n<module>\n<inherits name-'com google.gwtgears Gears' />\nLOADING MULTIPLE MODULES IN AN HTML HOST PAGE If you have multiple GWT modules in your application, there are two ways to approach loading them.", "type": "mixed", "id": {"id": "e64fa392-02ca-4548-b32c-1d25ed06af2c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Contains both HTML/XML tags and GWT module references, offering diverse span patterns for learning. / Contains both markup and prose, with clear XML structure for spans; useful patterns in span composition are present. / The segment contains a mix of XML markup and prose, with clear spans for both the structure (XML tags) and content ('com google.gwtgears Gears', 'LOADING MULTIPLE MODULES IN AN HTML HOST PAGE'). It represents valuable patterns in span segmentation across different domains. / Contains both markup and prose, with clear XML structure for spans; useful patterns in span segmentation across different content types. / Contains both XML markup and prose, with clear spans for learning; however, it lacks coherence due to the abrupt transition between topics."}}
{"raw": "In contrast, with a programmable graphics pipeline, the developer has complete control over the algorithms used in the vertex shader and the pixel shader: In addition, rasterizing and frame-buffer operations can be configured using the O3D API: The following sections provide an overview ofhow to program the O3D graphics pipeline, with brief contrasting descriptions of how the same techniques would be accomplished in a fixed-function system. Contents 1. Components_of_", "type": "mixed", "id": {"id": "fbedfacb-1fcc-4fb3-b5f8-bc5518f85a99"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical terms related to programmable graphics pipelines, which can help the model learn span segmentation for both narrative explanations (natural language) and specific programming concepts/code constructs like \"vertex shader\", \"pixel shader\". / Contains both structured programming concepts and explanatory prose, with clear spanable elements like \"vertex shader\", \"pixel shader\" which are relevant for learning span segmentation in a mixed-content context. / The segment contains a mix of descriptive text and technical terms related to graphics programming, which can help the model learn span segmentation for both prose descriptions (natural language) and specific API references or code constructs (code). However, it lacks clear delimiters between different spans. / The segment contains a mix of technical descriptions and structured headings that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts (O3D API) and natural language explanations (\"Components_of_\"). It is clean but lacks detailed content. / The segment contains a mix of technical descriptions and structured headings, which can help the model learn span segmentation in both programming contexts (code) and explanatory text (natural language). However, it lacks complete sentences or clear code snippets for optimal training utility."}}
{"raw": "Member Data Documentation\nNumber 03d ArchiveRequestbytesReceived The number of bytes downloaded so far:\nYou can use this value along with streamLength to figure out the download progress.", "type": "mixed", "id": {"id": "8c0d679e-d6cd-436f-b6c6-b5d778f4e2fc"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical documentation (natural language) and programming concepts, with clear spans for both text (\"Number 03d ArchiveRequestbytesReceived\") and the accompanying explanation that can aid in learning span segmentation between code-related terms and their descriptions. / The segment contains a mix of technical documentation (natural language) and programming-related terms, which can help the model learn span segmentation for both types of content. However, it lacks clarity in separating spans due to its concise format; thus it's not ideal but still valuable as training data. / The segment contains a mixture of technical documentation (natural language) and programming-related terms, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential formatting issues like missing punctuation or inconsistent casing (\"03d\" instead of \"0x3D\"). / The segment contains a mix of technical terms and structured data that can help the model learn span segmentation in both programming contexts (e.g., \"ArchiveRequestbytesReceived\") and documentation formats (\"Number 03d ArchiveRequest\"). It is clean, coherent, but lacks context for full comprehension. / The segment contains a mix of technical documentation (natural language) and programming concepts, with clear spans for both textual descriptions (\"Number 03d ArchiveRequestbytesReceived\") and instructions/code-like phrases (\"The number of bytes downloaded so far:\", \"You can use this value along with streamLength to figure out the download progress.\"). It is clean but lacks context or examples that could improve its training utility further."}}
{"raw": "Note: The most common thing to pass to this function is a Material but depending on your application it may be more appropriate to paSs in a Transform Effect; Element or DrawElement:\nParameters:\nparam_object The param object on which the new paramters will be created: See also:\n03d Effect_createSA SParameters\nParam 03d. ParamObject:getParam String param name )", "type": "mixed", "id": {"id": "e7549175-7e31-4a9c-ae8d-99fb0ddb8d1c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming-related terms and a note/comment structure, which can help the model learn span segmentation in diverse contexts. However, it lacks sufficient length for robust training data evaluation. / The segment contains a mix of documentation (natural language) and programming concepts, with clear indications for spans such as \"Note\", function names (\"Material\"), parameters (\"param_object\"), which are valuable patterns to learn span segmentation in both natural text and code constructs. / The segment contains a mix of documentation (natural language) and programming concepts, with clear references to parameters (\"param_object\", \"03d Effect_createSA SParameters\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / The segment contains a mix of programming concepts and documentation, with clear references to functions (spans) like \"Material\", \"Transform Effect; Element or DrawElement\" that can be segmented meaningfully for learning purposes. It is clean but lacks context which might affect its utility in training an encoder without additional data. / The segment contains a mixture of programming concepts (functions, parameters) and documentation style notes which can help the model learn span segmentation in both contexts. However, it lacks clarity due to inconsistent formatting (\"PaSs\" instead of \"Pass\") that may confuse learners about proper syntax versus explanatory text."}}
{"raw": "WorldViewProjectionInverseTransposeParamMatrix4'\nReturns:\nThe newly created Param or null on failure. Param 03d. ParamObject-getParam String param name Searches by name for a Param defined in the object:\n[inherited]\nParameters:\nparam name Name to search for: Returns:\nThe Param with the given name, O null otherwise.", "type": "mixed", "id": {"id": "3f603b6e-e29b-4e0d-86b2-40355964c1ca"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear structure for span segmentation; however, it lacks coherence as it's not well-formed text but rather an excerpt from API documentation or code comments. It represents valuable patterns in terms of identifying parameter names within the context of software development tools like WorldView. / The segment mixes technical terms with instructional text, lacking clear structure for meaningful span segmentation; it's not coherent enough as a standalone example. / The segment contains a mix of programming language syntax and documentation, with clear structured elements like function names ('WorldViewProjectionInverseTransposeParamMatrix4'), return types (e.g., 'Returns:'), parameters descriptions (\"param name Name to search for:\"), which are valuable patterns that can help the model learn span segmentation. / The segment contains a mix of programming terms and descriptions, with clear structured elements like function names ('WorldViewProjectionInverseTransposeParamMatrix4') that can be segmented into meaningful spans for learning purposes. It also includes parameter definitions which are common in code documentation or configuration files (mixed). / Clear structured elements with identifiable spans; well-suited for learning Param object interactions in programming contexts."}}
{"raw": "true if this object is a or is derived from the given class name. 03d. Param unbindInput [inherited] Breaks any input connection coming into the Param:\n03d. Param unbindOutput Param destination_param", "type": "mixed", "id": {"id": "042050cf-9f55-4962-a261-357ec0b514bd"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming constructs and comments, with clear span segmentation opportunities between keywords like \"true\", class names, function calls (\"unbindInput\"), parameters (\"Param unbindOutput\"). Mixed content type allows learning of diverse patterns in code comprehension. / The segment contains a mix of programming language syntax and comments, with clear boundaries for spans like class names (\"given class name\"), method calls (e.g., \"unbindInput\", \"unbindOutput\"). It is clean but lacks context or content beyond code structure; however, it represents valuable patterns in span segmentation. / Contains both programming constructs and comments, with clear span boundaries for learning purposes. / The segment contains a mix of programming concepts and language, with clear references to object properties (\"true if this object is\") that can be segmented into meaningful spans for learning purposes. It also includes code-like syntax which could help the model learn span segmentation in both natural text descriptions related to coding contexts as well as actual code constructs. / The segment contains a mix of programming concepts and language, with clear references to object properties (\"is\", \"derived from\") that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context which might affect its utility as standalone training data."}}
{"raw": "Returns: string space delimited list of keys that are down:\nnumber 03djs.event keyIdentifierToChar string keyldent Takes a keyIdentifier string and remaps it to an ASCIL/Unicode value suitable for javascript event handling: Parameters: keyIdent a keyIdentifier string as generated above. Returns: number.the numeric Unicode code point represented.", "type": "mixed", "id": {"id": "d7e33d61-8887-42fa-8597-38969600de72"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and programming concepts, with clear span segmentation opportunities for keys (e.g., \"keyIdentifierToChar\", \"ASCIL/Unicode value\"). It is clean but lacks context which could be beneficial in training data. / The segment contains a mix of technical descriptions and programming concepts, with clear delineation between explanations (natural language) and function signatures/code snippets (code). It provides valuable patterns for learning span segmentation in both contexts. / The segment contains a mixture of technical descriptions and programming concepts, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to fragmented sentences that may confuse training processes without further context or correction. / The segment contains both programming concepts and language elements, with clear spanable patterns like function names (\"Returns\"), parameter descriptions (e.g., \"keyIdent a keyIdentifier string as generated above.\"), which are useful for learning how to parse code-like structures in natural text. / The segment mixes technical descriptions with a programming context, but lacks clear and consistent structure for effective span segmentation training."}}
{"raw": "SimpleInfo.createBox number width number height number depth Creates a box and adds it to the root of this SimpleInfo's transform graph: Parameters: width   Width of the box. height Height of the box: depth Depth of the box. Returns: lo3djs_simple_SimpleShape A Javascript object to manage the shape. lo3dis simple_SimpleShape 03djs.simple. SimpleInfo createCube number size Creates a cube and adds it to the root of this SimpleInfo's transform graph: Parameters: size Width, height and depth of the cube.", "type": "mixed", "id": {"id": "fa1e1665-dcb4-43dd-ab3e-6e389a36c9e6"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both structured programming instructions and parameters, which can help the model learn span segmentation for different types of content (code constructs). However, there are some inconsistencies in formatting that may affect clarity slightly but still retain overall structural value. / The segment contains a mix of programming instructions and parameters, with clear structure for span segmentation; however, it lacks coherence as it's fragmented across two different commands (\"createBox\" vs \"createCube\"). It represents valuable patterns but could be improved by combining into one coherent example. / The segment contains a mix of descriptive text and programming-like commands, which can help the model learn span segmentation in both domains; however, it lacks clarity due to inconsistent formatting (\"number width number height\" vs \"size Width, height and depth\"). / The segment contains a mix of programming instructions and parameters, with clear span segmentation for each parameter (width, height, depth). It is clean but lacks context on how to use the functions or what \"SimpleInfo\" refers to; however, it still represents valuable patterns in code structure. / The segment contains both structured programming instructions and parameters, which can help the model learn span segmentation in a coding context with embedded descriptions. However, it lacks clarity due to repetition (\"lo3djs_simple_SimpleShape\" appears twice) and could be improved for better training utility by removing redundancy or clarifying terms like \"size\"."}}
{"raw": "var effect = g_pack createObject ( 'Effect' ) ; effect.loadFromFXString (fxString)\nInterfaces\nCg allows the user to specify interfaces or variables whose type can be redefined on the fly: This functionality is not supported in O3D.\nUnsupported HLSL Features\nImplicit Casts in Intrinsic Functions The HLSL compiler is a bit more forgiving about datatypes than Cg: For example, the HLSL compiler will happily perform a mul () ofa float3 vector and a float4x4 matrix: uniform float4x4 worldViewProjection;", "type": "mixed", "id": {"id": "c20b0f1a-4aa1-42a6-85fa-903a5de361d9"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming constructs (variables, functions) and comments that are clearly structured for span segmentation; it represents valuable patterns of variable declaration, function calls, and HLSL/Cg code syntax which is useful in learning the model's capabilities on a mix of natural language explanations with coding context. / The segment contains a mix of programming constructs (variable declaration, function calls) and comments that are well-defined for span segmentation; it represents valuable patterns in both coding syntax and documentation style. / The segment contains a mix of programming constructs, variable assignments and comments that can be segmented into meaningful spans for learning span composition in both coding syntax (e.g., `var effect = g_pack createObject ('Effect') ;`) and natural language explanations (`Interfaces`, 'Cg allows the user to specify interfaces or variables whose type can be redefined on the fly`). The content is clean, well-formed with clear structural elements. / Clear structure with identifiable spans (variable names, function calls), well-formatted for training purposes; valuable patterns in programming constructs and language syntax. / Clear structure with identifiable spans (variable declarations, function calls) and valuable patterns for learning span composition in programming context."}}
{"raw": "[inherited] Searches by name for a Param defined in the object:\nParameters:\nparam_ name Name to search for: Returns:\nThe Param with the given name, or null otherwise.", "type": "mixed", "id": {"id": "6eef55ee-bc8a-4eda-95a2-3182beaedaed"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of documentation (natural language) and structured data, with clear spans for parameter names (\"param_ name Name to search for\") that can be used as examples in training an X-Spanformer model focused on span segmentation across different content types. / Clear spans for both parameter names and descriptions, representing useful patterns in span composition across different contexts. / The segment combines both descriptive text and structured parameters, providing clear examples of span segmentation in a hybrid context that is beneficial for training an X-Spanformer model. / Clear separation of parameters and descriptions; spans can be identified for both structured data (code) elements like \"Parameters:\" and descriptive text (\"Returns:\"). The segment is clean, well-formed with valuable patterns representing span composition in a code context intertwined with natural language explanations. / The segment contains a mix of documentation (natural language) and programming concepts, with clear spans for \"name,\" \"Param defined in the object:\" which can be useful to learn span segmentation patterns across both domains. However, it lacks context that would make its utility clearer; additional examples could improve training effectiveness."}}
{"raw": "bool 03d. ObjectBase.isAClassName String class name [inherited] Takes the name ofa class as an argument, and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "8f804e05-20f3-443e-9c86-9736c932ef89"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts (class names, inheritance) and comments/documentation style text (\"Takes the name...\"). It has clear spanable elements like class identifiers ('03d', 'String') that can help in learning code-related patterns alongside natural language explanations. / The segment contains a mix of programming concepts and language, with clear spans for class names (\"ObjectBase\", \"String\") and method descriptions that are useful patterns to learn from. It is coherent but lacks context which could be beneficial in training data. / The segment contains both programming language syntax and documentation, with clear indications of a function signature (\"bool\") followed by its description in English text; it exemplifies the combination of structured data (code) interspersed within explanatory prose that is valuable for learning span segmentation. / The segment contains a mix of programming language syntax and documentation, with clear spans for class names (\"ObjectBase\", \"String\") that can be used to learn span segmentation in both natural languages (class name descriptions) and code constructs. / The segment contains a mix of programming language syntax and comments, with clear spanable elements like class names (\"ObjectBase\", \"String\") that are useful for learning context-aware spans in both code structures (e.g., type declarations) and natural descriptions (e.g., function purpose)."}}
{"raw": "Member Function Documentation\nbool 03d. Param bind Param source_param [inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from: Passing in null will unbind any m parameter currently bound. Returns:\nTrue if the bind succeeded.", "type": "mixed", "id": {"id": "c03b5190-7de6-4f6b-9269-1f4fe7543696"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both structured programming documentation and descriptive text, providing a mix of elements useful for learning span segmentation in diverse contexts. It is well-formed with clear parameter descriptions that can be segmented into meaningful spans like function names, parameters, return values etc., which are valuable patterns to learn from. / The segment contains both structured documentation (natural language) and programming concepts, which can help the model learn span segmentation for different types of content. However, it lacks clarity in separating spans due to its compact format; thus a moderate score is given with an indication that further refinement could improve training utility. / The segment contains a mix of documentation-style text and programming-like syntax, which can help the model learn span segmentation for both types of content. It is clean but lacks context to fully evaluate its training utility without additional examples. / The segment contains a mixture of documentation-style text and programming concepts, with clear structure for span segmentation; however, it lacks sufficient length or variety to be highly representative as training data. / The segment contains a mix of documentation (natural language) and programming concepts, with clear spans for function names (\"Member Function\"), parameters (\"source_param\", \"param source_param [inherited]\", etc.), which are valuable patterns to learn span composition in both contexts."}}
{"raw": "Setting this has no meaning to 03D, but is useful for debugging and for the functions ClientgetObjects, Pack-getObject, RenderNode_getRenderNodesByNameInIree and RenderNode-getTransformsByNameInTree which search for objects by name. Reimplemented from 03d NamedQbjectBase:", "type": "mixed", "id": {"id": "f65c1bd8-db48-4a79-9110-049b3c8d8783"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming concepts and comments, providing diverse examples of span segmentation in a learning context. / The segment contains both technical descriptions and specific function names, which can help the model learn to distinguish between different types of spans in a programming context as well as general language structure. It is clean but lacks contextual coherence for standalone understanding without prior knowledge or additional data. / The segment contains a mix of technical descriptions and function names, providing clear span segmentation opportunities for both context (natural language) and specific terms or constructs (code). It is coherent but lacks contextual clarity due to the mixture type; however, it's clean enough as an example. / Contains a mix of technical descriptions and function names, which can help the model learn span segmentation in both contexts. / The segment contains a mix of technical descriptions and function names, providing clear examples for span segmentation in both contexts. It is coherent with useful patterns that can aid learning about spans related to debugging functions within code documentation or comments."}}
{"raw": "scale Scale to make the cube. o3djs.debug DebugHelper:setSphereColor lo3d_Transform transform 03djsmath Vector4 color Set sphere color: Parameters: transform Transform on which to change sphere color: color number array in RGBA format: o3djs.debug DebugHelper:setSphereScale !o3d Transform transform number scale Sets the scale of a debug sphere.", "type": "mixed", "id": {"id": "7f3aac64-c800-475d-9da9-5a4bfec2e81c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming instructions and comments, with clear structure for span segmentation; it includes a mix of language elements useful in learning context-aware spans. / The segment contains both programming constructs and comments, providing a good mix of structured patterns for span segmentation in an X-Spanformer model training context. / The segment contains both programming language syntax and comments, providing a good mix of structured patterns for learning span segmentation in an encoder that handles multiple content types. / The segment contains both programming constructs and comments, providing a diverse set of spans for learning span segmentation in the context of debugging tools or documentation related to software development libraries like O3D.js. / The segment contains both programming language syntax and comments, which are valuable for learning span segmentation in a tokenizer-free context that handles multiple content types."}}
{"raw": "Array 03d. Effect-getParameterInfo Gets info about the parameters this effect needs:", "type": "code", "id": {"id": "9b055acb-ef7b-410c-a725-db49d6d1179b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans like \"Array\", \"03d.\", and function names, suitable for learning span segmentation in programming contexts. / The segment contains clear, structured elements typical of programming documentation (e.g., function names and descriptions), which are valuable for learning span segmentation in a tokenizer-free context. It is clean but lacks contextual richness that could be beneficial to the model's understanding beyond isolated spans like \"Array 03d\" or \"Gets info about\". / Clear, structured programming-related content with identifiable spans for parameters and functions. Suitable training data for span segmentation in a tokenizer-free context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear mix of programming language syntax and documentation, with identifiable spans for both code ('Array', '03d.', etc.) and descriptive text ('Gets info about the parameters this effect needs'). Suitable pattern recognition training for X-Spanformer in handling such content types."}}
{"raw": "For example:\nvar streams = streamBank. vertexStreams ;\nfor (var 1 = 0 ; 1 < streams. length; i++) {\nvar stream = streams [ 1] ;\nNote that modifications to this array [e.g: push()] will not affect the underlying StreamBank; while modifications to the members of the array: will affect them:\nThis property is read-only:", "type": "mixed", "id": {"id": "5df1dd3f-87f1-4285-a8d3-08de49be2f58"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear spans of both programming constructs and comments; well-balanced representation for a tokenizer-free span-aware model learning to handle diverse input types. / The segment contains a clear mix of programming constructs (variables, loops) and comments that can be segmented into meaningful spans for learning purposes. It is clean with well-formed syntax relevant to both natural language explanations (\"For example\", \"Note\") and code structure (\"var streams = streamBank.vertexStreams;\"). / Clear mix of programming constructs and comments, with identifiable spans for both variable declarations/assignments (code) and explanatory text/comments which are crucial learning patterns for span segmentation in a tokenizer-free context. The segment is clean but lacks natural language coherence as it contains code snippets within the explanation; however, its structural clarity aids training utility across mixed content types. / Clear separation of language and programming constructs; spans can be identified as variable declarations, loops, comments in both contexts. / Clear mix of programming constructs and comments, with identifiable spans for both variable declarations (code) and explanatory text (natural language). Well-formed content suitable as training data."}}
{"raw": "height Height of the box. depth Depth of the box. opt_matrix A matrix by which to multiply all the vertices. Returns: ! o3d", "type": "mixed", "id": {"id": "6921ecb6-0bfe-4690-983b-e17134c6960d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive phrases and programming-related terms, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clear delimiters for span boundaries; this could be improved with additional context or punctuation marks like commas after each term (e.g., \"height Height of the box,\"). / The segment contains a mix of descriptive phrases and programming-related terms, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to inconsistent formatting (e.g., missing spaces around punctuation). / The segment contains a mix of descriptive phrases and programming-related terms, which can help the model learn to distinguish between different types of spans in both contexts. / Clear span segmentation between descriptive phrases and a programming function signature, representing both language constructs effectively for training purposes. / The segment contains both descriptive phrases and programming-related terms, providing a good mix of patterns for learning span segmentation in an environment that combines coding with documentation language."}}
{"raw": "Release 0.1.34 (21 April 2009) Known Issues Fonts are different on Mac and Windows. There is a handful of fonts that will work across platforms (look at samples/canvas-fontshtml), but even those aren't guaranteed to be pixel equivalent: Text support for the Canvas object isn't available on Linux Slow performance on some graphics cards, especially with Chrome Samples Issues Prince IO may sometimes start in an inconsistent state. Reloading and turning introduction pages slowly fixes this issue.", "type": "mixed", "id": {"id": "a696e710-8ee8-4dee-a8ad-126341bb1f25"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains a mix of release notes, descriptions (natural language), and technical references to fonts/canvas objects which can help the model learn diverse span compositions across different domains. / Contains a mix of structured information (release notes, known issues) and unstructured text that can be segmented into meaningful spans for training purposes. The segment is clean but lacks explicit span boundaries which are crucial in tokenizer-free models like X-Spanformer. / Contains a mix of release notes, descriptions (natural language), and technical details about software issues which can help the model learn span segmentation in both contexts. / Contains a mix of release notes, descriptions (natural language), and technical references to fonts/canvas which can help in learning span segmentation across different contexts. / The segment contains a mix of release notes, descriptions (natural language), and technical details that can be segmented into meaningful spans for training purposes. It is clean but may lack some clarity due to the informal nature (\"Slow performance on...\") which could confuse models not trained well in such contexts."}}
{"raw": "Reimplemented in 03d NamedObject:\nArray 03d Param outputConnections [inherited] The output connections for this param.", "type": "code", "id": {"id": "ac1395a5-f303-4a75-bbc0-6424be5a1d91"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming language syntax and comments, which can teach the model to distinguish between different types of spans in a combined context. However, it lacks clarity due to missing punctuation or clearer separation markers for educational purposes. / Clear mix of programming language syntax and comments, with identifiable spans for both variable names (\"03d NamedObject\") and descriptive text segments (e.g., \"Array\", \"outputConnections\"). Well-formed content that represents valuable patterns in span composition across natural language descriptions within code context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structure with identifiable spans like class names, method calls, and comments; well-suited for learning span segmentation in programming contexts. / Clear structure with identifiable spans like class names, attributes (Array), and method calls ('03d NamedObject', 'outputConnections'). Suitable for learning span segmentation in programming contexts."}}
{"raw": "Params on it: Parameters: param_object ParamObject to dump.", "type": "mixed", "id": {"id": "5620a81e-c4c8-4ea3-9b50-5e99e4531af2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to missing punctuation or clearer separation markers for parameters versus code constructs; thus it's not ideal but still valuable as training data. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential ambiguity with \"Params\" as either plural or singular form without context; this could be clarified for better training utility. / The segment contains a mix of programming language syntax and comments, with clear parameters that can be segmented into meaningful spans for learning purposes. Despite the lack of punctuation or full sentences in natural language style, it is coherent within its context as code documentation. / The segment contains a mix of programming terminology and parameter descriptions, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential ambiguity (\"it\" is unclear). More examples with clearer context would improve its utility for training purposes. / The segment contains a mix of programming-like syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential misinterpretation as actual code parameters versus natural language explanations or documentation notes."}}
{"raw": "Parameters: stripCount The number of entries to strip from the top of the stack. Example: Pass in 1 to remove yourself from the stack trace. Returns: string. The stack trace.", "type": "mixed", "id": {"id": "f87efc66-fde5-44b7-875e-0c15b2846c83"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both descriptive text and technical terms with clear structure for span segmentation; useful in learning context-switching between documentation language and programming terminology. / Contains both parameter descriptions and example usage, which are valuable for learning span segmentation in a mix of technical documentation and programming context. / Clear separation of parameters, examples and returns; spans include both descriptive text (natural language) and technical terms/code-like phrases that are useful for training a span-aware model on diverse content types. / Clear distinction between parameters, examples (code), and descriptions; spans are identifiable for both language elements and programming constructs. / Clear separation of parameters, examples (code-like), and descriptions; spans can be identified as parameter names, values, or explanations."}}
{"raw": "This property is read-only\nbool 93d Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only: bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it aS a source. Default = true.", "type": "mixed", "id": {"id": "9b374cad-ed78-49eb-8f7e-a27b3072253c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation-style text and programming concepts, with clear spanable phrases like \"This property is read-only\" that can be used to train the model on recognizing both natural language descriptions in code context. However, there are some inconsistencies (e.g., 'Param' vs 'param') which may confuse learners; thus a slightly lower score reflects these minor issues but overall it's valuable for mixed content training. / Contains both readable text and programming constructs, with clear span segmentation opportunities in the context of properties being described as read-only or input parameters. / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn span segmentation for both human-readable descriptions (\"This property is read-only\") and technical terms or code constructs (\"bool\", \"Param\"). However, it lacks clear delimiters between spans. / Contains both readable text and programming constructs, with clear span segmentation opportunities in the context of properties being described. / The segment contains a mix of documentation-style text and programming language constructs, with clear span segmentation opportunities for both types (e.g., \"This property is read-only\" as one phrase). It represents valuable patterns in terms of natural language descriptions alongside code annotations which are useful to learn."}}
{"raw": "bool 03d Param updateInput [inherited] If true, this param will make sure its input param is up to date when using it as a source. Default = true. This is for helping with Param cycles.", "type": "mixed", "id": {"id": "02140017-3c04-4016-8329-23f0ca201a8f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to its informal structure (\"Param cycles\" is ambiguous). Clean up for better training utility. / The segment contains a mix of programming language syntax and comments, with clear parameters that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context on the broader usage or examples which could improve its utility as training data. / Clear spans of both descriptive text and technical parameters; useful for learning span segmentation in a context combining documentation with programming concepts. / The segment contains a mix of programming language syntax and documentation, with clear structure for span segmentation (variable names as spans) and valuable patterns in parameter descriptions. / The segment contains a mix of programming language syntax and documentation, with clear structure for span segmentation (e.g., parameter names, boolean values). It represents valuable patterns in both coding conventions and natural language explanations within code comments or docs."}}
{"raw": "The wizard is very similar to the built-in New Java Interface wizard, except for the addition of the Bundled resources list. Each resource is identified by its filename, resource type (e.g: ImageResource), and the name of its corresponding method in the generated ClientBundle interface.", "type": "mixed", "id": {"id": "454d9522-eb4f-468f-9c5c-449902765d2f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a clear description with identifiable spans such as \"wizard,\" \"New Java Interface wizard,\" and technical terms like \"Bundled resources list\" that are relevant for span segmentation in both natural language processing (NLP) tasks related to code documentation, making it valuable training data. / Clear spans of both descriptive text and technical terms related to programming interfaces, suitable for learning span segmentation in a mixed context. / Clear spans of both descriptive text and technical terms related to programming interfaces, suitable for learning span segmentation in a mixed context. / The segment contains a mix of technical descriptions and programming concepts, with clear references to interfaces (natural language) and resource types/methods in generated classes or bundles (code). It demonstrates meaningful span segmentation between descriptive text (\"The wizard is very similar...\") and code-related terms. / The segment combines both descriptive language and technical terms related to software development, providing clear examples of span segmentation between concepts like \"wizard,\" programming constructs (\"New Java Interface wizard\"), resources (e.g., ImageResource), filenames, resource types, methods in interfaces which are valuable for learning patterns."}}
{"raw": "Returns: Io3d Shape: The created wedge.\n! o3djs primitives VertexInfo 03djs.primitives create Wedge\" Vertices\n!", "type": "mixed", "id": {"id": "ea1abdd4-7c5b-4a9a-ae89-35289aa0d893"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-related comments and commands, with clear spans for both the description (\"Returns: Io3d Shape\") which is in English (natural language) as well as technical terms related to code (\"o3djs primitives\", \"create Wedge\"). These elements are coherent within their context. / The segment contains both programming-related comments and a command, showing clear span segmentation opportunities in the context of software documentation or configuration files. / The segment contains a mix of programming comments and object-oriented notation, which could help the model learn span segmentation in both contexts. However, it lacks clarity due to potential OCR errors (\"Io3d Shape\" vs \"The created wedge\", etc.). / The segment contains a mix of programming comments and object-oriented syntax, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to inconsistent formatting (\"! o3djs\" should be \"o3d.js\"). / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a coding context as well as understand documentation styles alongside actual commands or functions."}}
{"raw": "Sample COLLADA Converter As part of the 03D SDK, an executable sample COLLADA Converter can be used to convert an existing COLLADA file into a format supported by O3D. The result is a a gzipped tar file containing all assets (texture files, shader files, vertices, skinning data; and animation) as well as a sample format JSON file that contains a representation of the structure of the original COLLADA file.", "type": "mixed", "id": {"id": "8594490b-0038-4667-9fa8-df6b1e205f3e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and file formats, with clear references to COLLADA files which can be segmented into meaningful spans for learning purposes. It is clean but lacks explicit examples or patterns that could further enhance training utility. / The text segment contains a mix of descriptive language and technical terms related to COLLADA files, which can help the model learn span segmentation for both human-readable descriptions (natural) and specific file formats or code constructs used in software development documentation (code). / The segment contains a mix of technical descriptions and file formats, with clear references to COLLADA files which can be segmented into meaningful spans such as \"COLLADA Converter,\" \"03D SDK,\" etc., representing valuable patterns for learning span composition in both natural language context. / The segment contains a mix of technical descriptions and file formats, with clear references to COLLADA files which are relevant for learning span segmentation in both programming contexts (code) as well as documentation language structures. However, the presence of multiple languages within one sentence may slightly reduce clarity but still maintains compositional value. / The segment contains a mix of technical descriptions and file formats, with clear references to COLLADA files which can be segmented into meaningful spans such as \"COLLADA Converter,\" \"O3D,\" etc., representing valuable patterns for learning span composition in both natural language explanations and code-related terminology."}}
{"raw": "per-vertex attributes (semantics match those in vertex shader)\nuniform parameters\nVertex Shader\nRasterizer\nuniform parameters samplers\nPixel Shader\nFrame Buffer Operations\nFrame Buffer", "type": "mixed", "id": {"id": "38e023a7-b92e-4493-9825-5d77fa984c58"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terms and concepts that can be segmented into meaningful spans, such as \"per-vertex attributes,\" which are relevant to shader programs in computer graphics; however, it lacks context for full comprehension by the model without additional natural language explanations. / The segment contains clear, identifiable spans of both programming concepts (e.g., \"Vertex Shader\", \"Pixel Shader\") and related terms (\"uniform parameters\"). It is well-structured for learning span composition in a tokenizer-free context that deals with code semantics alongside natural language descriptions. / Clear segmentation into meaningful spans like shader names, uniform parameters; clean and well-formatted for training purposes. Represents valuable patterns in programming context. / The segment contains a mix of programming terms and concepts that can be segmented into meaningful spans, such as \"per-vertex attributes,\" \"uniform parameters,\" etc., representing valuable patterns for learning span composition in both natural language descriptions (like shader names) and code constructs. / Contains both programming concepts and terminology, which can help the model learn span segmentation in a context that includes technical language alongside more general terms like \"uniform parameters\" and \"Shader.\" The structure is clear with identifiable spans related to code constructs (e.g., Vertex Shader, Pixel Shader) as well as natural language descriptions."}}
{"raw": "Note: This value is only valid inside the onfileavailable callback\nThis property is read-only: bool 03d ArchiveRequest done Indicates whether processing for this FileRequest has finished\nThis property is read-only:\nString 03d ArchiveRequest error An error message. If done is true and success is false this will be an error message describing what went wrong: This property is read-only:\nArchiveRequestCallback 93d ArchiveRequest_onfileavailable", "type": "mixed", "id": {"id": "c7075159-666b-4d19-87ed-54865529753e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with meaningful spans; well-defined properties and callbacks typical for programming documentation. / The segment contains a mix of documentation-style comments and programming-related properties, which can help the model learn span segmentation in both contexts. However, it lacks coherence as an isolated example due to its fragmented nature; thus it's not ideal for standalone training but could be valuable when combined with other examples. / The segment contains a mix of comments, property descriptions and method names which are clear spans for training purposes in both documentation (natural language) and programming context (code). It is clean but lacks coherence as it seems to be extracted from different parts without contextual flow. / The segment contains a mix of documentation-style text and programming-related terms, with clear spans for phrases like \"onfileavailable callback\" that can be used to train the model on span segmentation in both natural language descriptions and code annotations. / The segment contains a mix of documentation-style comments and programming properties, with clear span boundaries for each element; it's clean but lacks context or examples that could improve learning utility."}}
{"raw": "Returns:\nTrue if the param was removed", "type": "mixed", "id": {"id": "ce3813bd-4e71-440c-8c58-e6b040c70fb6"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear indication of a function's return value, combining both programming logic and descriptive text. Suitable for learning span segmentation in diverse contexts. / The segment contains a clear function signature with parameters and return values, which are common in programming documentation; it represents valuable patterns for learning span composition between the description of functionality (\"Returns\") and its outcome (\"True if\"). / Clear indication of a function's return value with concise language, representing valuable patterns for learning span segmentation in both programming and documentation contexts. / The segment contains a clear function signature with parameters and return values, representing valuable patterns for learning span composition in both programming contexts (code) and documentation language structures (natural). / Clear separation of a function signature and its description, representing both programming language syntax (code) structure as well as the accompanying documentation style found in many software projects. This mix is beneficial for learning span segmentation across different content types."}}
{"raw": "[inherited] Unique id of the object:\nThis id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nParam 03d Param inputConnection [inherited] The input connection for this param: This property is read-only:\nString 03d NamedQbiectBasename", "type": "mixed", "id": {"id": "d16dd9d6-5738-41f4-9f0b-11affe8bcba7"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured programming-related content with identifiable spans for unique identifiers and property descriptions. / The segment contains a mix of descriptive text and technical terms related to software parameters, which can help the model learn span segmentation for both types of content. However, it lacks clarity due to abbreviations like \"03D\" without context or explanation. / The segment contains a mix of descriptive text and technical terms related to programming, with clear identifiers for spans like \"Unique id\" or \"[inherited]\". It is well-formed but lacks context which might be necessary in training data. / The segment contains a mix of documentation-style text and programming-related terms, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clear examples for some elements like \"NamedQbiectBasename.\" / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to identify spans in both contexts; however, it lacks clarity due to potential typographical errors (\"NamedQbiectBasename\" instead of \"NamedObjectBaseName\")."}}
{"raw": "One special aspect of gwt-maven-plugin to be familiar with is that it runs its own special test goal in order to support GWTTestCase and GWTTestSuite derived GWT tests If you're not familiar with GWT testing support you should first read the related documentation:", "type": "mixed", "id": {"id": "ba31128f-74dd-4acb-9404-c31ffa1253e8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of technical documentation (natural language) and specific terms related to software development tools, which can help the model learn span segmentation for both types of content. However, it lacks clear examples or patterns that are easily segmented into spans without further context on how these elements should be split in code-related tasks versus natural text processing. / The segment contains a mix of instructions and references to documentation, with clear phrases that can be segmented into meaningful spans for learning purposes. However, the presence of URLs or specific identifiers (like \"gwt-maven-plugin\") may need further context in actual training data. / The segment contains a mix of technical documentation and instructional language, with clear references to programming concepts (\"GWTTestCase\", \"GWTTestSuite\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks detailed examples or code snippets which could enhance its utility as training data. / Contains a mix of instructional text and technical references, with clear spanable phrases like \"special test goal\" that can be useful for learning contextually rich spans in both programming concepts (code) and explanatory prose (natural language). / The segment contains a mix of instructional text and technical references, which can help the model learn both general language structures as well as domain-specific terminology related to software development tools like gwt-maven-plugin. However, it lacks explicit code examples or detailed programming constructs that could further enhance its training utility for span segmentation in mixed content contexts."}}
{"raw": "See Also: 03djs_jo LoadInfo\n!03djs i LoadInfo 03djs.io.loadArchive !o3d", "type": "mixed", "id": {"id": "a2395523-86d1-4700-bd4e-adeca31d6915"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured commands and parameters, suitable for learning span segmentation in programming contexts. / The segment contains a mix of programming commands and comments, which can be useful for learning span segmentation in both contexts. However, the clarity could improve with better formatting or separation between different elements. / Contains both programming commands and comments, which can help the model learn span segmentation in a coding context. / Contains both programming commands and comments, showing a mix of structured elements suitable for span segmentation learning. / Clear structure with identifiable spans for programming constructs, suitable as training data for a span-aware model in the context of coding patterns and syntax."}}
{"raw": "VertexStreamInfo number num Components 'o3dStream_Semantic semantic number opt_semanticIndex Used to store the elements of a stream. Parameters: nume Components The number of numerical components per element: semantic The semantic of the stream: opt_semanticIndex", "type": "mixed", "id": {"id": "7e037aa1-654a-4f69-b979-7acdbc702bcb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as 'VertexStreamInfo', 'num Components', etc., which are useful for learning span composition in both code-related contexts (like programming language syntax) and natural language explanations. / The segment contains a mixture of technical terms and structured data, with clear delineation between different components that can be segmented into meaningful spans for learning purposes. However, the presence of typographical errors (e.g., 'nume' instead of 'number') may affect clarity slightly but still retains its compositional value as mixed content. / The segment combines both technical terminology and structured data, which can help the model learn span segmentation in a context that includes programming concepts alongside descriptive text. However, there are minor spelling errors (\"nume\" instead of \"number\") affecting clarity slightly. / Contains both structured programming concepts and descriptive text, offering diverse span patterns for learning. / Clear separation of terms and parameters, representing both semantic descriptions (natural language) and technical specifications (code-like structure). Suitable for learning span segmentation in a tokenizer-free context."}}
{"raw": "In addition, the sample Converter will convert shader files in either supported format (FX shaders with a ps_ 2_0 /vs_ 2 0 technique, as supported in Max, o CgFX shaders having an arbfpl/arbvpl technique, as supported in Maya) to our internal shading language format: It will remove the technique blocks from the shader and insert the entry points into the VertexShaderEntryPoint and PixelShaderEntryPoint comment formats. It will also set the MatrixLoadOrder to RowMajor (for DX) O ColumnMajor (for OpenGL): Fin", "type": "mixed", "id": {"id": "afe8872c-e1bb-48b8-9977-a021fb3407d8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of technical descriptions and specific terms related to shader conversion, which can help in learning span segmentation for both programming constructs (code) and descriptive text (natural language). However, the presence of abbreviations like \"ps_,\" \"vs_\", etc., without context may pose challenges. / Contains both structured programming concepts (shader files, techniques) and technical documentation language; spans can be identified as meaningful segments related to shader conversion processes. / The segment contains a mix of technical descriptions and programming concepts, with clear references to shader formats (natural language) alongside specific terms like \"VertexShaderEntryPoint\" which are relevant for span segmentation in code contexts. It is coherent but lacks sufficient context or examples that could enhance its training utility further. / Contains a mixture of technical descriptions and programming concepts with clear span segmentation opportunities in both language text (e.g., \"shader files\", \"internal shading language format\") and specific syntax elements (\"ps_2_0 /vs_20 technique\"). / The segment contains a mix of technical descriptions and structured formatting that can be segmented into meaningful spans, such as shader file formats (FX shaders), techniques (\"ps_2_0\", \"vs_20\"), entry points (\"VertexShaderEntryPoint\", \"PixelShaderEntryPoint\"), matrix load orders (\"RowMajor\", \"ColumnMajor\"). It is clean but lacks coherence due to the abrupt ending."}}
{"raw": "Effect loadFromFXString String   effect Loads the vertex and pixel shader programs from an string containing an 03D FX description. The string is subset of CG and HLSL.", "type": "mixed", "id": {"id": "c41e2064-d2df-487d-8e11-3dcf3a051738"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and domain-specific terminology, which can help the model learn span segmentation for both technical terms (\"03D FX\", \"CG\", \"HLSL\") as well as code constructs (e.g., function names like `loadFromFXString`). / Contains both programming language syntax and descriptive text, providing a diverse range of patterns for span segmentation in the context of shader descriptions. / Contains both programming language syntax and descriptive text; spans can be identified as '03D FX description', 'CG' (C for Computer Graphics), 'HLSL' (High-Level Shader Language). Clear patterns in code-related terms, useful for learning span composition. / The segment contains a mix of programming language syntax and technical descriptions, with clear spanable elements like \"effect loadFromFXString\", which can help the model learn both coding patterns and domain-specific terminology. / The segment contains a mix of programming language syntax and domain-specific terminology, which could help the model learn to distinguish between different types of spans in both contexts. However, there are some spelling errors (\"03D\" should be \"O3D\") that may need correction for optimal training utility."}}
{"raw": "'03d.ViewInverseTransposeParamMatrix4' , '03d. ViewProjectionParamMatrix4' , '03d.ViewProjectionInverseParamMatrix4' , '03d. ViewProjectionTransposeParamMatrix4' , '03d.ViewProjectionInverseTransposeParamMatrix4' , '03d.", "type": "code", "id": {"id": "9c823445-f527-4827-96ae-fe0910a04803"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment lacks meaningful context and clarity; it's a list of identifiers without discernible patterns or structure for learning span segmentation. / Clear and consistent pattern of function-like identifiers, suitable for learning span segmentation in programming contexts. / Clear, structured programming constants suitable for span segmentation and learning patterns in a tokenizer-free context. / Clear and consistent pattern of function-like identifiers, suitable for learning span segmentation in programming contexts. / Clear, structured programming constants with consistent naming patterns suitable for span segmentation and learning."}}
{"raw": "ObjectBase.isAClassName String class name [inherited] Takes the name of a class as an argument, and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "494f82c8-c9ad-4144-97ab-f4d0c6d99932"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and language, with clear spanable elements like class names that can be useful for learning context-aware segmentation in both domains. / The segment contains a mix of programming concepts and language, with clear spans for class names (\"ObjectBase\", \"isAClassName\") that can be used to train the model on span segmentation in code context combined with natural descriptions. / Clear distinction between object-oriented programming concepts and their descriptions, useful for learning span segmentation in both language constructs (e.g., \"ObjectBase.isAClassName\") and associated explanations (\"String class name [inherited]\"). / The segment contains a mix of programming concepts and language, with clear spans for class names (\"ObjectBase\", \"isAClassName\") that can be used to learn span segmentation in both code context (class name) and natural language explanation ([inherited], Takes the name...). / The segment combines both programming concepts and language constructs, providing a clear example of span segmentation between the class name \"ObjectBase\" as an identifier (code) and its description in natural language (\"isAClassName String\"). This mix is valuable for learning how to parse code comments or documentation."}}
{"raw": "Array 03d ParamObiect params [inherited] Gets all the param on this param object:\nEach access to this field gets the entire list; So it is best to get it just once. For example:\nvar params\nparamObject.params for (var 1 = 0 ; 1 < params . length; 1++) {\nvar param\nparams [ 1] ;", "type": "mixed", "id": {"id": "d451d39c-89e6-420a-b404-fdd1319a79a8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and language, with clear spans for both variable declarations (natural) and loop constructs (code). It represents valuable patterns in span segmentation across different domains. / The segment contains a mix of programming concepts and language, with clear examples for learning span segmentation in both contexts. It is well-structured but could be improved by separating the explanation from actual code snippets to enhance clarity. / Clear spanable patterns with both variable names and array/object access syntax, representing useful training data for a tokenizer-free model learning to segment spans in programming contexts alongside descriptive text. / The segment contains a mix of programming concepts and language, with clear structure for span segmentation; it includes both variable declarations (natural) and loop constructs in JavaScript-like syntax (code). It is clean but lacks context or explanation which could be beneficial as additional training data. / The segment contains a mix of programming concepts and language, with clear examples that demonstrate how to access an array-like object in JavaScript; it is clean for training purposes."}}
{"raw": "Transform:translate Vector3 translation Pre-composes the local matrix of this Transform with a translation: For example, if the local matrix is a rotation then new local matrix will translate by the given vector and then rotated.", "type": "mixed", "id": {"id": "6366f4ae-498d-4af8-9b23-2b8cbf911eec"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical language and programming concepts, with clear spans for translation vectors (Vector3) and transformation matrices that can be used to train span segmentation in both natural language descriptions (\"Pre-composes the local matrix\") and code constructs (\"new local matrix will translate by\"). / Clear combination of descriptive text and programming-related terms, with identifiable spans for both language (\"Transform\", \"translate\") and technical constructs (e.g., Vector3). Suitable pattern recognition training example. / Contains both programming concepts and language, with clear spanable elements like \"Transform,\" \"translate Vector3 translation,\" etc., suitable for learning composition in a tokenizer-free context. / The segment contains a mix of programming concepts and language, with clear spans for both the function name \"Transform\" and its description that includes technical terms like Vector3 translation which are useful patterns to learn span composition in code documentation context. / Contains both programming concepts and language, with clear spans for \"Transform\", \"translate Vector3 translation\" as a phrase indicating an operation on vectors in the context of transformations; useful patterns identified for span segmentation."}}
{"raw": "Parameters: transform Transform on which to change sphere scale. scale Scale to make the sphere. 03djs.debug DebugLine Class Reference List of all members", "type": "mixed", "id": {"id": "dcfae5e2-cb15-4a76-942f-d4125ed9a18e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of parameter descriptions and programming constructs, which can help the model learn span segmentation for both technical documentation (natural language) and coding syntax (code). However, it lacks clarity in separating different spans due to its compact format; thus it's not ideal but still valuable. / The segment contains both parameter descriptions (natural language) and programming constructs, offering a diverse range of patterns for span segmentation in an X-Spanformer model. However, the lack of context may slightly reduce its utility as training data. / The segment contains a mix of parameter descriptions and programming references, which can help the model learn span segmentation for both technical terms (code) and descriptive phrases (natural language). However, it lacks coherence as it's not well-structured text; thus some ambiguity in learning patterns. / The segment contains a mix of parameter descriptions and programming concepts, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential ambiguity between parameters (\"transform\", \"scale\") as words or code constructs (e.g., method names). / The segment contains a mix of parameter descriptions and programming constructs, providing diverse examples for span segmentation in both contexts. However, the clarity could be improved by separating parameters from their explanations or adding context to make it more coherent as training data."}}
{"raw": "ally, it will remove all sampler state and render state from the shader files and place those states into the sample format JSON file as 03D State objects and settings.", "type": "mixed", "id": {"id": "e5b057a5-59fb-4028-9f25-00b760b57133"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of technical terms and instructions that can be segmented into meaningful spans, such as \"sampler state\", \"render state\", which are relevant for learning span composition in both code-related contexts (like shader files) and natural language descriptions (\"JSON file\"). / The segment contains a mix of technical terms and instructions that can be segmented into meaningful spans, such as \"sampler state,\" \"render state,\" and specific file formats like JSON with object notation (\"03D State objects\"). It is clean for training purposes but lacks context which could limit its utility. / Contains a mixture of technical terms and instructions that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts (e.g., \"shader files\", \"sample format JSON file\") and natural language explanations (\"will remove all sampler state\"). / The segment contains a mixture of technical terms and instructions that can be segmented into meaningful spans, such as \"sampler state,\" \"render state,\" etc., which are useful for learning span composition in both code-related contexts (like shader files) and natural language descriptions. / Clear combination of technical language and JSON object references, with identifiable spans for both programming constructs (\"shader files\", \"sample format\") and configuration settings (\"03D State objects\"). Suitable training data due to its compositional value in representing span segmentation across different domains."}}
{"raw": "ArchiveRequest_onreadystatechange A callback that gets called each time readyState changes.", "type": "mixed", "id": {"id": "09f69db4-4b71-49eb-987f-6c5de7a5724e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear callback function name with consistent camelCase naming convention, representing valuable patterns for learning span composition in programming contexts. / The segment combines a programming concept (callback) with an API method name (\"ArchiveRequest_onreadystatechange\"), providing clear span patterns for both technical terms and their usage context in coding, which is valuable for learning code comprehension alongside natural language processing. / Clear structure with meaningful spans; represents valuable patterns for learning span composition in programming context. / The segment combines a programming concept with its explanation, providing clear spans for both technical terms and their descriptions which are valuable patterns to learn span composition in X-Spanformer training data. / The segment contains a mix of programming terminology and structure, with clear spans for \"ArchiveRequest_onreadystatechange\" as an object name or function call in JavaScript/JSON context; it is clean but lacks contextual clarity on its usage."}}
{"raw": "This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nString 03d NamedObjectname [inherited] The object's name. Setting this has no meaning to 03D, but is useful for debugging and for the functions Client_getObjects, Pack-getObject; RenderNode getRenderNodesByNamelnTree and RenderNode-getTransformsByNameInTree which search for objects by name:\nReimplemented from 03d NamedObjectBase:", "type": "mixed", "id": {"id": "66d7c63c-3dfa-46ad-adf2-fba8f457e890"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical documentation and programming concepts, with clear identifiers for spans such as object names (\"03d\", \"NamedObjectname\") that can be useful in learning span segmentation patterns across both natural language descriptions (e.g., 'This id will be unique') and code constructs. / The segment contains a mix of technical documentation and programming concepts with clear, identifiable spans for both the description (natural language) and specific terms or functions related to coding constructs; it is clean but may require additional context due to its specialized nature. / The segment contains a mix of technical documentation and programming concepts, with clear references to object properties (spans) that are useful for training on span segmentation in both contexts. / The segment contains a mix of technical documentation and programming concepts, with clear identifiers for spans such as object names (\"03d\", \"NamedObjectname\") that can be useful in training the model to recognize span boundaries within code comments or descriptions. / The segment contains a mix of technical documentation and programming concepts, with clear identifiers for spans such as object names (\"03d\", \"NamedObjectname\") that can be used to train the model on span segmentation in both natural language descriptions (e.g., 'This property is read-only') and code constructs."}}
{"raw": "No techinques are allowed: To define the entry points add 2 lines in the following format:\n\" | [ #03d VertexShaderEntryPoint myVertexshaderln\" \" | [ #03d PixelShaderEntryPoint myPixelShader |n\"", "type": "mixed", "id": {"id": "941384f5-4a21-473c-8c93-31db83cc8e9d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of technical instructions and programming syntax, which can help the model learn span segmentation in both contexts. However, there are typos (\"techinques\" instead of \"techniques\") that may need correction for optimal training utility. / The segment lacks clarity and coherence, with fragmented syntax that impedes meaningful span identification for training purposes. / Clear structured patterns for entry points; well-suited to learn span segmentation in programming context. / The segment contains a mix of instructions and programming syntax, which can help the model learn to differentiate between different types of spans in both contexts. However, there are typos (\"techinques\" instead of \"techniques\") that may affect clarity slightly but still retain overall structural integrity for training purposes. / Contains both structured commands and comments, representing valuable patterns for learning span segmentation in a mix of contexts."}}
{"raw": "bool 03d Param updateInput [inherited] If true, this param will make sure its input param is up to date when using it as a source. Default = true. This is for helping with Param cycles.", "type": "mixed", "id": {"id": "111df101-2a65-4bec-963d-4e4cf825a485"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to unconventional formatting (e.g., \"bool\" instead of boolean). / The segment contains a mix of technical language and configuration-like syntax, with clear parameters that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which could affect its utility as standalone training data. / The segment contains both a programming language syntax (e.g., \"bool\", \"[inherited]\") and documentation-style text (\"If true, this param will make sure its input param is up to date when using it as a source\"), which can help the model learn span segmentation in code comments or docstrings. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation for both types of content. However, it lacks clarity in separating different spans due to its compact nature; additional examples with clearer separation would be beneficial. / The segment contains a mix of programming language syntax and documentation, with clear structure for span segmentation (e.g., parameter names like \"bool\", identifiers such as \"[inherited]\", keywords like 'true', etc.). It is clean but lacks context or examples that could enhance its utility."}}
{"raw": "03d. WorldViewProjectionInverseParamMatrix4 Class Reference\nInherits 03d ParamMatrix4;\nList of all members", "type": "code", "id": {"id": "05423aa8-6f14-4893-b920-46300f58d705"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines a programming class reference with structured list elements, providing clear span patterns for both technical and descriptive language components. / Clear class reference with inheritance, suitable for learning span segmentation in programming context. / Clear class reference with inheritance and member listing, suitable for learning span segmentation in programming context. / Clear class reference with meaningful spans; well-suited for learning span composition in programming context. / Clear class reference with inheritance, suitable for learning span segmentation in programming context."}}
{"raw": "03d. ParamStreamBank Class Reference\nInherits 03d Param:\nList of allmembers\nDetailed Description\nParam which stores a StreamBank\nPublic Member Functions\nbool bind (Param source_param) unbindInput unbindQutput Param destination_param) unbindQutputs bool isAClassName (String class_ name)\nPublic Attributes\nStreamBank value\nbool updatelnput bool readOnly Param inputConnection Array outputConnections String name Id clientld String className\nMember Function Documentation\nbool 03d.Param.bind\nParam source_param", "type": "mixed", "id": {"id": "909a7091-a107-44a5-bcc6-f61db7c698ce"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and documentation, with clear public member functions and attributes that can be segmented into meaningful spans for learning purposes. Despite some typos (e.g., \"unbindInput\" instead of the likely intended \"unbindInput\"), it retains structural clarity essential to training span segmentation models like X-Spanformer. / The segment contains a mix of programming concepts and documentation, with clear public member functions that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully assess its training utility without additional surrounding text. / The segment contains a mix of programming constructs and documentation, with clear identifiers for spans like class names (\"ParamStreamBank\"), member functions (e.g., \"bind\", \"unbindInput\"), attributes (\"value\", \"outputConnections\"). It is well-formed but lacks context. / Clear structure with identifiable spans such as class names, member functions, and attributes; well-suited for learning span composition in programming context. / The segment contains a mix of programming constructs and documentation, with clear identifiers for spans like class names (\"ParamStreamBank Class Reference\"), member functions (\"bool bind\", \"Public Member Functions\"), attributes (e.g., \"value\", \"outputConnections\"). It is well-structured but lacks context or examples that could enhance learning."}}
{"raw": "Io3d DrawList 03djs rendergraph: ViewInfo performanceDrawList The DrawList used for the performance draw pass. Generally for opaque materials. Io3d DrawPass 03djs.rendergraph: ViewInfo:performanceDrawPass The DrawPass used with the performance DrawList created by this ViewInfo. Io3d State 03djs.rendergraph: ViewInfoperformanceState The State object used by the performanceStateSet object in this ViewInfo.", "type": "code", "id": {"id": "cd31acc4-1c28-4a1e-bb4e-1cf45db14155"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; useful for learning patterns in programming constructs and API documentation. / Clear, structured API documentation with identifiable spans for each object and method. / Clear structure with identifiable spans related to rendering states and objects in a programming context, representing valuable patterns for learning span composition within the domain of computer graphics or similar fields. / Clear structure with identifiable spans related to object properties and methods in a programming context, suitable for learning span segmentation patterns specific to coding constructs. / Clear, structured segments representing meaningful spans for a span-aware model in the context of programming constructs and object properties."}}
{"raw": "Pack 03dShape\nIo3d Shape 03djs primitives createCube lo3d Pack pack ! o3d Material material number size ! o3djsmath Matrix4 opt_ matrix Creates a cube. The cube will be created around the origin.", "type": "mixed", "id": {"id": "7242558b-29e4-4f1d-89f1-ef8339630fd3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming commands and descriptions, with clear structure for learning span segmentation between the command syntax (e.g., \"createCube\") and their explanations or parameters (\"around the origin\"). Despite some informal language like 'lo3d', it maintains coherence. / The segment contains a mix of programming instructions and comments, with clear structure for span segmentation; however, it lacks coherence as an isolated example due to the presence of both commands (e.g., `createCube`) and descriptive text (`The cube will be created around the origin`). / The segment contains a mix of programming instructions and comments, with clear structure for span segmentation; however, it lacks coherence due to the presence of unrelated commands (\"Pack\", \"Material\"). It can still be useful as an example but may need additional context or cleaning up. / Contains both programming instructions and comments, showing clear span segmentation opportunities between commands (`createCube`) and descriptions/comments (e.g., `lo3d Pack pack`, `Creates a cube`). The text is clean but lacks coherence due to mixing of natural language explanations with code syntax. / The segment contains a mix of programming commands and descriptions, with clear structure for span segmentation; however, it lacks coherence as an isolated example due to its fragmented nature."}}
{"raw": "Multiplies a vector by a scalar: Parameters: V The vector k The scalar: Returns: Io3djs math Vector The product ofk and v\n! o3djs mathVector 03djs.math mulVectorVector Io3djsmath Vector 0", "type": "mixed", "id": {"id": "01fdb50a-bf4a-4dec-a1f0-0e66b9eaea83"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming constructs and comments, with clear spanable elements like function names, parameters, return values, which are valuable for learning span segmentation in a tokenizer-free context. / The segment contains a mix of programming instructions and comments, with clear structure for span segmentation; however, it lacks coherence due to the presence of unrelated elements like \"Io3djs\" which could confuse training data quality. / The segment contains a mix of programming instructions and comments, with clear structure for learning span segmentation in both contexts. / The segment contains a mix of programming language syntax and comments, with clear structures for both vector-matrix multiplication (code) and its description in plain English (natural). It provides valuable patterns on how code is annotated alongside natural explanations which can be useful to learn span segmentation. / The segment contains both programming constructs and comments, which can help the model learn span segmentation in a context that includes human-readable explanations alongside actual commands or functions. However, it lacks clarity due to inconsistent formatting (e.g., \"03djs\" vs. \"0\")."}}
{"raw": "Using the plugin, you can also easily deploy GWT projects to Google App Engine: If you installed the App Engine for Java SDK when you installed the plugin, you can now right-click on the project and App Engine \"enable\" it by choosing Google > App Engine Settings Check the box marked Use Google App Engine. This will add the necessary configuration files to your project;\nTo deploy your project to App Engine, you first need to create an application ID from the App Engine Administration Console:", "type": "mixed", "id": {"id": "77393078-3fbb-4545-afe1-ad5b09f2d6d3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mixture of instructions (natural language) and technical steps that can be segmented into meaningful spans, such as \"Google App Engine Settings,\" which is useful for learning span composition in both natural text and code-like structures. / The segment contains both instructional text and configuration instructions, which are valuable for learning span segmentation in a mixed context. However, it lacks clear delimiters between different spans such as commands or settings descriptions that could be improved upon to increase clarity. / The segment contains a mixture of instructions and configuration steps, with clear separations between them that can be segmented into meaningful spans for training purposes. It is clean but lacks some clarity in the transition from natural language to code-like elements (e.g., \"Google > App Engine Settings\"). / The segment contains a mix of instructional text and configuration instructions, with clear spans for deployment steps in App Engine; however, it lacks explicit programming language syntax which may limit its utility as is. Additional context or examples could improve learning outcomes. / Contains both instructional language and configuration instructions, with clear separations for deployment steps; however, it lacks explicit span boundaries which may hinder learning of precise spans in a tokenizer-free context."}}
{"raw": "03D Shading Language Grammar The following is the ANTLR grammar used by the Converter to recognize 03D-compatible shaders.", "type": "mixed", "id": {"id": "efae3030-2562-4dd9-9047-b1819dfe2ef4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear reference to both programming language (ANTLR) and domain-specific terminology (\"03D-compatible shaders\"), indicating meaningful spans for learning span composition in the context of shader processing or compiler design. It is clean, coherent, with identifiable structural elements suitable as training data. / The text segment contains a clear reference to both programming language (ANTLR) and domain-specific terminology (\"03D-compatible shaders\"), which can help the model learn span segmentation in contexts that involve natural language descriptions of code constructs. It is clean, coherent, but lacks sufficient context for full evaluation; additional examples would be beneficial. / The segment contains a clear reference to both programming language (ANTLR) and domain-specific terms (\"03D-compatible shaders\"), which can help the model learn span segmentation in diverse contexts, including natural language descriptions of code constructs. / Contains a mix of programming language syntax and documentation, with clear structure for span segmentation between tokens like \"03D\", \"Grammar\", etc., representing valuable patterns in both domains. / The segment contains a mix of technical language and programming-related terms, with clear references to an ANTLR grammar for shader recognition; it has identifiable spans related to both the structure (grammar) used by software developers in code generation contexts as well as natural language descriptions."}}
{"raw": "Array 03d ParamQbject params [inherited] Gets all the param on this param object. Each access to this field gets the entire list, so it is best to get it just once.", "type": "mixed", "id": {"id": "a8e92fb1-cd9e-4c98-81d5-cd53cea00038"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and language, with clear references to object properties (\"Array\", \"ParamQbject\") that can be segmented into meaningful spans for learning purposes. However, the presence of typos like '03d' instead of '04d', or 'inherited' spelled incorrectly may affect clarity slightly but still retains its compositional value and representativeness as mixed content. / The segment contains a mix of programming concepts and language, with clear references to object properties (\"Array\", \"ParamQbject\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / The segment contains a mix of programming concepts and documentation, with clear references to an object ('Array') that can be segmented into meaningful spans such as 'ParamQbject', '[inherited]', and the description itself provides context for learning span composition in both code-related language structures. / The segment contains a mix of programming concepts and language, with clear references to object properties (\"Array\", \"ParamQbject\") that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context which might affect its utility as training data. / The segment contains a mix of programming concepts and documentation, with clear references to object properties (\"Array\", \"ParamQbject\") that can be segmented into meaningful spans for learning purposes. However, the spelling error in 'param' should ideally not exist but it doesn't hinder its structural clarity or compositional value significantly enough to warrant discarding."}}
{"raw": "where \"my VertexShader\" and \"myPixelShader\" are the names of your vertex and pixel shaders At this time the format of those 2 lines is extremely strict: You must have 1 and exactly 1 space between // and 03d, between 03d and VertexShaderEntryPoint/PixelShaderEntryPoint and between those and your entry points You must also specify a matrix load order like this. #03d MatrixLoadOrder RowMajor", "type": "mixed", "id": {"id": "de4fc4a6-5982-4005-8e98-5a8a263be889"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of instructions and formatting rules that can be segmented into meaningful spans, such as shader names (\"my VertexShader\", \"myPixelShader\") and specific format requirements (spaces between \"//\" and identifiers). It is clean but lacks natural language context. / Clear structure with strict formatting rules for shader names and matrix load order, representing valuable patterns in span segmentation within programming context. / Clear, strict format with identifiable spans for vertex and pixel shaders; useful pattern recognition in matrix load order specification. / Contains structured patterns with strict formatting rules for shaders, useful for learning span segmentation in a coding context. / The segment contains a mix of instructions and formatting rules that can be segmented into meaningful spans, such as \"my VertexShader\", \"03d MatrixLoadOrder RowMajor\". It is clean but lacks natural language context for training purposes."}}
{"raw": "Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from. Passing in null will unbind any m parameter currently bound.", "type": "mixed", "id": {"id": "35eae27a-f652-4267-90fc-4a6843a0fb0b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text contains a mix of technical descriptions and parameter definitions, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential ambiguity (\"unbind any m parameter\"). Further refinement could improve its utility as training data. / The segment contains a mix of technical descriptions and parameter definitions, with clear boundaries for spans that can be useful in training an encoder to understand both programming concepts (code) and explanatory text (natural language). / The segment contains both descriptive text and structured parameter definitions, which can help the model learn to distinguish between different types of spans in a combined context. / Clear structure with identifiable spans; combines both technical terminology and descriptive text, representing valuable patterns for learning span segmentation in a mixed context. / The segment contains a clear explanation of how parameters are bound in programming, with identifiable spans for both descriptions and parameter names; it is clean but lacks context to fully understand the domain-specific patterns."}}
{"raw": "createObject ( '03d. Transform' ) ; t.className F= '03d. Transform 1 | true\nThis property is read-only:\nId 03d", "type": "mixed", "id": {"id": "a95a4a13-fc00-4b19-9c40-903a15bc1258"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming constructs and comments, showing clear span segmentation opportunities between commands/code elements and descriptive text. / The text segment contains a mix of programming syntax and comments, with clear delimiters for spans such as function calls ('createObject'), object properties (Id), class names, and boolean values which are useful patterns to learn span segmentation in both code context and natural language explanations. / The segment contains a mix of programming-like commands and descriptions, with clear spans for object creation ('createObject ( '03d. Transform' )'), class names ('t.className F= '), properties ('Id 03d') that are likely to be useful training examples for span segmentation in both code understanding contexts and natural language explanations. / The segment contains a mix of programming-like syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to unconventional formatting (\"createObject ( '03d. Transform' ) ; t.className F= '...\"). / The segment contains a mix of programming-like commands and comments, with clear structure for span segmentation; it represents valuable patterns in both coding syntax (commands) and documentation style (comments)."}}
{"raw": "opt_prefix Optional prefix for indenting: 03djs.dump.dumpParams !o3d ParamObject param_object string opt_prefix", "type": "mixed", "id": {"id": "c01b4b43-5e11-40ab-9d75-8d27ec877760"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming conventions and comments, with clear structured elements like variable names (\"opt_prefix\"), values (e.g., \"03djs.dump.dumpParams !o3d\"), types (\"string\", \"ParamObject param_object\") that can be segmented into meaningful spans. It is clean for training purposes as it represents valuable patterns in span composition across both natural language and code constructs, which are essential to learn for a tokenizer-free model dealing with mixed content. / The segment contains a mix of programming parameters and comments, with clear delimiters for spans; however, the presence of non-standard characters ('03djs.dump') may affect learning patterns. Clean representation but unusual character set. / The segment contains a clear structure with identifiable spans such as variable names, comments (prefixed by !), and string literals which are valuable for learning span segmentation in programming contexts. It is clean but lacks natural language features that would increase the score further. / The segment contains a mix of programming parameters and comments, with clear delimiters for spans; it is clean but lacks context or coherence as standalone content. / The segment contains a mix of programming parameters and comments, with clear delimiters for spans; it's clean but lacks context or coherence as standalone content."}}
{"raw": "03djs.base.init ! Element clientObject Initializes the 03djs.sample library: Basically all it does is record the 03djs.namespace object which is used by other functions to look up 03d constants. Parameters: clientObject 03D.Plugin Object: 03djs.base.initV8 lo3dplugin clientObject Initializes the 03djs.sample library in a v8 instance. This should be called for every V8 instance that uses the sample library: It is automatically called by o3djs.utilmakeClients.", "type": "mixed", "id": {"id": "12b5daf3-30d5-41ea-874e-bdd22a4d2915"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear references to functions (`03djs.base.init`, `lo3dplugin`) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context on the usage or implementation details which could enhance its training utility. / The segment contains a mix of programming concepts and documentation, with clear structure for learning span segmentation between function names, parameters descriptions, and their explanations. It is clean but lacks context on usage examples or edge cases which could improve its training utility. / Clear structure with identifiable spans; useful for learning span segmentation in programming context. / The segment contains a mix of programming concepts and library initialization procedures, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to abbreviations like \"03djs\" that may not be easily understood without context or further explanation. / Clear structure with identifiable spans related to function calls and parameters, representing valuable patterns for learning span composition in programming context."}}
{"raw": "Returns: number The total number of requests currently known to be streamed:\nSee Also:\n03djs io LoadInfo getTotalKnownBytesToStreamSoFar\n03djs.io. LoadInfo-getTotalRequestsDownloaded Gets the total requests downloaded s0 far Returns: number The total requests downloaded so far:\no3djs.loader Loader Class Reference List of all members\nDetailed Description A simple Loader class to call some callback when everything has loaded\nSource o3djs/loaderjs\nConstructor 03djs loader_Loader(onFinished)", "type": "mixed", "id": {"id": "f9339d3d-cf56-498a-93ec-8bb4cce5dcf1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts, function names (spans), and descriptions that can be segmented into meaningful spans for learning span composition in both coding context and documentation style. However, the presence of non-standard characters like '03djs' may affect clarity slightly but still retains its compositional value as mixed content. / The segment contains a mix of programming concepts, function names (spans), and descriptions that are structurally clear for span segmentation; however, it lacks coherence as it's not well-formed text but rather code snippets with comments interspersed. / The segment contains a mix of programming concepts, function names (spans), and descriptions that can help the model learn span segmentation in both contextually rich language structures as well as technical terms related to code constructs. It is clean but lacks coherence due to mixing different topics without clear separation or transitions between them. / The segment contains a mix of programming documentation and API descriptions, with clear spanable elements like method names (\"Returns\", \"getTotalKnownBytesToStreamSoFar\"), parameters (e.g., \"number\" type), function calls (\"Loader Class Reference List\"), which are valuable for learning structured patterns in code. / The segment contains a mix of programming documentation and function signatures, which are clear structures suitable for learning span segmentation in both contexts. However, the presence of multiple languages (English with some non-standard characters) may affect clarity slightly but still retains its compositional value as training data."}}
{"raw": "Valid orders are RowMajor and ColumnMajor\nNote: Currently it is possible to create effects strings that work o only one platform (GL or D3D)", "type": "mixed", "id": {"id": "297b0b09-ff95-44cf-b504-d3269aaf764e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts (\"RowMajor\", \"ColumnMajor\") and explanatory text, which can help the model learn to distinguish between different types of spans in both natural language descriptions and code-related terms. / The segment contains a mix of programming concepts (RowMajor, ColumnMajor) and explanatory text (\"Valid orders are\", \"Note\"). It has clear structure for span segmentation with identifiable spans like 'Order types' or 'Platform compatibility'. / The segment contains a mix of programming concepts (RowMajor, ColumnMajor) and explanatory text (\"Valid orders are\", \"Note\"). It has clear structures that can be segmented into meaningful spans for learning span composition in both code constructs and natural language explanations. / Contains a mix of programming concepts and explanatory text, with clear spanable phrases like \"RowMajor\", \"ColumnMajor\" and notes about platform compatibility which are useful for learning context-aware spans in both code-related content and natural language explanations. / The segment contains a mix of programming concepts (RowMajor, ColumnMajor) and explanatory text (\"Valid orders are\", \"Note\"). It has clear structure for span segmentation with identifiable phrases like 'Valid orders' as one span and the technical terms separated into another."}}
{"raw": "Returns:\nTrue if the bind succeeded. bool 03d. ObjectBase.isAClassName String   class_ name [inherited] Takes the name of a class as an argument; and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "6285ea28-ca2b-40b2-b876-1901c31d46e1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear spanable elements like function names (\"Returns\"), boolean values (\"True if the bind succeeded.\"), class references (\"ObjectBase.isAClassName String\", \"class_ name [inherited]\"). It is clean but lacks context for full comprehension. / The segment contains a mix of programming concepts and documentation language, with clear spanable elements like method descriptions (\"Returns\"), boolean values (\"True if the bind succeeded.\"), class names (\"ObjectBase.isAClassName String\"), function arguments (\"class_ name [inherited] Takes...\"), which are valuable for learning both code structure (spans) and natural language explanations. / The segment contains a mix of programming concepts and documentation, with clear indications for span segmentation like function names (\"Returns\"), boolean values (\"True if the bind succeeded.\"), class references (\"ObjectBase.isAClassName String\", \"class_ name [inherited]\"). It is clean but lacks context. / The segment contains a mix of programming concepts and documentation, with clear spanable elements like method signatures (\"Returns:\"), boolean values (\"True\"), class names (\"ObjectBase.isAClassName String\"), function descriptions (\"Takes the name...\") which are valuable for learning both code structure (type annotations) and natural language explanations. / The segment contains a mix of programming concepts and documentation, with clear spanable elements like method signatures (\"Returns:\"), boolean values (\"bool\"), class names (\"ObjectBase.isAClassName String\"), function descriptions (\"Takes the name...\") that can be segmented for training purposes."}}
{"raw": "ObjectBaseclientld [inherited] Unique id of the object:\nThis id will be unique, even across multiple 03D clients in the same page.", "type": "mixed", "id": {"id": "70e1b40b-8ade-4ea7-ae07-bc15f3b5561b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-like syntax and comments, with clear identifiers (\"ObjectBaseclientld\", \"Unique id\") that can be segmented into meaningful spans for learning purposes. However, the presence of non-standard characters (e.g., '03D') may affect clarity slightly but still retains its compositional value as mixed content. / The text contains a mix of programming concepts (object ID, inheritance) and documentation-style explanations that can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typos (\"03D\" instead of \"ID\") which may confuse learners at first glance but still offers valuable patterns for learning mixed content types. / The segment contains a mix of programming-like syntax and comments, which can be useful for learning span segmentation in both contexts. However, the clarity is somewhat compromised by unconventional formatting (e.g., \"03D\" instead of standard identifiers). / The segment contains a mix of programming-like syntax and comments, with clear identifiers (\"ObjectBaseclientld\", \"Unique id\") that can be segmented into meaningful spans for learning purposes. Despite the informal language (e.g., '03D'), it retains structural clarity useful in training span-aware models. / The segment contains a mix of programming-like syntax and comments, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to unconventional formatting (\"03D\" instead of \"3D\")."}}
{"raw": "Parameters: clientElement The plugin containing the V8 engine. callback A function to call: thisArg The value to be bound to \"this\" args The arguments to pass to the callback Returns: The result of calling the callback\nElement 03djs.utilcreateClient ! Element element string opt_features string opt_requestVersion Creates a client element.", "type": "mixed", "id": {"id": "652ed6b6-e4ee-441a-81ec-0b71d5000d0e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both structured programming elements and descriptive text, providing a diverse range of patterns for span segmentation in the context of JavaScript objects or functions. / The segment contains both structured programming elements and descriptive text, providing a good mix for learning span segmentation in diverse contexts. / The segment contains both programming concepts and language, with clear parameters for a function that could be useful in learning span segmentation patterns across different domains. However, the presence of special characters like \"03djs\" may require further cleaning or context to ensure optimal training utility. / The segment contains both structured programming elements and parameter descriptions, which are useful for learning span segmentation in a tokenizer-free context. However, the presence of non-standard characters (e.g., \"03djs\") may affect clarity slightly but still retains its compositional value as it represents code constructs interspersed with natural language explanations. / The segment contains both structured programming elements (parameters, function calls) and descriptive text (\"The plugin containing the V8 engine\"), which can help in learning span segmentation for a tokenizer-free model that handles code documentation or comments alongside actual code constructs."}}
{"raw": "Parameters: 0 Operand scalar: b Operand quaternion. Returns: Io3djs_quaternions Quaterion", "type": "mixed", "id": {"id": "b333b1ec-aa15-4522-a119-bc2e87381419"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terms and mathematical expressions, which are valuable for learning span segmentation in both domains. However, the clarity could be improved by separating different elements into distinct spans or providing additional context to enhance understanding. / The segment contains a mix of programming terminology and mathematical expressions, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to missing context or explanations for terms like \"Operand scalar\" and \"Quaterion.\" / The segment contains a mix of parameter descriptions and programming terms, which can help the model learn span segmentation in both domains. However, it lacks context for full comprehension; additional examples may be beneficial to improve clarity. / The segment contains a mix of programming language syntax and mathematical expressions, which can help the model learn span segmentation for both types of content. However, it lacks context or examples that would make its compositional value higher. It is clean but could benefit from additional sentences to improve learning utility. / The segment contains both programming language syntax and mathematical expressions, which can help the model learn to distinguish between different types of spans in a coding context with embedded math notation."}}
{"raw": "O3D Shading Language 03D uses a variation of the HLSL and Cg shading languages Vertex and pixel shaders are specified by supplying a string containing the source code. Because it is just a string, you can store a shader in a variable, which can be contained in a hidden <textarea > element within the HTML document; downloaded from a URL, or stored anywhere else your web page would keep a string: See Q3D Shading Language for more information: Back to top", "type": "mixed", "id": {"id": "0e5e0922-6454-4bd7-b8f1-8b746b2deae4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming language elements (HLSL, Cg) and HTML markup; spans can be identified as shader source codes or web-related content. / The segment contains a mixture of programming language syntax and HTML markup, which can help the model learn span segmentation for both types of content. However, it lacks clear examples that are purely natural or code-based to improve its utility as training data. / Contains a mix of programming language syntax and HTML, with clear structure for learning span segmentation in both contexts. / Contains both structured programming language elements and instructional text, with clear spanable constructs like \"string containing the source code\" and URLs which are useful for training a tokenizer-free model to understand different types of spans in context. / The segment contains a mix of technical language and markup, with clear references to programming concepts (shading languages) that can be segmented into meaningful spans for training purposes. It is coherent but lacks context-specific details needed by X-Spanformer without additional data."}}
{"raw": "var datatype id declaration semantic? annotation list? ('=' initializer) ? var packoffset? var register_bind?", "type": "code", "id": {"id": "a64cc7c3-c366-4007-a353-8b5279861b17"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear syntactic structure with identifiable spans for variables, declarations and bindings in programming context. Well-suited to learn patterns of span segmentation specific to coding constructs. / Clear structure with identifiable spans; useful for learning span composition in programming context. / Clear programming constructs with identifiable spans; well-suited for learning span segmentation in a coding context. / Clear syntactic structure with identifiable spans; useful for learning programming language patterns. / Clear syntactic structure with identifiable spans; useful for learning programming language patterns."}}
{"raw": "The length of the entire archive in bytes. Use this value along with bytesReceived to figure out the download progress. This property is read-only:\nbool 03d ArchiveRequest_success This field is only valid if done is true.", "type": "mixed", "id": {"id": "26860cc4-a890-4672-89b0-100430beec5e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical language and programming concepts, with clear references to properties (\"length\", \"bytesReceived\") that can be segmented into meaningful spans for learning purposes. Despite some syntactical errors (e.g., missing quotes around property names), it retains sufficient clarity in its structural elements related to code documentation or configuration descriptions. / Contains both programming concepts and language, with clear spanable elements like property names, values, boolean flags, etc., which are valuable for learning how to segment spans in a context that mixes code syntax with natural explanations. / The segment contains a mix of technical terms and incomplete sentences, lacking clear structure for meaningful span segmentation; it is not coherent enough to serve as effective training data. / The segment contains both programming concepts (e.g., property, boolean) and documentation-style explanations (\"This field is only valid if done is true.\"), which can help the model learn span segmentation in a code context with natural language annotations. / The segment contains both programming language syntax and comments, providing a good mix of structured data for span segmentation learning in X-Spanformer training."}}
{"raw": "03d. WorldInverseTransposeParamMatrix4 Class Reference\nInherits 03d ParamMatrix4;\nList of all members", "type": "code", "id": {"id": "8a85dd0a-0a9d-4113-8f35-ee500050117c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear class reference structure with inheritance and member listing, ideal for learning span segmentation in programming context. / Clear class reference structure with inheritance, suitable for learning span composition in programming context. / Clear class reference with inheritance, suitable for learning span composition in programming context. / Clear reference to a class with inheritance, suitable for learning span composition in programming context. / The segment lacks clarity and coherence; it's a mix of unclear references that don't form meaningful spans for training purposes."}}
{"raw": "The parameter that the value originates from Passing in null will unbind any m parameter currently bound.", "type": "mixed", "id": {"id": "40bec940-774c-476c-8d20-b987a73088eb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text contains a mix of technical language and programming concepts, with clear references to parameters (\"m parameter\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or explanation which could improve its utility as training data. / The segment contains a mix of technical language and programming concepts, with clear references to parameters (\"m parameter\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which could affect the utility score slightly; however, it still represents valuable patterns in span composition within code documentation or comments. / The text contains a mix of programming concepts and language, with clear parameter references that can be segmented into meaningful spans for learning purposes. / The segment contains a mix of technical language and programming concepts, with clear references to parameters (\"m parameter\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which could affect its utility as standalone training data. / The segment contains a mix of programming language syntax and comments, which can help the model learn to distinguish between different types of spans in both contexts."}}
{"raw": "We do not consider GWTTestCase to be unit test as they require the whole GWT Module to run_ For this reason, the test goal is bound by default to integration-test phase. But this is only our point of view and you may want to run such test during the standard test phase, and maybe use a profile and naming convention to execute such tests on demand:", "type": "mixed", "id": {"id": "ef235307-14f0-4d08-98c2-d450ef2b736f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mixture of narrative and technical descriptions, with clear references to programming concepts (GWTTestCase) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks explicit code examples or structured data points which could enhance its utility as training material. / The segment contains a mix of technical documentation and programming concepts, with clear delimiters for different ideas (bullet points). It includes both descriptive text (\"We do not consider GWTTestCase to be unit test\") as well as instructions or guidelines (\"you may want to run such tests during the standard test phase\"). This provides valuable patterns in span segmentation between natural language explanations and code-related discussions. / The segment contains a mix of technical documentation and instructions, with clear references to programming concepts (GWTTestCase) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks explicit code examples or natural language explanations separately identifiable as training data. / The segment contains a mix of narrative and technical instructions, with clear boundaries for potential span segmentation (e.g., \"GWTTestCase\", \"_For this reason_\", etc.). It is coherent but lacks explicit examples or patterns that are directly related to the training objective. / The segment contains a mix of technical writing and programming concepts, with clear distinctions between explanatory text (natural language) about testing phases in GWT modules versus specific instructions or comments that resemble coding conventions (code). This combination provides diverse examples for learning span segmentation across different content types."}}
{"raw": "pluginObject the plugin object on the page. string 03djs event padWithLeadingZeroes string str number to_length Pad a string with leading zeroes if needed until it is the length desired.", "type": "mixed", "id": {"id": "a76c53d6-32ac-462a-b3e0-92ebbf134a76"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both a programming context (code-like syntax) and descriptive text, which can help the model learn span segmentation across different domains. However, it lacks clarity in terms of clear code constructs or natural language phrases that are typically easier for models to understand without further preprocessing. / The segment contains a mix of programming concepts and descriptions, with clear spanable phrases like \"plugin object,\" which can aid in learning the composition between technical terms and their explanations. However, it lacks clarity due to potential typos (\"to_length\" instead of likely intended word) and ambiguous context (what is meant by 'string str number'). / The segment contains a mix of programming concepts and descriptions, with clear spans for phrases like \"plugin object,\" \"string str number to_length Pad.\" However, the lack of context makes it less ideal as training data. / The segment contains both programming-related terms and a descriptive sentence, which can help the model learn to distinguish between different types of spans in an integrated context. However, it lacks clarity due to potential typos (\"to_length\" instead of \"ToLength\") and ambiguous phrases like 'string str'. / The segment contains a mix of programming concepts and descriptions, with clear spans for both the plugin object reference (\"pluginObject\") as an identifier or variable name in coding contexts (code), and its description which is natural language text explaining what it does (“string 03djs event padWithLeadingZeroes string str number to_length Pad a string with leading zeroes if needed until it is the length desired”). The structural clarity allows for meaningful span segmentation, such as separating code references from their descriptions."}}
{"raw": "The semantic index of the stream: Defaults to zero. Member Function Documentation\n03djs primitives. VertexStreamInfo addElement number valuel number opt_value2 number opt_value3 number opt_value4 Adds an element to this VertexStreamInfo. The number of values passed must match the number of components for this VertexStreamInfo.", "type": "mixed", "id": {"id": "52909344-95d6-4b31-818b-d3fe9d58ba39"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear spans for both the function name \"addElement\" as well as its description which includes parameters (number valuel number) that can be segmented into meaningful parts useful in training an X-Spanformer. / Clear distinction between documentation (natural language) and programming constructs, useful for learning span segmentation in both domains. / The segment contains a mix of programming concepts and documentation, with clear spans for function names (\"addElement\"), parameters (\"number valuel number opt_value2\", etc.), which are valuable patterns to learn span segmentation in code context. It is clean but lacks natural language prose that could improve its compositional value as mixed content training data. / The segment contains both structured programming elements and documentation, providing diverse examples of span segmentation in a combined context. / The segment contains a mix of programming documentation and structured data, with clear spans for function names (\"addElement\"), parameters (e.g., \"number valuel number opt_value2...\"), which are valuable patterns to learn span segmentation in code context combined with natural language descriptions."}}
{"raw": "It indicates whether or not the request succeeded. If false see error for an error message.", "type": "natural", "id": {"id": "e7932b5e-6044-4fab-a61c-5f0aacef63a5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear indication of success status and error message, but lacks context for meaningful span segmentation. / Clear indication of success status and error message reference, useful for training on conditional statements in text. / Clear indication of success status and error message, useful for training on conditional statements and outcomes in text. / Clear indication of success status and error message, useful for understanding conditional statements in text. / The text segment is structurally clear and contains a meaningful span that can be segmented into \"it indicates\" (span) and the rest of the sentence as another context for understanding success or failure in an operation, which could help with learning patterns related to conditional statements."}}
{"raw": "ParamObject removeParam Param param Removes a Param from a ParamObject:", "type": "mixed", "id": {"id": "632c2061-12fe-4672-bf77-f26786c20439"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment lacks clear, meaningful spans and is not well-formed for training purposes; it resembles a command-line instruction rather than structured text or coherent sentences suitable as an example. / The segment contains both a programming-like syntax and descriptive text, which can help the model learn to distinguish between different types of spans in varied contexts. / Clear separation of terms and phrases, representing both language (instructions) and structured data (object names). Suitable for learning span segmentation in a mixed context. / The segment combines both a programming-like structure and language, with clear indications of parameter manipulation that can be segmented into meaningful spans for training purposes. It is clean but lacks context or examples to fully represent the domain's complexity. / Clear separation of parameters and actions, representing both structured language (code-like) patterns for span segmentation."}}
{"raw": "WorldViewProjectionInverseTransposeParamMatrix4'\nReturns: The newly created Param or null on failure.", "type": "code", "id": {"id": "4f107c37-0b5f-4ce4-8106-7ba43aef935f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured API documentation with identifiable spans for learning; well-suited to X-Spanformer training. / Clear, structured programming function signature with identifiable spans for learning. / Clear, well-defined function signature and return type suitable for span segmentation in programming contexts. / Clear, well-defined function signature and description suitable for span segmentation in programming contexts. / Clear structured elements with consistent naming conventions typical for programming documentation, representing valuable patterns in span composition."}}
{"raw": "Returns:\nTrue if the bind succeeded.", "type": "mixed", "id": {"id": "990c2923-9340-451e-b160-71fc10614841"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear boolean expression with a function-like structure; spans can be identified as \"Returns\", \":True if the bind succeeded.\" and are useful for learning span composition in both programming logic (code) context and natural language explanation of functionality. / Clear indication of a function's return value with both programming and descriptive language elements present, suitable for learning span segmentation in diverse contexts. / Clear statement with a conditional outcome; useful for learning span segmentation in declarative statements. / Clear, concise statement with a predictable pattern useful for training on span segmentation in declarative sentences. / The segment contains a clear function signature with both descriptive text and programming language syntax, representing valuable patterns for learning span segmentation in the context of documentation or API descriptions."}}
{"raw": "GWT modules are stored on a web server as a set of JavaScript and related files. In order to run the module, it must be loaded from a web page of some sort: Any HTML page can include a GWT application via a SCRIPT tag: This HTML page is referred to as a host page from the GWT application's point of view.", "type": "mixed", "id": {"id": "a0a6dd29-3c40-417a-ab5b-8444ee882eab"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains clear references to both programming concepts (GWT modules, JavaScript files) and their usage context in web development (HTML pages), which are valuable for learning span composition across different domains. It is well-formed with meaningful spans that can be identified as code constructs or natural language descriptions of technical processes. / The segment contains a mix of technical terms and explanations that can be segmented into meaningful spans, such as \"GWT modules,\" \"JavaScript files,\" etc., representing valuable patterns for learning span composition in both natural language context and code-related content. / Clear distinction between technical terms and explanations, representing both coding concepts (GWT modules) and their usage context in web development (loading via a SCRIPT tag). Suitable for learning span segmentation across code-related phrases and natural language descriptions. / The segment contains a mix of technical descriptions and instructions that can be segmented into meaningful spans, such as \"GWT modules,\" \"JavaScript files,\" etc., which are useful for learning span composition in both natural language processing (NLP) tasks related to code documentation. / The segment contains a mix of technical terms and explanations that can be segmented into meaningful spans, such as \"GWT modules,\" \"JavaScript files,\" etc., which are useful for learning span segmentation in both code-related contexts (like GWT) and natural language descriptions."}}
{"raw": "[inherited] Unique id of the object. This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nParam 03d Param inputConnection [inherited] The input connection for this param.", "type": "mixed", "id": {"id": "0fee3dc3-33e6-483a-97cd-f572f1262662"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming elements and documentation language, which can help the model learn span segmentation for different contexts. / Contains both descriptive text and technical terms with clear separation, suitable for learning span segmentation in a mixed context. / Clear distinction between documentation (natural language) and technical parameters with identifiable spans for both types of content. / Clear spans identified; includes both descriptive text and technical parameters, representing valuable patterns for learning span composition in a mixed context. / Clear spans identified; includes both descriptive text and programming-related terms, representing a mix of language constructs useful for learning span segmentation in diverse contexts."}}
{"raw": "Detailed Description An object to manage a single debug line.", "type": "natural", "id": {"id": "802cc514-3f7b-4dad-9936-bed8111f774c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, concise description with a single meaningful span; well-suited for training on descriptive text segments. / Clear description with a single meaningful span, suitable for learning context and composition in NLP tasks. / Clear description with a single meaningful span; well-formed for training purposes. / Clear description with a single span representing an object, suitable for learning descriptive text patterns. / Clear description with a single span representing an object and its purpose, suitable for learning descriptive text patterns."}}
{"raw": "hing else you can think of1 These numerical attributes are used as input to the vertex shader They can be of type floatl, float2, float3, 0 float4, which are groups of 1 to 4 floating point values, respectively", "type": "mixed", "id": {"id": "59e26dc7-a1d2-4892-ba9d-215b90cc765a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear distinction between numerical attributes and their types, representing valuable patterns for learning span composition in both programming contexts and mathematical expressions. / The segment contains a mix of numerical attributes and programming constructs, with clear spans for both types that can be used to learn span segmentation in the context of shader input parameters. / Clear distinction between numerical attributes and their types, representing valuable patterns for span segmentation in both programming context (code) and descriptive text explanation (natural language). / The segment contains both numerical attributes and programming constructs, which are clear spans that can be used to learn span segmentation in a tokenizer-free context. It is clean for training purposes with valuable patterns representing code syntax alongside natural language explanations of the concepts involved. / Clear separation of numerical attributes and their types, representing valuable patterns for learning span composition in programming context."}}
{"raw": "struct_type_specifier\nvar packoffset packoffset ' LPAREN register_ name (DOT ID) ? RPAREN\nvar register_ bind COLON register name\nid declaration ID LBRACKET constant expression RBRACKET\n?\nfunction declaration function_storage_ class? function type_specifier ID LPAREN argument list RPAREN semantic? function body (SEMI ) ?", "type": "code", "id": {"id": "9857f7a5-f19a-4a3f-8c9f-db541b4e170a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured patterns for span segmentation; well-suited to learning programming constructs and syntax rules. / Clear syntactic structure with identifiable spans for programming constructs, suitable training data. / Clear syntactic structure with identifiable spans for programming constructs; well-suited to learn span segmentation in a coding context. / Clear syntactic structure with identifiable spans for programming constructs; well-suited to learn span segmentation in a coding context. / Clear syntactic structure with identifiable spans for programming constructs, suitable training data."}}
{"raw": "String className\nMember Enumeration Documentation\nenum 03d CanvasShader TileMode [inherited] CLAMP copy the edge color if the shader draws outside of its bounds REPEAT repeat horizontally and vertically outside its bounds MIRROR same as above, alternating mirror images", "type": "mixed", "id": {"id": "df6d13a7-b586-4b6b-a4a7-015ed43d6ce1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear spans of both programming concepts and documentation language; useful for learning span segmentation in a coding context with accompanying explanations. / Clear enumeration and descriptions of shader properties; useful for learning span segmentation in programming contexts. / The segment contains a mix of programming language elements (class names, enum values) and documentation text that can be segmented into meaningful spans for learning purposes. Despite some ambiguity in the enumeration descriptions (\"same as above\"), it still offers clear structural patterns related to code constructs which are valuable training data. / The segment contains a mix of programming language syntax and documentation, with clear enumeration structures that can be segmented into meaningful spans for learning span composition in both contexts. / Clear spans for enumeration, shader properties; well-balanced mix of language and technical terms."}}
{"raw": "Param 03d. ParamObject getParam String param name ) [inherited] Searches by name for a Param defined in the object. Parameters:\nparam name Name to search for: Returns:\nThe Param with the given name, or null otherwise.", "type": "mixed", "id": {"id": "1c1b23bf-4ce6-4d26-a9b9-a2c02d7250b2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-like syntax and documentation, with clear parameters for learning span segmentation in both contexts. / The segment contains a mix of parameter descriptions and programming-like syntax, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential confusion between natural language explanations (\"Name to search for\") and code elements (e.g., \"param name\"). / Clear structured elements with identifiable spans; represents valuable patterns for learning span composition in both programming and documentation contexts. / The segment contains a mix of structured programming elements and descriptive text, with clear parameter names that can be segmented into meaningful spans for learning purposes. It is clean but lacks contextual richness due to the concise format typical in code documentation. / Contains both structured programming elements and parameter descriptions, useful for learning span segmentation in a mix of contexts."}}
{"raw": "bool 03d. Param bind Param source_param [inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from Passing in null will unbind any m parameter currently bound.", "type": "mixed", "id": {"id": "4cf8fb37-b7b0-4b34-8c50-421ed94aad8c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear references to parameters (\"Param\", \"source_param\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context about the language or framework being used which could improve its utility as training data. / The segment contains a mix of technical language and structured data, with clear references to parameters that can be segmented into meaningful spans for learning purposes. It is clean but lacks contextual coherence as it appears fragmented without surrounding context or explanation. / The segment contains a mix of programming concepts and documentation, with clear references to parameters (\"Param\", \"source_param\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context on how the parameter binding works in practice which could improve its training utility. / The segment contains a mix of programming concepts and language, with clear references to parameters (\"Param\", \"source_param\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / The segment contains a mix of structured programming language elements (e.g., boolean, parameters) and technical descriptions that can be segmented into meaningful spans for training purposes. It is clean but lacks contextual clarity due to the brevity required in code documentation."}}
{"raw": "Member Function Documentation\n03d. ParamObject copyParams ParamObject source_param_object [inherited] Copies all the params from a the given source_param_object to this param object. Does not replace any currently existing params with the same name. Parameters:\nsource_param_object param object to copy params from: Param 03d.", "type": "mixed", "id": {"id": "5e59722c-5fd4-47f7-ac56-18b72d5b0e02"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear distinction between documentation (natural language) and a function signature with parameters, representing both types of content well for training purposes. / Clear separation of function documentation and parameters, representing both structured programming concepts (code) with descriptive text elements that are essential for understanding the context in which spans occur. / Clear spans for both documentation (natural language) and parameter names/code references, representing valuable patterns in span segmentation across different content types. / Clear span segmentation between function documentation, parameters list with consistent formatting and meaningful spans for learning. / Clear separation of function documentation and parameters, representing both structured programming language elements (function signature) and descriptive text for educational purposes."}}
{"raw": "function_storage class INLINE\nfunction type_specifier scalar type_specifier vector type_specifier matrix type_specifier struct type_specifier T VOID\nsemantic COLON semantic_specifier\nparam_type_specifier scalar type_specifier vector type_specifier matrix type_specifier struct type_specifier string_type_specifier sampler_ type_specifier\nbasic_type_specifier scalar type_specifier vector type_specifier matrix type_specifier string_type_specifier\ntypedef_ definition TYPEDEF", "type": "code", "id": {"id": "5af4b547-5bb1-4d07-82db-9a3b5dedaa58"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans like function names, types, and parameters; well-suited for learning span segmentation in programming context. / Clear structured patterns of function and type specifications, suitable for learning span segmentation in programming contexts. / Clear structure with identifiable spans such as function names, types, and parameters suitable for learning span segmentation in programming contexts. / Clear structure with identifiable spans such as function names, type specifiers, and keywords; well-suited for learning span segmentation in programming contexts. / Clear structured elements representing programming constructs, suitable for learning span segmentation in a coding context."}}
{"raw": "Reimplemented from 03d NamedObjectBase: Float4 03d ParamOpAFloatsToFloat4 output", "type": "code", "id": {"id": "1c0786d0-1e09-430b-88a5-1388d801e16f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / The segment combines a programming context with specific object-oriented terminology, which can help the model learn span segmentation in both domains. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "Returns:\nTrue if the bind succeeded.", "type": "natural", "id": {"id": "acd4baf8-a9c8-4a9f-9f9a-fb28a365b3ee"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear statement with a conditional outcome, suitable for learning span segmentation in declarative sentences. / Clear statement with a conditional outcome, suitable for learning span segmentation in declarative sentences. / The segment contains a clear function signature with an expected return value, representing valuable patterns for learning span composition in both programming and documentation contexts. / Clear statement with a conditional outcome, suitable for learning span segmentation in declarative contexts. / The segment contains a clear function signature and return statement, which are valuable patterns for learning span composition in both programming contexts (code) and their descriptions or explanations found typically within documentation (natural language)."}}
{"raw": "The Home Designer sample does not work properly in Google Chrome or Internet Explorer on Windows The Julia and Juggler examples may display intermittent vertical line artifacts on the Mac.", "type": "mixed", "id": {"id": "25d6fc12-f69c-4fc1-8ea6-cdbecda3992b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and software/platform references, which can help the model learn to identify spans related to different contexts (software names vs descriptive text). However, it lacks clear code constructs or natural language phrases that are typically easier for models like X-Spanformer. / Clear sentence structure with identifiable spans; represents useful patterns for span segmentation in English text. / The segment contains a mix of software names, operating systems and browsers which can be segmented into meaningful spans for training purposes; it is clean but lacks context or detailed patterns necessary to fully represent the target domain's span composition nuances. / The segment contains a mix of technical descriptions and software names, which can help the model learn to identify spans related to issues with different applications across platforms. However, it lacks explicit span boundaries for direct training purposes. / Contains a mix of technical descriptions and software/platform references, with clear span segmentation opportunities for both language constructs (\"does not work properly\", \"display intermittent\") and specific entities (software names like Google Chrome)."}}
{"raw": "Given a ParamObject dumps all the Params on it: Parameters: param_object ParamObject to dump Params of opt_prefix Optional prefix for indenting: o3djs.dumpdumpPoint3 string label !o3d Point? point3 string opt_ prefix Dumps a point3", "type": "mixed", "id": {"id": "770eeea8-6396-4690-bfb9-ba33b9cc5109"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming concepts and documentation, with clear spans for parameters (\"ParamObject\", \"opt_prefix\") that can be used to train a span-aware model on understanding the composition of code-related text in natural language. / The segment contains both programming concepts and descriptive text, which can help the model learn to distinguish between different types of spans in a combined context. / The segment contains both programming concepts (e.g., 'ParamObject', 'opt_prefix') and a descriptive explanation ('dumps all the Params on it'), which can help in learning span segmentation for code-related contexts as well as natural language descriptions of functionality. / The segment contains both programming concepts and documentation, with clear spans for parameters (\"param_object\", \"opt_prefix\") that can be used to learn span segmentation in a tokenizer-free context. It is clean but lacks coherence as it seems like an excerpt from code comments or help text rather than executable instructions. / The segment contains both programming concepts and documentation, with clear structure for span segmentation; however, it lacks context to fully understand the usage of 'ParamObject'."}}
{"raw": "ParamObject createParam String param_ name, String  param_type_ name [inherited] Creates a Param with the given name and type on the ParamQbiect: Will fail if a param with the same name already exists. Parameters:\nparam_ name The name of the Param to be created. param_type name The type of Param to create.", "type": "mixed", "id": {"id": "3cc4354c-aac8-49be-b85c-f8206bf1717a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming elements and descriptive text, providing diverse examples for span segmentation learning. / Contains both structured programming elements and descriptive text, with clear spanable phrases like \"param_ name\" and parameter descriptions that are useful for training a tokenizer-free model to understand contextually segmented spans in code documentation. / Contains both structured programming elements and descriptive text, useful for learning span segmentation in a diverse context. / Contains both structured programming elements and descriptive text, showing clear span segmentation opportunities for a tokenizer-free model. / Contains a mix of structured commands and descriptions, with clear parameter names indicating potential spans for learning. However, minor spelling errors (\"ParamQbiect\" should be \"Parameter\", etc.) may affect clarity slightly but do not detract significantly from the overall structural value as training data."}}
{"raw": "In addition to the per-vertex attributes, a number of parameters that apply to all vertices in the primitive are used as input to the vertex shader: These parameters can be matrices, vectors, o floats. For example: Matrices Projection matrix View matrix Model matrix Texture matrix Color matrix Bone matrix etc. Vectors Light position", "type": "mixed", "id": {"id": "53663634-1ec1-40a5-a6b6-1adfb777a877"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts (matrices) and descriptive language (\"per-vertex attributes\", \"parameters\"). However, the lack of punctuation may affect clarity. / Contains both structured programming parameters and descriptive text, showing clear span segmentation opportunities for a tokenizer-free model. / The segment contains a mix of programming concepts and language, with clear parameters for vertex attributes in the context of shaders; however, it lacks clarity due to grammatical errors (\"o\" instead of \"or\") which may confuse learning patterns. / The segment contains a mix of programming concepts and language, with clear examples like matrices (Projection matrix View matrix Model matrix Texture matrix Color matrix Bone matrix) that can be segmented into meaningful spans for learning purposes. However, the text lacks coherence due to fragmented sentences (\"Matrices Projection matrix\", \"Light position\"). / The segment contains a mixture of programming concepts (matrices, vectors) and descriptive language (\"per-vertex attributes\", \"parameters\"). It has clear structure for span segmentation with terms like matrices that can be identified as code constructs alongside natural descriptions."}}
{"raw": "buffer_type_specifier (BUFFER 1<' var datatype '>' ID)", "type": "code", "id": {"id": "897f2f98-946e-4a19-9e9e-4eb283106586"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with a pattern of type declaration, suitable for learning span segmentation in programming contexts. / Clear structured elements with a consistent pattern for span segmentation; represents valuable patterns in programming constructs. / The segment contains clear, structured elements that represent a programming construct with identifiable spans for learning (e.g., type specifier and identifier). It is clean from the provided context but lacks natural language components to fully qualify as mixed content; it fits well within coding patterns. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structured elements with a consistent pattern for span segmentation; represents valuable patterns in programming syntax and identifiers."}}
{"raw": "03d. BoundingBox Class Reference\nList of all members\nDetailed Description\nBoundingBox represents an Axis Aligned Bounding Box\nPublic Member Functions\nBoundingBox Point3 min extent; Point3 max_extent)", "type": "mixed", "id": {"id": "efacde82-cc8e-414e-84d4-39bd880feac8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans for class reference, member functions; well-suited to learn span composition in programming context. / Clear structure with both descriptive text and programming elements, representing valuable patterns for span segmentation in a tokenizer-free context. / Clear structure with identifiable spans for both descriptions and function signatures, representing valuable patterns in span composition across different contexts. / Clear structure with identifiable spans for both class reference and member functions, suitable for learning span segmentation in a mixed context. / Clear structure with identifiable spans for class reference, member functions; clean and representative of programming documentation patterns."}}
{"raw": "Param destination_param [inherited] Breaks a specific param-bind output connection on this param. Parameters:\ndestination_param param to unbind. 03d.", "type": "mixed", "id": {"id": "8a96dac6-e0bf-43ae-97a6-36971288874e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and structured formatting that can be segmented into meaningful spans, representing useful patterns for learning span composition in both programming contexts (code) and documentation descriptions (natural language). / The segment contains a mix of programming language syntax and documentation, with clear parameter names that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which might affect its utility as standalone training data. / The segment contains a mix of parameter descriptions and pseudo-code-like notation, which can be useful for learning span segmentation in both programming contexts (code) and technical documentation language (natural). However, the clarity could improve with better formatting or additional context to enhance training utility. / The segment contains a mix of descriptive text and technical parameters, with clear structure for span segmentation; however, it lacks context to fully understand the usage or purpose within its domain. / The segment contains a mix of programming language syntax and documentation, with clear parameters that can be segmented into meaningful spans for training purposes. It is clean but lacks context which might affect the learning process slightly."}}
{"raw": "Io3d TextureZD 03djs particles ParticleSystem.defaultColorTexture", "type": "code", "id": {"id": "5e04b7f9-348a-48e0-b11b-adbb80a65b06"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear and meaningful spans identified within a programming context, representing valuable patterns for learning span composition in the domain of coding. / The segment lacks clear, meaningful spans for training; it's a mix of identifiers that don't form coherent patterns or sentences. / Clear span patterns with meaningful identifiers; well-suited for learning structured programming constructs. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "Usually, each method defined by a ClientBundle interface is backed by a resource file.", "type": "natural", "id": {"id": "1572d057-09a8-48ba-9803-db77d9856800"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear sentence structure with identifiable spans; useful for learning span composition in English prose. / Clear sentence structure with a potential for learning method-description spans in documentation. / The text segment is clear, coherent and contains a meaningful pattern of method-description that can be segmented into spans for learning purposes. It represents valuable patterns in the context of software documentation or programming language semantics related to interfaces and resources. / Clear sentence structure with identifiable spans (\"Each method\", \"ClientBundle interface\") and coherent content representative of documentation patterns. / Clear sentence structure with identifiable spans; useful for learning span composition in English prose."}}
{"raw": "Param.! unbindOutputs [inherited] Breaks all param-bind output connections on this param.", "type": "code", "id": {"id": "b9bc491b-c2e1-414a-bc5e-d1dc98f8e41d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear syntactic structure with identifiable spans; useful for learning programming language patterns. / The segment contains a mix of programming language syntax and comments, with clear boundaries for span segmentation (e.g., \"Param.! unbindOutputs\" as one span). It is clean but lacks context or examples that could improve its training utility. / Clear programming constructs with identifiable spans; clean and coherent for training purposes in a coding context. / Clear, well-defined span with a function name and description suitable for learning programming patterns. / Clear programming constructs with identifiable spans; well-suited for learning span segmentation in a coding context."}}
{"raw": "Another option is to use the_MVP design pattern to keep your code and Ul components separated. In such case, GWT MockUtilities will help you disable Defered Binding (that requires a full GWT stack) and use mock components.", "type": "mixed", "id": {"id": "cf7d6b31-e2ed-4c6d-b779-bbb759cd8166"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of programming concepts and patterns, with clear references to design principles (MVP) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context-specific details which could improve its utility as training data. / The segment contains both technical language and programming concepts, which can help the model learn span segmentation in a context that includes variable names (e.g., _MVP_, GWT), keywords (_design pattern_), and code constructs (_GWT MockUtilities_). / The segment contains a mix of technical terms and concepts that can be segmented into meaningful spans, such as \"MVP design pattern,\" \"GWT MockUtilities,\" which are relevant for learning span composition in both natural language context and programming terminology. / The segment contains a mix of programming concepts and terminology, with clear spans for phrases like \"MVP design pattern,\" \"GWT MockUtilities,\" which are useful patterns to learn span segmentation in code context combined with natural language explanation. / The segment contains a mix of technical terms and concepts that can be segmented into meaningful spans, such as \"MVP design pattern,\" \"GWT MockUtilities,\" which are valuable for learning span composition in both natural language context and code-related terminology."}}
{"raw": "When the entire archive is ready the onFinished callback will be called with an ArchiveInfo for accessing the archive.", "type": "natural", "id": {"id": "fc246a7d-546d-4611-a6cc-c1bd37fea145"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, coherent sentence with a discernible structure suitable for learning span segmentation in the context of programming documentation or tutorials. / Clear sentence structure with a distinct subject (\"the entire archive\"), verb (\"is ready\"), and object (\"onFinished callback\"). The phrase \"ArchiveInfo for accessing the archive\" is an identifiable span that represents valuable patterns in language comprehension, especially useful to understand context within callbacks. / Clear sentence structure with identifiable spans for training a span-aware model on English prose. / Clear, coherent sentence with a discernible subject-action-object structure suitable for learning span composition in NLP tasks. / Clear sentence structure with a logical flow; contains meaningful spans like \"the entire archive,\" \"onFinished callback,\" and \"ArchiveInfo.\" Suitable for learning span composition in text."}}
{"raw": "Parameters: str The input string, probably representing a number: to length The desired minimum length of string with padding: Returns: string.", "type": "mixed", "id": {"id": "f9949b1a-9ef8-4e9a-af77-255f75435eb8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of parameter descriptions and programming language syntax, which can help the model learn to distinguish between different types of spans in both contexts. It is clean but lacks context for full comprehension by X-Spanformer. / Clear spans for parameters, to length (padding), and Returns; clean representation of function signature with both descriptive text (\"The input string\") and technical notation (\"str\"). Suitable pattern recognition across natural language descriptions and code-like annotations. / Clear separation of parameters and descriptions; spans can be identified for both programming context (parameters, Returns) and descriptive text (\"input string\", \"desired minimum length\"). / The segment contains a mixture of parameter descriptions and programming context, with clear spans for parameters (\"Parameters\"), types (\"Returns:\"), values (\"str\", \"to length\") that can be used to train the model on span segmentation in both natural language text and code constructs. / Clear parameters, inputs and outputs; spans can be identified for both strings (inputs) and lengths/padding descriptions (outputs). Mixed content type with clear span segmentation patterns useful in training."}}
{"raw": "Parameters:\nmin_extent minimum extent of the box: max_extent maximum extent of the box\nMember Function Documentation\nBoundingBox 03d. BoundingBoxadd BoundingBox box Adds a bounding box to this bounding box returning a bounding box that encompases both\nParameters:\nbox BoundingBox to add to this BoundingBox: Returns: The new bounding box:\nbool 03d. BoundingBox inFrustum Matrix4 matrix Returns true if the bounding box is inside the frustum:\nParameters:", "type": "mixed", "id": {"id": "2e9996c4-05f4-477b-b2d3-efa894447819"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of parameter descriptions and function documentation, with clear spans for parameters (min_extent, max_extent) that can be learned by the model as part of span segmentation in code context. It is clean but lacks natural language coherence due to its technical nature; however, it represents valuable patterns combining both domains effectively. / The segment contains a mix of parameter descriptions and function documentation, which are clear structures suitable for span segmentation in both programming contexts (code) and explanatory text (natural language). It represents valuable patterns that can aid the model's understanding of different types of content within code. / The segment contains a mix of parameter descriptions and function documentation, with clear spanable elements like \"BoundingBox\", which are valuable for learning structured patterns in both programming contexts (code) and natural language explanations (documentation). However, the lack of context may slightly reduce its utility. / The segment contains a mix of parameter descriptions and function documentation, which are structurally clear for span segmentation; it includes both programming constructs (code) with parameters that can be segmented into meaningful spans like 'min_extent', as well as natural language explanations ('Member Function Documentation'). It is clean but lacks context or examples to improve training utility. / Contains clear, structured elements with both programming constructs and documentation language; spans can be segmented into meaningful parts for training purposes."}}
{"raw": "The order in which matrix data is loaded to the GPU. This property is read-only.", "type": "mixed", "id": {"id": "321c2331-ebb3-42ae-8194-045226af7f2f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear mix of technical language and configuration-like statements, with identifiable spans for both 'natural' (explanation) and 'code' ('GPU', 'matrix data') elements that can be useful in training an X-Spanformer model to understand span segmentation across different domains. / The text contains both a descriptive phrase and technical terminology, which can help the model learn to segment spans that include variable names (\"matrix data\"), programming concepts (\"GPU loading order\"), as well as natural language descriptions of functionality (read-only property). / The segment contains both a descriptive phrase and technical terminology that can be segmented into meaningful spans, representing valuable patterns for learning span composition in the context of programming documentation or configuration files. It is clean with clear structure suitable as training data. / The segment combines a descriptive phrase with technical terminology, representing both language and programming concepts that are useful for learning span segmentation in an environment where the distinction between different types of content is important. / The segment contains a clear, structured statement that combines both technical terminology (\"matrix data\", \"GPU\") and descriptive language (read-only property), making it representative of the target domain which is likely to be code documentation or configuration settings in software development environments."}}
{"raw": "This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nParam 03d Param inputConnection [inherited] The input connection for this param. This property is read-only: String 03d NamedObjectBase name [inherited] The object's name.", "type": "mixed", "id": {"id": "33aebe57-5996-4fe9-9e8c-7be79e4b7a19"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured data (parameters and properties) suitable for span segmentation, representing a mix of programming constructs with clear patterns. However, the presence of similar-looking strings ('03d') could confuse learning models; thus not perfect but valuable. / Clear separation of parameters and properties with consistent naming conventions indicative of programming constructs, suitable for learning span segmentation in a coding context. / Contains both readable text and programming-related terms, with clear span segmentation opportunities for a tokenizer-free model. / Clear structure with identifiable spans; useful for learning span segmentation in programming context. / Contains both readable text and structured data (parameters, properties), which can help the model learn to segment spans in a context that includes programming constructs alongside descriptive language."}}
{"raw": "Number 03d RenderNode_priority [inherited] Sets the priority of this render node. lower priorities are rendered first:\nTransform 03d", "type": "mixed", "id": {"id": "3b0eea21-ebe0-44aa-bd10-9434d1b4cfb2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of numerical values, identifiers (like '03d'), and descriptive text ('RenderNode_priority', 'Transform'). It has clear delimiters that suggest meaningful spans for both code-like elements (\"Number\", \"Priority\") and natural language descriptions (\"Sets the priority\"). Despite being somewhat terse or lacking context which could be improved upon to increase clarity. / The segment contains a mix of numerical identifiers, programming constructs (like Transform), and comments that could help the model learn span segmentation in both structured data formats like configuration files or documentation with embedded code references. However, it lacks context for natural language processing tasks entirely on its own; thus it's not purely \"natural\" text but rather mixed content useful to a tokenizer-free encoder learning from diverse inputs. / The segment contains a mix of numerical identifiers and descriptive text, which can be segmented into meaningful spans for learning purposes; however, the clarity could improve with better formatting or additional context. / The segment contains a mix of numerical identifiers and text that suggests both programming context (e.g., \"RenderNode_priority\") with accompanying descriptions (\"Sets the priority...\"). Clear span segmentation is possible between code constructs, which can be beneficial for learning patterns in this type. / The segment contains a mix of numerical identifiers, programming constructs (e.g., \"RenderNode_priority\"), and comments that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or additional information to improve its score further."}}
{"raw": "Near z plane.\n03djs.canvas.CanvasInfo Class Reference List of all members\nDetailed Description The CanvasInfo object creates and keeps references to the 03D objects that are shared between all CanvasQuad objects created through it: Source 03djs/canvasjs\nConstructor 03djs canvas CanvasInfo(pack; root; viewInfo)\nPublic Member Functions lo3djs_ canvas CanvasQuad  createQuad(width, height, transparent, opt_parent) lo3djs_canvas CanvasQuad  createXYQuad(topX, topY, z, width, height; transparent; opt_parent)", "type": "mixed", "id": {"id": "0588b1e7-175a-4bd8-bdee-08e52d67a256"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans (class names, function signatures) and representative patterns for learning span composition in programming context. / Clear structure with identifiable spans; well-representative of programming constructs and classes. / The text segment contains a mix of programming language syntax and documentation, with clear references to classes (CanvasInfo) and methods that can be segmented into meaningful spans for learning purposes. It is well-formed but lacks context or content beyond the code reference list which may limit its utility as standalone training data. / The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation (class references, function names). It represents valuable patterns in both coding constructs and documentation style. However, it lacks contextual coherence as it's more like an excerpt from code documentation rather than executable or standalone content. / The segment contains a mix of programming language syntax and documentation, with clear references to classes (CanvasInfo) and methods that can be segmented into meaningful spans for learning span composition in both natural text descriptions (\"Detailed Description\") and code constructs (\"Constructor\", \"Public Member Functions\")."}}
{"raw": "String 03d NamedObiect name [inherited] The object's name. Setting this has no meaning to 03D, but is useful for debugging and for the functions Client_getObjects, Pack-getObject; RenderNode getRenderNodesByNamelnTree and RenderNode:getTransformsByNameInTree which search for objects by name.", "type": "mixed", "id": {"id": "a7d52b4d-6b0a-4609-9f0b-110e13ef7383"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear distinction between object names and descriptions, useful for debugging functions; spans can be identified as 'object name' or function calls. Mixed content type due to programming context with descriptive text. / The segment contains a mix of programming concepts and language, with clear references to object names in the context of debugging functions which can help learn span segmentation for both technical terms (\"NamedObiect\", \"Client_getObjects\") and code constructs (function calls). / Contains a mix of programming concepts and language, with clear spanable elements like object names and function calls that are relevant for learning context-aware spans in both domains. / The segment contains a mix of programming terminology and object-oriented concepts, with clear spans for names (\"String\", \"NamedObiect name\") that could help the model learn span segmentation in both code context and natural language descriptions. However, it lacks coherence as an isolated example due to its fragmented nature; thus it's not ideal training data on its own but can be useful when combined properly within a larger dataset. / The segment contains a mix of programming concepts and language, with clear references to object names in the context of debugging functions which can be segmented into meaningful spans for learning purposes."}}
{"raw": "ParamOpl6FloatsToMatrix4 Class Reference\nInherits 03d ParamObject:\nList_of all members\nDetailed Description\nParam operation that takes 16 floats to produce a Matrix4. Public Member Functions\nParam createParam (String param name, String param_type_name) Param getParam (String param name) bool removeParam Param param) copyParams (ParamQbiect source_param_object)", "type": "mixed", "id": {"id": "bae3e6ff-f013-41fa-b0b3-5bfb3681f084"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains a mix of programming concepts and terminology that can be segmented into meaningful spans for learning purposes, though some terms are misspelled (\"FloatsToMatrix4\" instead of \"Float32x4\"). The structure suggests code-related content with natural language descriptions which is valuable in span segmentation. / The segment contains a mix of technical terms and programming concepts, indicating clear span boundaries for both language constructs (class references) and specific function names or parameters that can be useful in training an encoder to understand code context alongside natural descriptions. / The segment contains a mix of descriptive text and programming-related terms, which can help the model learn span segmentation in both contexts. However, there are some typos (e.g., \"Opl6FloatsToMatrix4\" instead of likely intended \"OpL6FloatsToMatriX4\") that may need correction for optimal training utility. / The segment contains a mix of programming concepts and documentation, with clear references to classes/methods that can be segmented into meaningful spans for learning purposes. Despite some typos (\"FloatsToMatrix4\" should likely read \"Float32x4\"), the structural clarity is sufficient as it represents valuable patterns in both code structure (class reference) and natural language description of programming concepts, which are essential to span-aware models like X-Spanformer. / The segment contains a mix of programming concepts and terminology, which can help the model learn span segmentation in both contexts; however, it lacks clarity due to typos (\"Opl6FloatsToMatrix4\" instead of \"OpL6FloatsToMatriX4\", etc.)."}}
{"raw": "[inherited] Breaks a specific param-bind output connection on this param. Parameters:\ndestination_param param to unbind. 03d. Param.!", "type": "mixed", "id": {"id": "8935affb-3b52-470f-a03a-238b56aaab6e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of structured language (natural) and programming-like syntax, which can be useful for learning span segmentation in both domains. However, the clarity could improve with better formatting or additional context. / Clear structure with identifiable spans; useful for learning param-binding patterns in programming contexts. / The segment contains a mix of documentation (natural language) and technical notation, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to unconventional formatting (\"03d.\" Param.!\"). Further refinement could improve its utility as training data. / The segment contains a mix of structured elements (code-like syntax) and annotations that can be segmented into meaningful spans for learning purposes, such as \"Breaks\", \"[inherited]\", \"destination_param param to unbind.\", which are indicative of code constructs with natural language descriptions. / The segment contains a mix of structured commands and descriptions, with clear parameters that can be segmented into meaningful spans for learning purposes. Despite the unusual syntax (\"03d.\"), it maintains clarity in its intent to describe an action on code elements (param-bind output connection)."}}
{"raw": "The plugin will download (or get from your local repository) the artifact sources and add them to the compiler Classpath:", "type": "mixed", "id": {"id": "8675abfa-3a4c-4a27-83ce-e03cd5e508ca"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of instructions and technical terms that can be segmented into meaningful spans, such as \"The plugin\", \"(or get from your local repository)\", etc., representing valuable patterns for learning span composition in both natural language context and code-related terminology. / The segment contains a mixture of instructions and technical language, with clear phrases that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which might affect its utility as standalone training data. / The segment contains a mix of instructions (natural language) and technical terms related to software development, which can help the model learn span segmentation for both types of content. / The segment contains a mixture of instructions and technical terms, with clear phrases that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / Contains both descriptive text and programming-like instructions, with clear spans for \"plugin\", \"artifact sources\", etc., suitable for learning span composition in a mixed context."}}
{"raw": "Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from. Passing in null will unbind any m parameter currently bound. Returns:\nTrue if the bind succeeded. bool 03d.", "type": "mixed", "id": {"id": "b2d4326b-fd40-4621-a656-e1ef302c1dff"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming concepts and parameter descriptions, offering valuable patterns for span segmentation in a mixed context. However, the presence of non-standard characters (e.g., \"03d\") may affect clarity slightly but is not detrimental to learning spans or composition overall. / The segment contains a mix of both technical language and structured data (parameters, boolean values), which can be useful for learning span segmentation in contexts involving programming or configuration settings. However, the presence of non-standard characters ('03d') may affect clarity slightly but is not severe enough to discard it entirely. / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to inconsistent formatting (\"Directly binds\" vs \"Returns:\"), but it's still coherent enough for training purposes. / The segment contains a mix of technical descriptions and parameter names, which can be segmented into meaningful spans for learning purposes; however, the presence of non-standard characters (e.g., \"03d\") may pose challenges in training data quality evaluation. / The segment contains a mix of instructional text and programming-like syntax, with clear references to parameters that can be segmented into meaningful spans for learning purposes. However, the presence of non-standard characters (e.g., \"03d\") may affect clarity slightly but does not significantly detract from its overall utility as training data."}}
{"raw": "See Also:\n03d Pack 03d Shape\n!o3djs_primitives VertexInfo 03djs.primitives createCubeVertices\nnumber\nsize\nlo3djsmath Matrix4 opt_matrix Creates the vertices and indices for a cube. The cube will be created around the origin: (-size 2, size / 2)", "type": "mixed", "id": {"id": "a0b8f879-9d47-439e-8fd1-6fe3e31ad645"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation (natural language) and programming constructs, with clear references to functions/methods (`createCubeVertices`, `opt_matrix`) that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / The segment contains a mix of documentation (natural language) and programming constructs, with clear references to functions/methods (`createCubeVertices`) that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / The segment contains a mix of programming constructs and comments, with clear spans for function names (\"createCubeVertices\"), variable assignments (e.g., \"size\", \"opt_matrix\"), and natural language explanations that are coherent together. This blend provides valuable patterns in both code structure and documentation style which can aid the model's learning process on span segmentation across different types of content. / Clear spans of both programming constructs and descriptions, representing valuable patterns for learning span segmentation in a mixed context. / The segment contains a mix of documentation (natural language) and programming constructs, with clear references to functions/methods (`createCubeVertices`) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context on how the `opt_matrix` function works or what its parameters mean in terms of span composition within natural-language explanations versus code syntax."}}
{"raw": "Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only: bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source.", "type": "mixed", "id": {"id": "fb458c8a-fe0b-4130-ac55-2d8d552c6934"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both descriptive text and programming-related terms, with clear span boundaries for each concept (e.g., \"Param readOnly\", \"[inherited]\", etc.). It is clean but lacks context or examples that could improve its training utility. / The segment combines both programming concepts and documentation, showing clear structure for span segmentation with terms like \"Param\", boolean values (\"true\"/\"false\"), inherited properties (e.g., \"[inherited]\") which are valuable patterns to learn in a tokenizer-free context. / The segment contains both descriptive text and programming-related terms, which can help the model learn to distinguish between different types of spans in a combined context. However, clarity could be improved for better training utility. / Contains both programming concepts and language constructs, with clear span segmentation opportunities for learning purposes. / The segment contains both descriptive text and technical terms related to programming parameters, which can help the model learn span segmentation in a context that includes coding conventions alongside explanatory prose."}}
{"raw": "Some samples may be slow using certain combinations of graphics hardware and Google Chrome. Display Issues Navigating to pages with 03D content via the browser history in Firefox for Mac may not initialize the plug-in properly. As a workaround, refresh the page. The 03D content area may not move properly when the user is scrolling in Firefox for the Mac.", "type": "natural", "id": {"id": "fb357f34-5cf5-4a72-8bdb-34ddb0a86550"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear narrative structure with identifiable spans like \"graphics hardware,\" \"Google Chrome,\" and specific instructions (\"refresh the page\"). Represents useful patterns for learning span segmentation in text. / Clear sentence structure with identifiable spans; represents useful patterns for learning text composition and context understanding in a non-code domain. / Clear, coherent sentences with identifiable spans; useful for learning sentence structure and context in NLP tasks. / Clear, coherent sentences with identifiable phrases and potential spans for training; well-representative of common web-related issues in documentation. / The segment contains clear, structured sentences with identifiable spans such as phrases and technical terms related to web browsing issues which can be useful for span segmentation learning in a tokenizer-free context. It is coherent but lacks explicit code constructs or mixed content elements that would warrant classification under \"code\" or \"mixed\"."}}
{"raw": "Parameters: label Label to put in front of dump. point3 Point3 to dump. opt_prefix optional prefix for indenting: 03djs.dump.dumpRenderNode", "type": "mixed", "id": {"id": "3fd638b8-5da4-4310-b4e5-506599d31891"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of parameter descriptions and values, which can help the model learn to identify spans in both human-readable text (natural language) and technical terms or identifiers that are common in programming contexts (code). It is clean but lacks context for full comprehension. / The segment contains a mix of parameter descriptions and variable names, which are clear spans for training purposes in both contexts. It is clean but lacks context or examples that could improve its utility as an isolated example. / The segment contains a mix of parameter descriptions and potential variable names, which can help the model learn span segmentation in both contexts. / The segment contains a mix of parameter descriptions and potential command-line arguments, which are structurally clear for span segmentation; it's clean but lacks context or examples to fully represent the domain's patterns. / The segment contains a mix of parameter descriptions and programming constructs, which can help the model learn span segmentation for both types of content. It is clean but lacks context or examples that could enhance its training utility further."}}
{"raw": "o3djs loader_Loader  createLoader(onFinished) finisho loadScene(client, pack, parent, url, opt_options, opt_onSceneLoaded) loadTextFile(url, onTextLoaded) loadTexture(pack, url, opt_onTextureLoaded)\nPublic Properties ! o3disio LoadInfo loadInfo\nConstructor", "type": "mixed", "id": {"id": "09d0ffe1-9d8e-4582-a38d-fbe19e4f3c23"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs, function calls and property names that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which may affect its utility as standalone training data. / The segment contains a mix of programming functions and properties, with clear structure for span segmentation; however, it lacks context which may affect training utility. / Clear mix of function calls and property declarations with identifiable spans for both syntax (code) elements like functions, parameters, properties; useful patterns emerge from the combination that can aid in learning span segmentation across different contexts. / Clear function and property names, representing valuable patterns for learning span composition in programming context. / The segment contains a mix of programming constructs and comments, with clear identifiers for functions/methods that can be segmented into meaningful spans; however, it lacks context which might affect its utility as training data."}}
{"raw": "For example, a method defined as ImageResource logo () might be backed by a file named Logo.png located in the same package. By default; the GWT compiler will look for a resource with the same name as the method: You can also specify a resource file explicitly using the @Source annotation.", "type": "mixed", "id": {"id": "6e8964a5-fd22-4732-9bc2-289ce8a1bad4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of programming concepts and annotations, which can help the model learn span segmentation in both contexts. It is coherent but lacks explicit examples for each type (natural language vs code). More diverse segments could improve learning outcomes. / Contains both programming concepts and language, with clear spanable elements like method names, file paths, annotations which are useful for learning composition in a tokenizer-free context. / The segment contains a mix of programming concepts and language, with clear references to methods (\"ImageResource logo\"), files (\"Logo.png\"), annotations (@Source), which are meaningful spans for learning span segmentation in both code context (method names) and natural language descriptions (annotations). / Contains both programming concepts and language, with clear spanable elements like method names, file paths, annotations that can aid in learning complex patterns for a tokenizer-free model. / Contains both programming concepts and language, with clear spanable elements like method names, file paths, annotations which are useful for learning composition in a tokenizer-free context."}}
{"raw": "Removes a Param from a ParamObject:\nThis function will fail if the param does not exist on this ParamQbject or if the param is unremovable.", "type": "mixed", "id": {"id": "9357b7d4-f2a1-492d-a8ee-6c66ae7e5434"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear references to objects (\"ParamObject\") that can be segmented into meaningful spans for learning purposes. It is clean but could benefit from punctuation improvements (e.g., \"unremovable\" instead of \"unremovable\"). / The segment contains a mix of programming concepts and documentation, with clear references to objects (\"ParamObject\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which might affect the compositional value slightly. / The segment contains a mix of programming concepts (function, ParamObject) and descriptive text that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which could improve its utility as training data. / The segment contains a mix of programming terminology and descriptive text, with clear phrases that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which could improve its utility as training data. / The segment contains a mix of programming terminology and instructions, which can help the model learn span segmentation in both contexts. However, there are minor spelling errors (\"ParamQbject\" should be \"ParameterObject\", \"unremovable\" is likely meant to say \"undestructurable\")."}}
{"raw": "opt_matrix A matrix by which to multiply all the vertices. Returns: lo3djs primitives_VertexInfo The created cylinder vertices. 03djs primitives setCullingInfo ! o3d", "type": "mixed", "id": {"id": "622a7b85-260f-441b-baa3-75652257b5b5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to inconsistent formatting (e.g., \"03djs\" instead of standard JavaScript notation). / The segment contains a mix of programming language syntax and comments, which can help the model learn both coding patterns (like function calls) and human-readable annotations or descriptions that are common in documentation for code libraries like Open3D.js. / Contains both programming constructs and documentation, with clear span segmentation opportunities for learning mixed content patterns. / The segment contains a mix of programming language syntax and comments, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to inconsistent formatting (e.g., \"03djs\" instead of \"O3DJS\"). / The segment contains both programming constructs and comments, showing clear span segmentation opportunities for a tokenizer-free model in understanding the context of software documentation."}}
{"raw": "struct_type_specifier ID struct definition STRUCT ID\nannotation list < annotation* '> '\nannotation basic type speci fier ID ' =1 initializer SEMI\ninitializer expression {' expression\nexpression ) * '} '\nregister name REGISTER (' input_register name\noutput_register_ name ) ;\ninput_register name ID DECIMAL LITERAL ID\noutput_register name ID\npack_offset +\nargument list param declaration\nCOMMA param_ declaration ) * ) ?", "type": "code", "id": {"id": "ae917aae-4a5b-46c6-8674-65694bce2c5c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans for types, annotations, expressions; well-suited to learning span composition in programming contexts. / Clear structure with identifiable spans for programming constructs; well-suited to learn span composition in a coding context. / Clear structure with identifiable spans like 'struct_type_specifier', 'initializer expression', and function calls, representing valuable patterns for learning span composition in programming contexts. / Clear structure with identifiable spans such as keywords, identifiers, and punctuation; well-suited for learning span segmentation in programming context. / Clear structure with identifiable spans for programming constructs, suitable patterns for learning span segmentation in a coding context."}}
{"raw": "This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nParam 03d Param inputConnection [inherited] The input connection for this param:", "type": "mixed", "id": {"id": "f6d49465-d0e5-424d-a78e-2bc86c7eafe9"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming elements and descriptive text, providing diverse examples for span segmentation in a tokenizer-free context. / Contains both structured programming elements and descriptive text, with clear span boundaries for learning purposes. / Contains a mix of technical terms and structured data, with clear span segmentation opportunities between identifiers like \"id\", properties such as \"[inherited]\", parameters (\"Param\"), inputs (\"inputConnection\") that are valuable for learning context-aware spans in both code-like structures and natural language descriptions. / Contains both structured data (unique ID, read-only property) and unstructured descriptions; spans can be identified for training purposes. / Contains both structured data (unique ID, input connection) and descriptive text; spans can be identified for training purposes."}}
{"raw": "This script tag is what actually loads the GWT module.", "type": "mixed", "id": {"id": "d711202b-249f-4acf-b8c8-69b41c762109"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a clear mix of HTML and JavaScript, representing valuable patterns for learning span composition in both markup language (code) elements like \"script tag\" as well as programming constructs (\"loads the GWT module\"). It is clean but lacks context which could be beneficial. / Contains a clear span of HTML markup and JavaScript, representing both language elements; useful for learning the composition between tags and scripting languages. / The segment contains a clear reference to HTML (script tag) and JavaScript, indicating both markup language elements ('HTML') as well as programming constructs ('GWT module'). It is clean for training purposes with identifiable spans that can be useful in learning span segmentation between code-related terms. / The segment contains a clear mix of HTML and JavaScript, which includes both structured elements (like the script tag) that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or content beyond identifying code constructs; however, it still provides valuable patterns related to web development practices. / The segment contains a clear span indicating the purpose of an HTML script tag, which is valuable for learning both markup language and programming constructs in one example."}}
{"raw": "Parameters: pack Pack to create request in: url The url of the archive file_ onFinished A callback that is called when the archive is successfully loaded and an Exception object which is null on success.", "type": "mixed", "id": {"id": "e31bf70d-24ad-4480-918c-5c3f212da69f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of parameter descriptions and programming-related terms, which can help the model learn span segmentation across different contexts. However, it lacks clarity in separating phrases due to missing punctuation or formatting cues. / The segment contains a mix of parameter descriptions and programming concepts, which can help the model learn to identify spans in both contexts. However, it lacks clarity due to missing punctuation or formatting that would make its structure clearer for training purposes. / Clear separation of parameters and descriptions, with identifiable spans for both programming context (code) and explanatory text (natural language). Well-formed content suitable for training a span-aware model in diverse contexts. / Clear separation of parameters and descriptions, useful for learning span composition in both programming context (code) and explanatory text (natural language). / Clear separation of parameters and descriptions, representing both programming concepts (parameters) and their explanations in a structured way that is beneficial for learning span segmentation across different contexts."}}
{"raw": "param declaration param_direction? param_variability? param type_specifier id declaration semantic? param_variability T CONST UNIFORM\nparam direction T IN T OUT", "type": "code", "id": {"id": "8eebedfd-c004-42cc-9670-8c62c8392573"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured programming parameters with identifiable spans for learning. / Clear structured elements representing parameters and types, suitable for learning span segmentation in programming contexts. / Clear, structured programming parameters with identifiable spans for learning. / Clear, structured parameters with identifiable spans; clean and well-formatted for training purposes. / Clear, structured parameter declarations with identifiable spans; well-suited for learning span segmentation in programming contexts."}}
{"raw": "The output of the vertex shader has a one-to-one correspondence between each vertex, its position in homogeneous clip space, and the attribute values that are to be interpolated. The rasterizer prepares this data for the pixel shader by interpolating between the values assigned to each vertex for each attribute and producing a corresponding attribute value for each pixel. The input to the pixel shader is an attribute value for each pixel in the primitive For example, here is a triangle with three vertex att", "type": "mixed", "id": {"id": "c556871f-f948-466b-8420-0e04a9a3f0da"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and programming concepts, with clear references to vertices, shaders, rasterization processes that are essential for understanding GPU rendering pipelines in computer graphics; however, the sentence is incomplete which might affect clarity slightly. / Contains a mix of technical descriptions and examples, with clear references to programming concepts like vertex attributes that can be segmented into meaningful spans for learning span composition in both domains. / Contains a mix of technical descriptions and programming concepts with clear structure for span segmentation; useful patterns present in both domains. / The segment contains a mix of technical descriptions and examples, with clear references to programming concepts like vertex shaders, rasterizers, pixel shaders; however, it is incomplete which may affect learning patterns for span segmentation. / The segment contains a mix of technical descriptions and programming concepts, with clear references to vertices, shaders, rasterization processes which are essential for learning span segmentation in both domains. It is coherent but lacks complete sentences; however, the context suggests it could be part of larger documentation or code comments that would benefit an X-Spanformer model focused on mixed content types."}}
{"raw": "ParamMaterial Class Reference\nInherits 03d Param:\nList_of all members\nDetailed Description\nParam which stores a Material\nPublic Member Functions\nbool bind Param source_param) unbindInput unbindOutput Param destination_param) unbindOutputs bool isAClassName (String class_ name)\nPublic Attributes\nMaterial value bool updatelnput bool readOnly Param inputConnection", "type": "mixed", "id": {"id": "b05b09f3-e4cc-42dd-bac2-bb1ea01cc023"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans for both language and programming constructs, representing valuable patterns in span segmentation across different domains. / The segment contains a mix of class documentation (natural language) and programming constructs, with clear spanable elements like method names, parameters, attributes, etc., which are valuable for learning both natural language processing in code context as well as understanding the structure of software classes. / Clear structure with identifiable spans; includes both descriptive text and programming constructs, representing valuable patterns for learning span composition in a tokenizer-free context. / Clear structure with identifiable spans like class names, member functions and attributes; represents valuable patterns for learning span composition in both programming context (code) and descriptive text (natural language). / Clear structure with spans for class references, member functions and attributes; good representation of both programming concepts (code) and descriptions (natural language)."}}
{"raw": "[inherited] Creates a Param with the given name and type on the ParamQbject: Will fail if a param with the same name already exists. Parameters:\nparam name The name of the Param to be created.", "type": "mixed", "id": {"id": "4f93a6ec-4a07-4073-afe8-a2135a695a1c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation (natural language) and programming concepts, with clear spanable elements like \"Creates\", \"[inherited]\", parameters list (\"param name\"), which are useful for learning both natural text structure as well as code-related patterns. / The segment contains a mix of documentation (natural language) and programming concepts, with clear parameters that can be segmented into meaningful spans for learning purposes. / Clear spans for both parameters and descriptions, representing valuable patterns in span composition across different contexts. / Clear structure with identifiable spans; combines both descriptive text and parameter documentation, representing valuable patterns for learning span composition in a mixed context. / The segment contains both structured and unstructured elements, with clear parameters for learning span composition in a context that combines documentation (natural language) instructions about programming concepts or APIs (code)."}}
{"raw": "Id 03d ObjectBase_clientld [inherited] Unique id of the object:", "type": "mixed", "id": {"id": "501735d1-286e-4181-9ca9-2226681dfd73"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of identifiers and programming-like syntax, which can be useful for learning span segmentation in both contexts; however, the clarity is somewhat compromised by its informal structure. / The segment contains a mix of structured identifiers and descriptive text, which can help the model learn to distinguish between different types of spans in both programming contexts (like unique IDs) and natural language descriptions. / The segment contains a mix of identifiers and descriptions that can be segmented into meaningful spans, such as \"Id\", \"[inherited]\", and the descriptive phrase following them. It is clean but lacks context for effective training due to its brevity. / The segment contains a mix of identifiers and text, with clear delimiters that can be used to learn span segmentation between the unique identifier \"03d\" as an object name or label (code-like) and its description (\"ObjectBase_clientld [inherited] Unique id\"). / The segment contains a mix of identifiers and descriptions that can be segmented into meaningful spans, such as \"Id\", \"[inherited]\", and \"Unique id\". It is clean but lacks context for training purposes; however, it represents valuable patterns in span segmentation within code documentation."}}
{"raw": "This property is read-only: Reimplemented in 03d NamedObject:\nArray 03d Param outputConnections [inherited] The output connections for this param:\nThis property is read-only:\nbool 03d. Param readOnly [inherited] If true the param is read only.", "type": "mixed", "id": {"id": "f1ff8588-0824-49e2-a7c1-76d7d08a213b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Contains both structured programming elements and comments, demonstrating clear span segmentation opportunities in a combined context. / Contains both readable text and structured, identifiable spans related to programming concepts (e.g., property names, types). Clear patterns for span segmentation present in the context of software documentation or configuration files. / Clear structured elements like property names, types and descriptions; well-suited for learning span segmentation in programming contexts. / The segment contains a mix of documentation (natural language) and configuration-like structures, with clear span segmentation opportunities for both elements."}}
{"raw": "setEnd(end) setEndPoints(start; end) setStart(start) setVisible(visible) Constructor\n03djs.debug DebugLine ! o3djs debug DebugLineGroup debugLineGroup", "type": "mixed", "id": {"id": "48a2a8fd-94c7-4ad5-bb33-ad22dc9dc74d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and comments, with clear spanable elements like function names (\"setEnd\", \"setStart\") and parameters (\"start; end\"), which are useful for learning code structure segmentation. It is clean but lacks natural language context that could improve training utility in understanding human-written documentation or prose mixed within the same domain as this segment suggests. / Clear structure with identifiable spans; useful for learning span segmentation in programming constructs. / The segment contains a mix of programming constructs and comments, which can help the model learn span segmentation in both contexts. However, it lacks coherence as it's more like an excerpt from documentation or code with scattered elements rather than structured sentences that would typically be found in natural language text. / The segment contains a mix of programming constructs and comments, with clear spanable elements like function names (\"setEnd\", \"setStart\") that can help the model learn both syntax patterns in code as well as natural language annotations (comments). / Clear span patterns from function names and parameters; well-suited for learning structured programming constructs."}}
{"raw": "RayIntersectionInfo: If result:value is false then something was wrong like using this function with an uninitialized bounding box. If result intersected is true then the ray intersected the box and result-position is the exact point of intersection:\nRayIntersectionInfo 03d. BoundingBox intersectRay Point3 start; Point3 end\nChecks if a ray defined in same coordinate system as this box intersects this bounding box.", "type": "mixed", "id": {"id": "64066dbc-9f93-4d90-8b77-4f20febc95ba"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming concepts and explanations, which can help the model learn span segmentation in a context that includes variable names (code) alongside descriptive text about their usage or purpose (natural language). However, it lacks clarity due to potential syntax errors (\"RayIntersectionInfo 03d. BoundingBox intersectRay Point3 start; Point3 end\" should likely be \"Ray Intersection Info: If result:value is false then...\"). / The segment contains a mix of programming concepts and documentation, with clear structure for span segmentation; however, it lacks clarity due to the presence of non-standard characters (e.g., \"03d\"). Clean-up is needed but retains valuable patterns for learning code-documentation interactions. / Contains both programming constructs and comments, with clear spans for function names, parameters, types, and descriptions that are useful for training a span-aware model. However, it lacks coherence as it's more of an explanation than executable code or documentation. / The segment contains a mix of programming concepts and documentation, with clear references to functions (`intersectRay`), data structures (like `BoundingBox`, `Point3`), variables (`result:value`, `start`, `end`) that can be segmented into meaningful spans for training. / Contains both programming concepts and language, with clear spanable elements like function names, variable types, comments indicating logical structure."}}
{"raw": "[inherited] The object's name. Setting this has no meaning to 03D, but is useful for debugging and for the functions Client_getObjects, Pack-getObject, RenderNode getRenderNodesByNamelnTree and RenderNode getTransformsByNamelnTree which search for objects by name. Reimplemented from 03d. NamedObjectBase: Array 03d ParamQbject_params", "type": "mixed", "id": {"id": "b16ebf52-bdfe-4bb0-9a7d-f3b0ce2bdc98"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation (natural language) and technical terms related to programming constructs, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to abbreviations like \"03D\" without context or explanation. / The segment contains a mix of documentation (natural language) and technical terms related to programming constructs, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to abbreviations like \"03D\" without context or explanation. / The segment contains a mix of documentation (natural language) and programming concepts, with clear references to object names in debugging contexts which are useful for learning span segmentation patterns across both domains. / The segment contains a mix of documentation (natural language) and technical terms, with clear references to object names in the context which can be segmented into meaningful spans for learning purposes. It is clean but lacks contextual coherence as it appears fragmented without surrounding text or explanation. / The segment contains a mix of documentation and programming concepts, with clear references to object names in the context of debugging functions; it presents learnable patterns for span segmentation across both domains."}}
{"raw": "This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nParam 03d Param inputConnection [inherited] The input connection for this param:", "type": "mixed", "id": {"id": "6ca6d70f-796c-463c-917f-d2d22119eadb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear distinction between descriptive text and structured parameters, representing both language patterns and technical syntax for span segmentation learning. / Clear mix of identifiers and parameters, representing both coding syntax (e.g., \"03d\", \"[inherited]\") as well as descriptive text (\"unique id across multiple clients\"). This combination provides diverse examples for learning span segmentation in a tokenizer-free context. / Contains both structured elements (unique ID, read-only property) and programming constructs (parameters), representing valuable patterns for learning span segmentation in a tokenizer-free context. / Clear distinction between descriptive text and structured parameters, useful for learning span segmentation in both domains. / Contains both structured programming elements and comments, which can help the model learn span segmentation in a diverse context."}}
{"raw": "Reimplemented in 03d NamedObject:\nArray 03d Param outputConnections [inherited] The output connections for this param.", "type": "mixed", "id": {"id": "040bcfb2-81b1-4c4c-a3e9-f44bf8764f80"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming constructs and comments, demonstrating span segmentation between a class/object name (natural language) and its properties/methods (code). The segment is clean but lacks context for full comprehension; however, it shows clear structural patterns useful in training. / Contains both programming constructs and comments, useful for learning span segmentation in a context that includes multiple content types. / Contains a mix of programming terminology and structured data, which can help the model learn span segmentation in both contexts. However, it lacks context for full comprehension without additional examples or surrounding text. / Contains both programming constructs and comments, demonstrating span segmentation between variable names/namespaces (e.g., \"03d NamedObject\") and strings (\"Array 03d Param outputConnections [inherited] The output connections for this param.\"), which is valuable for learning patterns in code. / Clear structure with identifiable spans for programming constructs; clean and coherent for training purposes."}}
{"raw": "The created cube has position, normal and uv streams.", "type": "mixed", "id": {"id": "69b67e91-5ee0-41b1-b95c-9e221bfeeac0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"created cube,\" which is likely to represent an object or concept in programming contexts; it also includes natural language descriptions (\"has position\", \"normal and uv streams\"). / The segment contains a mix of descriptive language and technical terms related to computer graphics, which can help the model learn span segmentation for both types of content. However, it lacks context or examples that would make its utility as training data stronger. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both coding contexts (e.g., \"position\", \"normal\") and natural language descriptions (\"has position\"). / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming context (e.g., \"position\", \"normal\") and natural language descriptions (\"has streams\"). / The text segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"created cube,\" which is likely referring to an object in programming or data processing contexts; this provides valuable patterns for learning span composition across both natural language descriptions (\"has position\") and code-related terminology."}}
{"raw": "UsING SUREFIRE\nIt's a long story as to why a dedicated gwt :test is needed, but in few words the regular Maven Surefire testing plugin requires some complex setup to work fine with GWTTestSuites.", "type": "mixed", "id": {"id": "16539d50-05f4-4883-b0fc-9f921828c32c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of programming-related terms and narrative text, with clear delimiters for potential span segmentation (e.g., \"USING SUREFIRE\", \":test\"). It is coherent but lacks context that could improve its training utility in learning complex patterns. / The segment contains a mix of programming-related terms and narrative text, with clear markers for different spans such as \"USING SUREFIRE\", which could be useful in learning span segmentation between code references (\"gwt :test\") and natural language explanations (\"It's a long story\"). However, the coherence is slightly compromised by mixing technical jargon without context. / The segment contains a mix of programming jargon and narrative, with clear phrases that can be segmented into meaningful spans for learning purposes. However, the readability could improve by removing informal language like \"It's\" to make it more formal technical documentation suitable for training data. / The segment contains a mix of programming-related terms and narrative text, which can help the model learn span segmentation in both contexts. However, it lacks clear examples or patterns for learning due to its informal nature. / The segment contains a mix of programming jargon and narrative text, with clear delimiters for potential span segmentation (e.g., \"USING SUREFIRE\", \":test\"). It is coherent but lacks context to fully understand the technical setup mentioned (\"complex setup\"), which could be beneficial in learning patterns related to software development documentation."}}
{"raw": "The 03D content area flickers when the user is scrolling in Internet Explorer o Firefox on Windows Vista.", "type": "natural", "id": {"id": "e027b825-f9b2-4204-8d49-0eb64765a5f5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with identifiable spans; useful for learning context and domain-specific language patterns related to software behavior descriptions. / Clear sentence structure with identifiable spans (subject, verb phrase). Represents useful patterns for learning span composition in the context of user experience reporting on web browsers and operating systems. / Clear sentence structure with identifiable spans (subject, verb phrase). However, the domain-specific reference (\"Windows Vista\") may limit generalization for diverse training data. / Clear sentence structure with identifiable spans (subject, verb phrase). Well-suited for learning span segmentation in English prose. / Clear sentence structure with potential for identifying spans related to software behavior and user interaction."}}
{"raw": "Member Function Documentation\n03d. ParamObject copyParams ParamObject source_param_object [inherited] Copies all the params from a the given source_param_object to this param object.", "type": "mixed", "id": {"id": "4649f981-8ad0-40d3-9c67-eab0e73f4641"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with a function signature and documentation, representing valuable patterns for learning span composition in both programming context (code) and explanatory text (natural language). / The segment combines both a function signature and its documentation, providing clear examples of span segmentation between the name, parameters, types, and descriptions which are valuable for learning patterns in mixed content. / Clear structure with a function signature and documentation, representing valuable patterns for learning span composition in both programming context (code) and descriptive text (natural language). / Clear mix of documentation (natural language) and programming concepts with identifiable spans for learning. / The segment combines a function name with its documentation, providing clear spans for both the identifier and description which are useful learning patterns in span segmentation. It is clean but lacks context or examples that could improve training utility further."}}
{"raw": "The parameter that the value originates from: Passing in null will unbind any m parameter currently bound.", "type": "mixed", "id": {"id": "a32f605c-d4b5-412b-b6ce-7af196646d83"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical language and parameter descriptions, which are valuable for learning span segmentation in both programming contexts (code) and documentation explanations (natural). It is clean but lacks context to fully evaluate its compositional value; however, it still offers clear structural elements. / The segment contains a mix of technical language and parameter descriptions, which can be segmented into meaningful spans for training purposes; it is clean but lacks context to fully understand the domain-specific patterns. / The segment contains a mix of technical language and parameter descriptions, which are clear spans for learning span segmentation in both contexts. It's clean but lacks context or examples to improve training utility further. / The segment contains a mix of technical language and parameter descriptions, which can help the model learn span segmentation in both contexts. It is coherent but lacks context for full comprehension by X-Spanformer without additional data. / The segment contains a mix of technical language and parameter descriptions, which can help the model learn span segmentation for both programming concepts (code) and explanatory text (natural). It is clean but lacks context to fully determine its utility in training; however, it has clear structural elements that are beneficial."}}
{"raw": "This property is read-only\nbool 93d Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only: bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it aS a source. Default = true.", "type": "mixed", "id": {"id": "01056925-b4e9-444d-83f6-793d30d2803d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming concepts and language elements, with clear spanable phrases like \"read-only\", \"Param readOnly\" indicating meaningful spans for a tokenizer-free model to learn from. / Contains both readable text and programming constructs, with clear span segmentation opportunities for properties like \"read-only\" and parameter descriptions. / The segment contains a mix of descriptive text and programming-related terms, with clear spans for properties (\"read-only\", \"Param readOnly\") that can be used to learn span segmentation in both natural language descriptions and code constructs. / The segment contains a mix of documentation-style text and programming-like syntax, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to inconsistent formatting (\"Param readOnly\" vs \"updatelnput\") that could confuse learning patterns for spans. / Contains both readable text and programming constructs, useful for learning span segmentation in a mixed context."}}
{"raw": "Exception excp Parses an error stack from an exception Parameters: excp The exception to get a stack trace from Returns: IArray <string  .An array of strings of the stack trace.", "type": "mixed", "id": {"id": "5eb03a2c-a62f-4eaf-83cc-a193af2238ee"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans (exception, parameters) and a consistent pattern for learning span composition in programming context. / Clear structured elements with meaningful spans; represents valuable patterns for learning span composition in both programming context and exception handling documentation. / Clear structured elements with meaningful spans, representing valuable patterns for learning span composition in programming context. / The segment contains a mix of programming language constructs and comments, with clear delineation between the function signature (code) and its description/commentary in English text. This provides valuable examples for learning span segmentation across different content types. / Clear separation between function signature and description, representing both language constructs (natural) with a technical term (\"IArray\") that is specific to programming contexts. This provides valuable patterns for learning span segmentation in code-related text."}}
{"raw": "In either case, the plugin will flag an error on any method that is missing a corresponding resource file. It will also generate errors if the method does not conform to other ClientBundle conventions.", "type": "natural", "id": {"id": "7410a6c9-08f5-4816-aaeb-3f683d839b06"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear sentence structure with identifiable spans for error handling and conventions in programming context. / The segment contains both programming concepts (\"method\", \"resource file\") and conventions, providing a good mix for learning span segmentation in diverse contexts. / Clear, coherent sentence structure with identifiable spans for error handling and programming conventions. / The segment contains a mix of technical instructions and programming conventions, with clear spans for \"plugin\", \"error\", \"method\", which are useful patterns to learn span segmentation in both natural language context and code-related terminology. / Clear sentence structure with identifiable spans such as \"plugin\", \"error\", and \"method\". Well-suited for learning span segmentation in text."}}
{"raw": "Does not replace any currently existing params with the same name. Parameters:\nsource_param_object param object to copy params from.", "type": "mixed", "id": {"id": "594afb54-f119-4b53-a2b7-42faabaeee7c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear instruction and parameters list, which are useful for learning span segmentation in both programming contexts (code) and instructional language (natural). It is clean with no ambiguity or errors that would hinder training effectiveness. / The segment contains a mix of instructions and parameter descriptions, which can be segmented into meaningful spans like \"source_param_object\", \"param object to copy params from.\" It is clean for training purposes but lacks context or examples that would increase its utility as diverse span patterns. / The segment contains a clear instruction and parameters list, representing valuable patterns for learning span composition in both language instructions (natural) and parameter descriptions (code). / The segment contains a clear instruction and parameter definition, which are meaningful spans for both language understanding (natural) and programming context comprehension (code). It is clean but lacks contextual richness that could improve the span segmentation learning process. / The segment contains a mix of instructions and parameters, with clear spans for both the action (\"Does not replace any currently existing params\") and its description (\"with the same name\"). It is clean but lacks context which might be necessary to fully understand span composition in different scenarios."}}
{"raw": "Returns:\nTrue if the bind succeeded.", "type": "mixed", "id": {"id": "4873a2c4-e5ab-4a27-83ed-2047fa1a8eea"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear indication of a function's return value and success condition, combining both technical (code-like) structure with explanatory text. Suitable for learning span segmentation in diverse contexts. / Clear distinction between a function's return value and its success condition, representing valuable patterns for learning span composition in both programming logic (code) and explanatory text (natural language). / Clear instructional text with a predictable structure; spans can be identified as \"Returns\", \"True if the bind succeeded.\" and is coherent for training purposes. / Clear indication of a function's return value with both programming and descriptive language elements. Suitable for learning span segmentation in diverse contexts. / Clear statement with a conditional outcome, suitable for learning span segmentation in declarative contexts."}}
{"raw": "Reimplemented in 03d NamedObject:\nArray 03d Param outputConnections [inherited] The output connections for this param.", "type": "mixed", "id": {"id": "37a182c8-67f9-4e7c-a513-6fdd66426bd1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming elements and descriptive text, showing clear span segmentation opportunities for a tokenizer-free model. / Clear structured elements with meaningful spans; clean and well-formatted for training purposes, representing valuable patterns in programming context. / Contains both structured programming elements and descriptive text, providing a good mix for learning span segmentation in diverse contexts. / Contains both structured programming elements (e.g., array declaration, parameter naming) and comments that can be segmented into meaningful spans for a span-aware model to learn from. The mix of natural language descriptions with code constructs provides diverse examples beneficial in training. / Contains both structured programming elements and descriptive text, providing a good mix for learning span segmentation in diverse contexts."}}
{"raw": "If no string is passed in the newest version of the plugin will be created:", "type": "natural", "id": {"id": "d85fd10b-52b9-495b-938d-e32c96789c00"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear conditional statement with a potential span for \"string\" and the plugin context, good example of sentence structure in English. / The segment contains a mixture of programming instructions and comments, which can help the model learn to distinguish between different types of spans in both contexts. It's clean but lacks context for full comprehension by X-Spanformer without additional data. / The segment contains a conditional statement with both programming logic and explanatory text, providing clear patterns for span segmentation in the context of software documentation or tutorials. / Clear conditional statement with a potential span for \"no string\" and the context of plugin creation, suitable for learning language patterns. / The segment contains a conditional statement with clear structure and potential for learning span segmentation in the context of programming logic, despite being primarily written as prose. It is clean but lacks explicit coding language markers that would make it ideal code training data; however, its mixed nature can still be valuable for understanding how to parse natural text into spans relevant within software documentation or similar contexts."}}
{"raw": "The GWT compiler separates the act of compiling and packaging its output with the Linker subsystem. It is responsible for the final packaging of the JavaScript code and providing a pluggable bootstrap mechanism for any particular deployment scenario. <define-linker name-\"short_name\" class-\"fully_qualified_class_name\" />", "type": "mixed", "id": {"id": "b5031310-b6c3-4e7a-a331-dd79397a7185"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of descriptive text and structured markup, which can help the model learn both span segmentation in human language as well as recognizing specific patterns like XML-like tags used for defining elements. However, it lacks clarity on what \"short_name\" or \"fully_qualified_class_name\" refers to without additional context. / Contains a mix of descriptive text and structured markup, with clear spans for both language (\"The GWT compiler\") and configuration elements (e.g., <define-linker>). The segment is clean but lacks context to fully assess its training utility without additional examples. / Contains both structured programming elements and documentation, with clear spanable constructs like class names and method calls. / Contains a mix of descriptive text and structured markup, with clear spans for both language (e.g., \"The GWT compiler\") and programming constructs (\"<define-linker name-\"short_name\" class-\"fully_qualified_class_name\"'\"). / The segment contains both structured programming elements (class and method names) as well as documentation-style text, which can help the model learn span segmentation for different content types. However, it lacks clarity in separating code from natural language due to improper formatting of class name (\"short_name\" should be a valid identifier)."}}
{"raw": "WorldViewProjectionInverseTransposeParamMatrix4'\nReturns:\nThe newly created Param or null on failure.", "type": "code", "id": {"id": "82def6cd-bfe7-4257-92a9-4fb967fef9d0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structured elements with consistent patterns; well-suited for learning span composition in programming contexts. / Clear, structured programming-related content with identifiable spans for learning; well-suited as training data. / Clear, structured API documentation with identifiable spans for function name and parameters. Suitable pattern recognition training material. / Clear, structured representation of a function signature and its documentation in programming context; contains meaningful spans for learning."}}
{"raw": "DrawElement 03d. Element createDrawElement Pack pack, Material material\nCreates a DrawElement for this Element: Note that unlike Shape createDrawElements and Transform createDrawElements this one will create more than one element for the same material. Parameters:\npack used to manage created DrawElement:", "type": "mixed", "id": {"id": "9dafd1a8-e477-4aca-a80d-e5b3f807de16"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation; however, it lacks context to fully understand the 'pack' parameter's role in managing DrawElements. It represents valuable patterns but could benefit from additional natural-language explanations or examples. / Clear mix of programming constructs and comments; spans can be identified for both syntax (code) elements like \"DrawElement\", \"Material\" etc., as well as descriptive text (\"Creates a DrawElement\"). It contains valuable patterns that represent the interaction between natural language explanations in code documentation. / The segment contains a mix of programming instructions and comments, with clear structure for span segmentation; however, it lacks context which could be beneficial to the model's learning process. / The segment contains both programming constructs and comments, which can help the model learn to distinguish between different types of spans in a mixed context. However, it lacks clarity due to missing punctuation or clearer separation markers for training purposes. / The segment contains a mix of programming concepts and documentation, with clear references to functions (CreateDrawElement) that can be segmented into meaningful spans for training purposes. Despite some grammatical issues (\"pack used\" should likely read \"Pack is used\"), the content's structure provides valuable patterns related to code function calls in mixed contexts."}}
{"raw": "RenderSurfaceSet Class Reference\nInherits 03d RenderNode: Listof all members\nDetailed Description\nRenderSurfaceSet node will bind depth and color RenderSurface nodes to the current rendering context.", "type": "mixed", "id": {"id": "5155f740-56bd-4591-9ad4-159ebaca9755"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both structured programming elements (class reference, inheritance) and descriptive text that can help the model learn span segmentation in a context involving software documentation or API references. / The text contains a mix of class reference descriptions and programming terminology, which can help the model learn span segmentation in both contexts. However, it lacks detailed examples or varied patterns that could improve its training utility further. / Contains both structured programming elements and descriptive text, representing a blend of syntax (class reference) with explanatory prose suitable for span segmentation learning in X-Spanformer. / The segment combines both technical descriptions (code-like) and documentation language, presenting a clear structure with identifiable spans for learning purposes. It is clean but lacks explicit span boundaries which X-Spanformer needs to infer from context clues in the training data. / The segment combines both programming concepts and descriptions, which can help the model learn span segmentation in a context that includes technical documentation alongside actual class references. However, it lacks detailed examples or varied patterns for robust training; additional segments may be needed to improve learning outcomes."}}
{"raw": "This property is read-only\nbool 93d Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only:", "type": "mixed", "id": {"id": "8c6fa657-5c97-47b9-a2e5-52dd4bf88898"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of declarative statements and programming-like annotations, which can help the model learn span segmentation in both contexts. However, it lacks context for full comprehension by X-Spanformer without further examples or clarification on its usage within code structures. / The segment contains a mix of declarative statements and programming-like annotations, which can help the model learn span segmentation in both contexts. However, it lacks contextual coherence for effective training on its own without additional examples or explanations. / The segment contains a mix of declarative statements and programming-like syntax, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks context for natural language processing tasks due to its technical nature. / The segment contains a mix of declarative statements and programming-like syntax, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to inconsistent formatting (\"This property is read-only\" vs \"bool 93d Param readOnly [inherited] If true...\"). / Contains both descriptive text and programming-like syntax, with clear spanable elements such as property names (\"read-only\"), values (bool), parameters (\"Param readOnly [inherited]\") that can be useful for learning context-aware segmentation in a tokenizer-free model."}}
{"raw": "o3djsmath Matrix negativeMatrix(m)", "type": "code", "id": {"id": "42af1bc6-7393-4a15-993e-973637456ebb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear function signature with meaningful spans for learning; well-formed and representative of programming patterns. / Clear function signature with a meaningful span for the model to learn from; well-formed and representative of programming patterns. / Clear function signature with meaningful span for a programming context. Well-formed and representative of coding patterns. / Clear function signature with meaningful spans; well-formed for training purposes and represents valuable patterns in programming context. / Clear function signature with meaningful span for a programming context, well-formed and representative of typical coding patterns."}}
{"raw": "Fourth value. 03djs primitives. VertexStreamInfo addElementVector !Array:<number> vector Adds an element to this VertexStreamInfo. The number of values in the vector must match the number of components for this VertexStreamInfo.", "type": "code", "id": {"id": "f5b090ee-22be-44a5-b857-db6f1fad753a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, with clear delimiters for spans such as keywords (\"Fourth\", \"03djs primitives\"), function names (\"VertexStreamInfo.addElementVector!Array:<number> vector Adds an element to this VertexStreamInfo.\"), which are valuable patterns. However, the presence of mixed content types (code-like expressions within a comment) slightly reduces clarity and may introduce noise for training purposes; thus not scoring 1.0. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Contains a mix of programming concepts and language, with clear spanable elements like method names (\"addElementVector\"), data types (\":<number> vector\", \"VertexStreamInfo\"), which can help the model learn different patterns in code-related text. / Clear structured elements with meaningful spans; clean and coherent for training purposes, representing valuable patterns in programming constructs. / Clear structure with identifiable spans related to programming constructs, suitable for learning span segmentation in a coding context."}}
{"raw": "Prince IO may cause Firefox on Windows to become unresponsive.", "type": "natural", "id": {"id": "130d77e7-f18a-4d8b-bae7-5b8e9f78ee25"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with a subject (\"Prince IO\"), verb (\"may cause\"), and object (\"Firefox on Windows to become unresponsive\"). Suitable for learning span segmentation in English prose. / The segment combines a programming-related term (\"Prince IO\") with an operating system behavior description, providing diverse patterns for span segmentation in both technical and descriptive contexts. / Clear sentence structure with a subject, verb phrase and an object; represents useful patterns for span segmentation in English text. / The segment contains a mixture of both descriptive text and technical reference, which can be useful for learning span segmentation in contexts where programming language references are embedded within human-readable descriptions. However, the lack of explicit code constructs may slightly reduce its utility compared to pure coding examples or documentation snippets. / Clear, coherent sentence with a clear subject (\"Prince IO\") and object (\"Firefox on Windows\"), suitable for learning span segmentation in English prose."}}
{"raw": "Param unbindInput [inherited] Breaks any input connection coming into the Param\n03d. Param unbindOutput Param destination_param", "type": "code", "id": {"id": "1470875c-22c4-4970-a4e5-56c73810e496"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured programming-related content with identifiable spans for input/output connections and parameters. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming contexts. / Clear structured elements with meaningful spans; clean and well-formatted for learning span composition in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structure with identifiable spans; useful for learning span segmentation in programming context."}}
{"raw": "Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only: bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source. Default = true.", "type": "mixed", "id": {"id": "6487b916-6f4d-463a-ada1-3c288db628cf"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation-style text and programming language elements, with clear spans for phrases like \"Its value can not be set\" which could help the model learn span segmentation in both contexts. However, it lacks coherence as an isolated example due to its fragmented nature; thus it's scored slightly lower than ideal but still valuable for mixed content training. / The segment contains both programming language syntax and comments, which are valuable for learning span segmentation in a tokenizer-free context that handles multiple content types. / The segment contains a mix of descriptive text and programming-related terms, with clear indications for span segmentation like \"Its value,\" \"[inherited],\" etc., representing valuable patterns in both natural language processing (NLP) context and code comprehension. / The segment contains a mix of descriptive text and programming-related terms, with clear boundaries for span segmentation (e.g., \"Its value can not be set nor...\"). It is coherent but lacks context to fully assess its training utility without additional examples or explanations. / The segment contains a mix of descriptive text and technical terms related to programming parameters, with clear distinctions between explanations (\"Its value can not be set nor...\") and property descriptions (e.g., \"bool\", \"[inherited]\", etc.). This provides valuable patterns for learning span composition in both natural language context and code-related syntax."}}
{"raw": "ParamObject-getParam String  param_ name ) [inherited] Searches by name for a Param defined in the object.", "type": "mixed", "id": {"id": "018de835-3d75-47e3-83c4-9fa7a835c541"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terminology and function-like syntax, which can be useful for learning span segmentation in both contexts. However, the clarity could improve with better formatting or additional context to increase its utility as training data. / The segment contains a mix of programming language syntax and documentation, with clear spanable elements like function names (\"ParamObject-getParam\"), parameter types (\"String\", \"param_ name\"), and descriptions that are useful for training an encoder to understand both code constructs and their natural explanations. / The segment contains a mix of programming language syntax and documentation, with clear spanable elements like function names (\"ParamObject-getParam\"), parameters (\"String param_ name \"), and descriptions that are useful for learning both code structure (function signature) and natural language explanations in the context. / The segment contains a mix of programming language syntax and documentation, with clear spanable elements like function names (\"ParamObject-getParam\"), parameter types (\"String\", \"param_ name\"), method calls ([inherited]), which are valuable for learning both code structure (spans) and natural language descriptions. / Clear function signature and parameter list; represents valuable patterns for learning span composition in programming context."}}
{"raw": "Parameters:\nparam name Name to search for: Returns: The Param with the given name, O null otherwise. bool 03d. ObjectBase.isAClassName String class name [inherited] Takes the name of a class as an argument; and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "87a141c6-ada4-401e-bdd8-c3436f515e1f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts (parameters, classes) and language constructs that can be segmented into meaningful spans for learning purposes; however, it lacks clarity due to the presence of non-standard characters like '03d'. / The segment contains a mix of programming concepts and documentation, with clear parameters (name) that can be segmented into meaningful spans for learning purposes. It is clean but lacks context on usage or examples which could improve its utility as training data. / The segment contains a mix of programming concepts (parameters, classes) and language constructs that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which might affect its utility as training data. / The segment contains a mix of programming concepts (parameters, classes) and language constructs that can be segmented into meaningful spans for learning purposes; however, it lacks clarity due to the presence of non-standard characters like \"03d\" which may confuse model training. / The segment contains a mix of programming concepts (parameters, classes) and language constructs that can be segmented into meaningful spans for learning purposes; however, it lacks clarity due to the presence of non-standard characters like '03d'."}}
{"raw": "This property is read-only:\nNumber 03d Countercount [inherited] The current count value for this counter. Default = 0. This property is read-only:\nCountMode 93d", "type": "mixed", "id": {"id": "64b34ec5-eed2-4532-875d-6a29412cbdcc"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of property descriptions and values, with clear span boundaries between them that can be used for training on both syntax (code) patterns as well as semantic understanding in natural language text. However, the presence of repeated lines may slightly reduce its utility by introducing redundancy into learning examples. / Contains both readable text and structured data (properties with values), which can help the model learn span segmentation in a context that includes programming concepts alongside descriptive language. / The segment contains both a descriptive text and programming-like syntax, with clear span boundaries for \"read-only\" properties in different contexts (natural language vs. technical notation). It represents valuable patterns of code documentation alongside natural descriptions which can help the model learn diverse spans across domains. / Contains both readable text and structured elements (properties, values) that can be segmented into meaningful spans for learning purposes. / The segment contains a mix of descriptive text and technical terms related to programming properties, which can help the model learn span segmentation in both contexts."}}
{"raw": "contents of the bound depth and color buffers. Note the following usage constraints of this node: 1) If both a color and depth surface is bound, then they must be of 'matching dimensions 2) At least one of render surface and render_depth_surface must non-null:\nPublic Member Functions", "type": "code", "id": {"id": "d5622752-a05b-443b-bc72-8adaaa47a8e0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical documentation with clear constraints and function descriptions, which are valuable for learning span segmentation in both the context of programming language constructs (code) as well as natural language explanations about usage rules. / Clear structured elements with constraints and function descriptions suitable for span segmentation in programming context. / Clear structure with well-defined constraints and public member functions typical for programming documentation, suitable for learning span segmentation in a coding context. / Clear structured elements with constraints and function descriptions, representing valuable patterns for learning span composition in both technical documentation (natural language) and programming constructs (code). / Clear structured elements with constraints and function descriptions suitable for span segmentation in programming context."}}
{"raw": "03d. WorldViewProjection TransposeParamMatr ix4 Class Reference\nInherits 03d ParamMatrix4: List of all members_\nDetailed Description\ntype of ParamMatrix4 that supplies the current world view projection transpose matrix at render time. Public Member Functions\nbool bind (Param source_param) unbindInput unbindQutput Param destination_param) unbindOutputs bool isAClassName (String class_ name)\nPublic Attributes", "type": "code", "id": {"id": "3c479642-c0ae-4230-965b-b02b127da617"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of class names, method signatures and descriptions which can be segmented into meaningful spans for learning span composition in both programming context (code) and descriptive text elements related to software documentation. / Clear structure with identifiable spans like class names, function signatures, and attribute lists suitable for training a span-aware model on programming constructs. / Clear structure with identifiable spans such as class names, function signatures, and attribute lists suitable for span segmentation learning in a coding context. / Clear structure with identifiable spans like class names, function signatures and attributes; well-suited for learning span segmentation in programming contexts. / Clear structure with identifiable spans like class names, function signatures and attributes; well-suited for learning span segmentation in programming context."}}
{"raw": "If you really want to do so, here is a sample configuration\n<plugin>\n<artifactId>maven-surefire-plugin</artifactId>", "type": "mixed", "id": {"id": "2ffcbeaa-e8a2-44a7-a0a8-30a4eb2f7fa9"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear separation between configuration settings and XML-like tags, representing a valuable pattern for learning span segmentation in both markup language syntax (code) and descriptive text (natural). / Clear separation of configuration block and descriptive text; spans can be identified as <plugin> tag, artifact ID, etc.; useful for learning span composition in both markup language (XML) elements and natural descriptions. / The segment contains a clear mix of configuration markup and plain text, with identifiable spans for both the descriptive part (\"If you really want to do so\") and the XML-like structure used in configurations (e.g., \"<plugin>\", \"maven-surefire-plugin\"). This provides valuable patterns that can help learn span segmentation across different content types. / Clear separation of configuration (code) and explanatory text; useful for learning span segmentation in both domains. / Clear separation of configuration (code) and descriptive text; spans identified as <plugin> tag, artifact ID, plugin name. Well-formed for training purposes with valuable patterns in span composition between code elements and natural language description."}}
{"raw": "Counter countMode [inherited] The current count mode for this counter: Default = CONTINUOUS.", "type": "mixed", "id": {"id": "c9d75874-b55e-4066-b0eb-49e8cd9add7a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear spanable elements like \"countMode\", \"[inherited]\", and the phrase indicating default value settings which are useful for learning both code structure and natural language descriptions in technical contexts. / The segment contains both a descriptive phrase and programming-like syntax, which can help the model learn to distinguish between different types of spans in varied contexts. / The segment contains a mix of programming language syntax and documentation, with clear spans for the counter mode description (\"Counter countMode\"), its inheritance status (\"inherited\"), default value (\"Default = CONTINUOUS.\"), which are valuable patterns to learn span composition in both code context. / The segment contains a mix of programming language syntax and documentation, with clear spanable elements like \"Counter countMode\", \"[inherited]\", and the phrase indicating default value settings for counters in code context. / The segment contains a mix of programming language syntax and documentation, with clear spans for the counter mode description (\"Counter countMode\"), its inheritance status (\"inherited\"), default value (\"Default = CONTINUOUS.\"), which are valuable patterns to learn span segmentation in both code constructs (e.g., \"countMode [inherited]\") and natural descriptions."}}
{"raw": "L .unbindOutput Param destination_param [inherited] Breaks a specific param-bind output connection on this param:", "type": "mixed", "id": {"id": "08152dfe-18f2-4a54-8ba7-c65263bb4b01"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear delimiters for potential spans like function names (\"unbindOutput\"), parameters (\"destination_param\"), and comments indicating inheritance (\"[inherited]\"). It represents valuable patterns in both code structure (function definition) and natural language explanation. / The segment contains a mix of programming language syntax and documentation, with clear delimiters for potential spans (\"L .unbindOutput\", \"Param destination_param [inherited]\", etc.). It is clean but lacks context or complete sentences that would be beneficial in training an encoder. / The segment contains a mix of programming language syntax and documentation, with clear structure for span segmentation (e.g., function name \"unbindOutput\", parameters). It is clean but lacks context to fully assess its training utility without additional examples. / The segment contains a mix of programming language syntax and documentation, with clear boundaries for spans like \"unbindOutput\", \"[inherited]\", etc., which are valuable patterns to learn span segmentation in both code constructs and natural descriptions. / The segment contains a mix of programming language syntax and documentation, with clear boundaries for spans such as \"unbindOutput\", \"[inherited]\", which can be useful in learning span segmentation across different contexts."}}
{"raw": "Array getRenderNodesInTree Array getRenderNodesByNamelnTree (String name Array getRenderNodesByClassNamelnTree (String class_name) Param createParam (String param name, String param_type_name) Param getParam (String param name) bool removeParam Param param) copyParams (ParamQbject source_param_object) bool isAClassName (String class_name)\nPublic Attributes\nRenderSurface renderSurface RenderDepthStencilSurface renderDepthStencilSurface Number priority bool active RenderNode parent Array children", "type": "mixed", "id": {"id": "a544b477-dd77-4236-a280-ea4eb8e80e8f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and method signatures, which are clear structures for span segmentation; however, it lacks context or coherence as standalone content. / The segment contains a mix of programming constructs and comments, with clear structure for span segmentation; however, it lacks context which is essential to fully understand the purpose or function in its entirety. It represents valuable patterns but could benefit from additional surrounding text that provides clearer meaning within natural language contexts. / Contains both structured programming elements and attributes, representing valuable patterns for learning span composition in a tokenizer-free context. / The segment contains a mix of function names, parameters and attributes which can be segmented into meaningful spans for learning span composition in both programming context (code) and descriptive text elements (natural language). / The segment contains a mix of programming constructs and method signatures, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to inconsistent formatting (e.g., \"getRenderNodesInTree\" vs. \"Array getRenderNodesInTree\")."}}
{"raw": "03d. ViewParamMatrix4 Class Reference\nInherits 03d ParamMatrix4\nList of allmembers\nDetailed Description\ntype of ParamMatrix4 that supplies the current view matrix at render time. Public Member Functions\nbool bind (Param source_param) unbindInput unbindQutput Param destination_param) unbindQutputs bool isAClassName (String class_ name)\nPublic Attributes\nMatrix4 value\nbool updatelnput bool readOnly Param inputConnection Array outputConnections String name Id clientld String className", "type": "code", "id": {"id": "5961e24f-6793-4225-9718-937447de910e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans like class names, member functions and attributes; well-suited for learning span segmentation in programming context. / Clear structure with identifiable spans like class names, member functions and attributes; well-suited for learning span segmentation in programming context. / Clear structure with public member functions and attributes, representing valuable patterns for learning span composition in programming context. / Clear structure with meaningful spans, including class references and member functions; well-suited for learning span composition in programming contexts. / The segment contains a mix of class reference documentation with clear structured elements like member functions and attributes, which are suitable for learning span segmentation in both programming contexts (code) and descriptive text (natural language)."}}
{"raw": "Param unbindInput [inherited] Breaks any input connection coming into the Param:\n03d. Param unbindOutput Param destination_param [inherited] Breaks a specific param-bind output connection o this param:", "type": "mixed", "id": {"id": "6eeb74c8-2564-405c-b26c-02bf1ae9db48"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and syntax resembling programming language constructs, which can be useful for learning span segmentation in both contexts. However, the clarity could improve with better formatting or separation between code-like elements (e.g., \"Param unbindInput\") from natural descriptions (\"Breaks any input connection coming into\"). / The segment contains a mix of technical terms and structured commands that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts (code) and instructional language (natural). However, the clarity could improve with better formatting or separation between code-like structures. / The segment contains both programming language syntax and comments, which can help the model learn span segmentation in a context that includes human-readable explanations alongside technical constructs. However, it lacks clarity due to missing punctuation or clearer separation between code elements; thus it's not ideal but still valuable for training purposes. / The segment contains a mix of technical terms and syntax resembling programming language constructs, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typographical errors (\"Param unbindInput\" should likely be \"Parameter unbind Input\"). / The segment contains a mix of technical terms and structured commands that can be segmented into meaningful spans, such as \"Param unbindInput\" or \"[inherited]\". It is clean but lacks context for full comprehension; however, it includes valuable patterns like parameter names followed by actions."}}
{"raw": "Parameters: render_node RenderNode to start dumping from: opt_prefix Optional prefix for indenting: 03djs.dump.dumpShape Io3d Shape shape string opt_prefix Given a shape dumps its name, all the Params and Primitves on it. Parameters: shape Shape to dump. opt_prefix Optional prefix for indenting: 03djs.dump.dumpStackTrace", "type": "mixed", "id": {"id": "fe4dbce2-fd57-4256-97f7-9821fc628991"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of parameter descriptions and programming-related terms, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typos (\"dumpShape\" vs \"dumpStackTrace\") that may confuse training data quality. / The segment contains a mix of parameter descriptions and programming-related terms, which can help the model learn span segmentation for both human-readable text (natural language) and technical constructs typical in software documentation or code comments. However, it lacks coherence as it's not an example sentence but rather part of API-like function signatures with parameters that are hard to parse without context. / The segment contains a mix of parameter descriptions and programming-related terms, which can help the model learn span segmentation for both technical documentation (natural language) and coding constructs (code). Despite some repetition (\"opt_prefix\"), it maintains structural clarity with identifiable spans like \"Parameters:\", \"shape\", etc. / Contains both structured programming parameters and descriptions, representing valuable patterns for learning span segmentation in a mixed context. / Contains both structured parameters and descriptions, useful for learning span segmentation in a mix of contexts."}}
{"raw": "function(): void onFinished Creates a loader that is tracked by this loader so that when the new loader is finished it will be reported to this loader;\nParameters: onFinished Function to be called when everything loaded with this loader has finished Returns: ! o3djsloader_Loader; The new Loader:", "type": "mixed", "id": {"id": "c7f65737-e4fb-4d34-a534-4ac0618c5d3b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; includes both function definition and parameters, representative of programming patterns. / Contains both programming constructs and comments, showing clear span segmentation opportunities for a tokenizer-free model. However, the presence of non-standard characters (e.g., \"o3djsloader_Loader\") may affect clarity slightly but still retains compositional value as it represents code patterns with embedded natural language explanations. / Contains both structured programming constructs and descriptive text, providing diverse examples for span segmentation in a combined context. / Contains both programming constructs and comments, with clear span segmentation opportunities for learning function definitions and parameters in a coding context. / Contains both functional descriptions (natural language) and programming constructs, which can help the model learn span segmentation in a diverse context. However, it lacks clarity due to missing punctuation or clearer separation between code elements; minor adjustments could improve its utility as training data."}}
{"raw": "Source 03djs/debugis\nConstructor o3djs_debug DebugLineGrou(debugHelper; root)\nPublic Member Functions ! o3djsdebug debugLine addLine(opt_start, opt_end, opt_color)", "type": "mixed", "id": {"id": "6eb29ef3-1df9-446b-a2d5-f99c93883394"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear span segmentation between function names, parameters and comments; represents a mix of programming constructs useful for learning tokenizer-free encoding in both syntax (code) and semantics (natural language descriptions). / Contains both programming constructs and comments, showcasing span segmentation in a hybrid context. / Clear span segmentation between function names, parameters and comments; represents both programming constructs (code) with embedded documentation-like structure. / Clear span segmentation between function names, parameters and comments; represents both programming constructs (code) with embedded documentation-style language. / Clear function/method signature with identifiable spans for training purposes. Well-formed and representative of programming constructs."}}
{"raw": "Number 03d Counter_end [inherited] The end count for this counter; Default = 0.", "type": "mixed", "id": {"id": "6f359ab1-0b4a-4af0-a301-2cfa2a1b273c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning counter-related span composition in programming contexts. / Contains a mix of numerical, textual elements with clear structure suitable for span segmentation; represents both programming context and documentation style. / The segment contains a mix of numbers, identifiers (e.g., \"03d\"), and comments that are typical in programming contexts; it has clear structure for span segmentation with identifiable spans like \"[inherited]\", which can be useful to learn from. / The segment contains a clear mix of numerical values, identifiers (e.g., \"03d\"), and descriptive text (\"Counter_end [inherited]\"). It represents valuable patterns for learning span segmentation in both code-like structures with labels like \"[inherited]\" as well as natural language descriptions. / The segment contains a mix of numerical values, identifiers (e.g., \"Number\", \"03d\"), and descriptive text (\"Counter_end [inherited]\"). It shows clear structure with potential spans for learning ('Number', '03d Counter_end') as well as code-like elements."}}
{"raw": "Parameters:\ndestination_param param to unbind. 03d. Param unbindOutputs [inherited] Breaks all param-bind output connections on this param. Member Data Documentation\nString 03d ObjectBase_className", "type": "mixed", "id": {"id": "d6e004a7-3e91-405f-94be-d1822038e440"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of parameter descriptions and programming-related terms, which can help the model learn span segmentation in both contexts. However, it lacks coherence as an isolated example for training purposes due to its fragmented nature. / The segment contains a mix of parameter descriptions and object class names, which are structurally clear for span segmentation; however, it lacks context or examples that would improve its training utility. / The segment contains a mix of parameter descriptions and object class names, which can be segmented into meaningful spans for learning span composition in both programming contexts (code) and documentation styles (natural language). However, the lack of context makes it less ideal as training data compared to more complete examples. / The segment contains a mix of parameter descriptions and programming-related terms, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typographical errors (\"unbind\", \"param-bind\") that may confuse training data interpretation. / The segment contains a mix of parameter descriptions and object class names, which can be segmented into meaningful spans for training purposes; however, it lacks context to fully understand the usage patterns in natural language or code constructs."}}
{"raw": "Member Function Documentation\nbool 03d.Param.bind\nParam source_param\n[inherited]", "type": "mixed", "id": {"id": "6ca5e4d9-4147-4ee3-a70f-b3a086cd6c49"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear mix of programming language syntax and documentation, with identifiable spans for both function names (\"03d.Param.bind\") as well as descriptive text elements like \"Member Function Documentation\" which are useful patterns to learn span segmentation in code context. / The segment combines a function name with parameters, representing both programming constructs and documentation language; it's clean for training purposes. / The segment contains a clear mix of programming language syntax and documentation, which is valuable for learning span segmentation in both contexts. / The segment contains a clear structure with identifiable spans such as member function documentation, method name (\"03d.Param.bind\"), and parameters (source_param). It represents valuable patterns for learning span segmentation in both natural language descriptions of code elements ('natural') and the actual programming constructs ('code'). / The segment contains a clear mix of programming language syntax and documentation, with identifiable spans for both function names (\"03d.Param.bind\") as well as descriptive text (\"Member Function Documentation\"). It is cleanly formatted which makes it suitable training data that can help the model learn to distinguish between code constructs (spans) like identifiers or keywords from natural-language descriptions."}}
{"raw": "Member Function Documentation\nbool 03d. Param bind Param source_param [inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from: Passing in null will unbind any m parameter currently bound.", "type": "mixed", "id": {"id": "d994b1de-a945-4daf-843b-b238355c5a4e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation language and programming concepts, with clear structure for span segmentation (function name, parameters). It is coherent but lacks context to fully understand the function's usage in code or natural language explanation. / The segment contains a mix of documentation language and programming concepts, with clear references to parameters (\"Param\", \"source_param\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / The segment contains a mix of documentation (natural language) and programming concepts, with clear spans for member functions, parameters descriptions which are useful patterns to learn span segmentation in both contexts. / The segment contains a mix of descriptive text and technical terms that can be segmented into spans representing function documentation, parameters description (natural language), and programming constructs or references to them (code). It is clean but lacks context for full comprehension without additional examples. / The segment contains a mix of documentation (natural language) and programming concepts, with clear structure for span segmentation like function names (\"Member Function\"), parameters (\"source_param\", \"Directly binds two Param elements\"), conditions (\"compatible with this parameter:\"), actions (\"Passing in null will unbind any m parameter currently bound.\"), making it valuable training data."}}
{"raw": "Register a new Linker instance with the compiler The name attribute must be a valid Java identifier and is used to identify the Linker in <add-linker> tags It is permissible to redefine an already-defined Linker by declaring a new <define-linker> tag with the same name: Linkers are divided into three categories, PRE, POST, and PRIMARY Exactly one primary linker is run for a compilation.", "type": "mixed", "id": {"id": "e31831ff-da0d-4b6e-b8f9-24af97b7d086"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains both structured programming concepts (like \"Linker instance\", \"<add-linker>\", and categorization into PRE, POST) as well as descriptive text (\"Register a new Linker instance with the compiler\"). It has clear structural elements that can be segmented meaningfully for training purposes. / The text contains both programming concepts and documentation, with clear spanable elements like \"Linker instance,\" \"<add-linker> tags,\" and categorization terms (\"PRE\", \"POST\", \"PRIMARY\"). It is coherent for training purposes but may require additional context to fully understand the domain-specific patterns. / The segment contains both structured programming concepts (like defining a Linker instance) and descriptive text, providing diverse patterns for span segmentation in the context of compiler configuration documentation. / The segment contains both structured programming concepts and language, with clear spanable elements like tags (<add-linker>, <define-linker>), attributes (name attribute must be a valid Java identifier) and code constructs (\"Linkers are divided into three categories\", \"Exactly one primary linker is run for a compilation\"). It represents valuable patterns of mixed content. / The segment contains both structured programming concepts and descriptive text, providing a rich context for learning span segmentation in diverse contexts."}}
{"raw": "modify_operator PLUS PLUS MINUS MINUS\nexpression statement expression SEMI\ncompound statement LCURLY init declarator list SEMI T CONST ) ? vector type_specifier init declarator list SEMI T CONST ? scalar type specifier init declarator list SEMI struct definition init declarator list ) ?", "type": "code", "id": {"id": "fc4a8198-2d7b-4157-86a2-9a59aaff951c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured patterns of operators and statements suitable for span segmentation in programming constructs. / Clear structure with identifiable spans like operators, keywords (PLUS, MINUS), and language constructs (expression, statement). Well-formed for training purposes in a programming context. / Clear structured patterns of operators and expressions, representative for programming language syntax. / Clear syntactic structure with identifiable spans for operators, expressions, and declarations in programming context. Well-suited to learn span segmentation patterns specific to coding constructs. / Clear, structured programming constructs with identifiable spans for learning."}}
{"raw": "currently existing params with the same name. Parameters:\nsource_param_object param object to copy params from: Param 03d.", "type": "mixed", "id": {"id": "64a7cfc0-bebc-4d5f-8452-731855f162d7"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and parameter names, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks context for meaningful span segmentation due to missing surrounding code or explanation. / The segment contains a mix of descriptive text and parameter notation, which can be useful for learning span segmentation in both contexts. However, the lack of punctuation may affect clarity slightly. Overall it is coherent but could benefit from minor adjustments to improve readability without losing its compositional value. / The segment contains a mix of structured language and technical terms that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both domains. It is clean but lacks context to fully evaluate its utility as training data. / The segment contains a mix of programming-like syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typos (\"Param\" instead of \"parameter\") and missing punctuation (e.g., periods). / The segment contains a mix of descriptive text and parameter names, which could help the model learn to distinguish between different types of spans in both contexts. However, it lacks context for meaningful span segmentation due to missing surrounding code or documentation structure."}}
{"raw": "Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from. Passing in null will unbind any m parameter currently bound. Returns:\nTrue if the bind succeeded. bool 03d.", "type": "mixed", "id": {"id": "a411657b-7b9a-4544-ac67-a75c4b61e442"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both structured programming concepts (like parameter binding) and descriptive text, providing a good mix of patterns for span segmentation in the context of software documentation or API descriptions. / The segment contains a mix of descriptive text and technical terms related to parameter binding, which can help the model learn span segmentation in both domains. However, it lacks clarity on what \"compatible with this parameter\" means or examples that could improve learning utility. / The segment contains both programming concepts (binding parameters, compatibility checks) and descriptive text (\"The source must be compatible with this parameter\"), which can help the model learn span segmentation in a context that includes code constructs alongside natural language explanations. / The segment contains both structured programming language elements (e.g., parameters, bindings) and descriptive text that can help the model learn span segmentation in a context where multiple content types are present. However, it lacks clarity due to potential typos (\"03d\" instead of \"True\") which should be cleaned up for optimal training utility. / The segment contains a mix of programming concepts and documentation, with clear references to parameters (\"source_para\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks explicit examples or varied patterns which could improve its utility as training data."}}
{"raw": "Returns:\nTrue if the bind succeeded.", "type": "mixed", "id": {"id": "f1b14090-cc79-4071-b181-f92ef45ba753"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear function signature with both descriptive text and programming language elements, which is valuable for learning span segmentation in mixed content types. / Clear boolean expression and function signature, representing a common pattern in both documentation (natural language) and programming languages (code). / Clear boolean expression with a function-like structure that includes both English and programming language elements, useful for learning span segmentation in multilingual contexts. / Clear span for a function's return value, representing both language and programming constructs. / Clear indication of a function's return value, combining both programming logic and descriptive text for span segmentation."}}
{"raw": "transform is the Transform node immediately above the DrawELement being rendered, and draw_ context is the DrawContext associated with the material's DrawList through the current TreeTraversal: X means matrix multiplication, inverse ( ) is the matrix inverse of its argument, and transpose () is the matrix transpose of its argument.", "type": "mixed", "id": {"id": "6e02fe6a-6213-43f8-a4f0-251715aece8b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and mathematical notation, which can help the model learn span segmentation for both types of content. It is clear but lacks context to fully understand its compositional value in training. / The segment contains a mix of programming concepts and mathematical notation, with clear references to matrix operations that can be segmented into meaningful spans for training purposes. It is clean but lacks context which might affect its utility as standalone data. / The segment contains a mix of programming concepts and mathematical notation, with clear references to objects like Transform nodes that can be segmented into meaningful spans for learning purposes. It is clean but may require domain-specific knowledge due to the inclusion of technical terms related to graphics rendering or matrix operations in computer science contexts. / Contains a mix of programming concepts and mathematical notation, with clear spanable elements like \"Transform node,\" \"DrawContext,\" etc., suitable for learning complex spans in both domains. / The segment contains a mix of programming concepts and mathematical notation, providing clear examples for learning span segmentation in both contexts."}}
{"raw": "count Count at which to call callback counter_callback Callback to call at given count: 03d.Counter.advance Number advance amount Advances the counter the given amount: The actual amount advanced depends on the forward and multiplier settings.", "type": "mixed", "id": {"id": "98b1b5f8-03d1-4363-b751-f86e2facc838"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of programming concepts and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to its informal structure (\"03d.Counter.advance\" should be \"Counter.advance\"). Clean-up could improve training utility. / The segment contains a mix of programming concepts and language, with clear spanable elements like function names (\"count\", \"counter_callback\"), parameters (\"at which to call callback counter_callback Callback...\"), constants (e.g., '03d'), methods ('advance', 'Number advance amount Advances the counter the given amount:'), variables ('the actual amount advanced depends on the forward and multiplier settings'). It is clean, coherent for training purposes. / The segment contains a mix of programming concepts and descriptions, which can help the model learn span segmentation for both technical terms (like \"counter_callback\") and numerical values (\"03d.Counter.advance\"). It is clean but lacks context or examples that could improve its training utility. / The segment contains both programming concepts and language, with clear spanable patterns like function names (\"count\", \"counter_callback\"), parameters (e.g., \"Number advance amount\"), and descriptions of behavior that can be segmented into meaningful spans for a tokenizer-free model to learn. / The segment contains both programming concepts and their explanations, which can help the model learn to distinguish between different types of spans in a technical context."}}
{"raw": "The image can be in TGA, JPEG, PNG, or DDS format: Using a texture Sampler; you set a number of states to describe how to apply the texture to the shape.", "type": "mixed", "id": {"id": "e20b31f1-7992-4aba-9078-4dd1d8a67ae9"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming-related terms and descriptions, which can help the model learn span segmentation for a variety of contexts. / The segment contains both descriptive language and technical terms related to graphics programming, which can help the model learn span segmentation for a variety of contexts including descriptions (natural) combined with specific syntax or terminology used in code-like structures. / The segment contains a mix of programming concepts and file formats, which can be segmented into meaningful spans such as \"TGA\", \"JPEG\", etc., for learning purposes. It is clean but lacks context that could improve its utility in training an encoder like X-Spanformer. / The segment contains a mix of programming concepts (texture formats, Sampler) and descriptive language (\"The image can be in TGA...\"), which provides diverse patterns for span segmentation across both domains. / Contains both descriptive text and programming-related terms, useful for learning span segmentation in a context that includes technical language."}}
{"raw": "setFullscreenClickRegion (10 _ clientHeight texture.height 10 , texture.width, texture.height , getFullscreenModeId () ) The call for a resize event receives an event object that contains the dimensions of the window you're drawing into and a flag that indicates whether youre in full-screen mode.", "type": "mixed", "id": {"id": "70ef57d3-350e-4b02-b7c6-8da234594fda"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming constructs and comments, demonstrating a mix of language elements suitable for span segmentation learning. / The segment contains a mix of programming language syntax and comments, with clear spanable elements like function calls (setFullscreenClickRegion) and variable assignments (_clientHeight). It is clean but lacks context for full comprehension without surrounding code or documentation. / The segment contains a mix of programming logic and comments, with clear structure for span segmentation; however, it lacks context to fully understand the purpose or function within its domain. / The segment contains a mix of programming logic and comments, with clear structure for span segmentation; however, it lacks context to fully understand the function's purpose or usage in different scenarios. / The segment contains both programming logic and comments, providing a good example of span segmentation in the context of software development documentation."}}
{"raw": "ParamObject:getParam String param name Searches by name for a Param defined in the object:\n[inherited]\nParameters:\nparam_ name Name to search for: Returns:\nThe Param with the given name, or null otherwise.\nbool 03d. ObjectBase.isAClassName String class name [inherited] Takes the name of a class as an argument, and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "1b749a24-93cc-4962-afdc-36d64752f8db"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation (natural language) and programming concepts, with clear structured elements like function names (\"ParamObject:getParam\"), parameters descriptions (\"param name\", \"class name\") that can be segmented into meaningful spans for training purposes. / The segment contains a mix of programming language syntax and documentation, with clear structured elements like function names (\"ParamObject:getParam\"), parameters (e.g., \"String param name\", \"bool 03d.\"), return types, descriptions that are meaningful for span segmentation. It is clean but lacks context to fully assess its training utility without additional examples or surrounding text. / The segment contains a mix of documentation-style text and programming-like expressions, with clear spanable elements such as function names (\"getParam\"), parameter descriptions (e.g., \"param name\", \"class name\"). It is clean but lacks context for full comprehension without additional code examples. / The segment contains both structured programming concepts and documentation language, which can help the model learn span segmentation in a diverse context. However, it lacks clarity due to formatting issues like \"param_ name\" instead of just \"name\". Clean up for better training utility. / The segment contains a mix of documentation (natural language) and programming concepts, with clear spanable elements like function names (\"getParam\"), parameter descriptions (\"param name\", \"class name\") that can help the model learn both natural text patterns as well as code-related structures."}}
{"raw": "[inherited]\nThis function will fail if the param does not exist on this ParamQbject or if the param is unremovable. Parameters:\nparam param to remove.", "type": "mixed", "id": {"id": "9774b033-c263-4f95-9252-37734e2b4b92"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, with clear markers for inherited properties (\"[inherited]\") that can be used to train the model on span segmentation in both natural text (comments) and code constructs. / The segment contains a mix of programming concepts (function, parameters) and comments/documentation style text (\"This function will fail...\"). Clear spans can be identified for both technical terms like \"param\" or code constructs such as \"[inherited]\" which are useful patterns to learn. / The segment contains a mix of programming terminology and documentation, with clear spans for the function description (\"This function will fail if...\"), parameter explanation (\"param to remove.\"), and list item (\"Parameters:\"). It is clean but lacks context or examples that could improve its training utility. / The segment contains a mix of English prose and programming-like syntax, with clear markers for inherited functions (\"[inherited]\") that can be segmented into meaningful spans such as \"This function\", \"[param to remove]\", etc., which are useful patterns in span segmentation. / The segment contains a mix of programming language syntax and comments, with clear markers for inherited functions (\"[inherited]\") that can be used to train the model on recognizing span boundaries in code context combined with natural language explanations."}}
{"raw": "String 03d EffectParameterInfo semantic The semantic of the parameter: This is always in UPPERCASE. This property is read-only:\n03d.", "type": "mixed", "id": {"id": "0b4cc099-eccc-474a-95db-d7262aa69594"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of uppercase words and phrases that could be useful for learning span segmentation, especially in recognizing patterns like constants or specific identifiers (e.g., \"String\", \"EffectParameterInfo\"). It is clean but lacks context to fully understand its utility as training data. / The segment contains a mix of uppercase text and comments, with clear semantic markers for span segmentation; however, it lacks context which may affect training utility. / The segment contains a mix of uppercase text and comments, which could be useful for learning span segmentation in both programming contexts (e.g., constants) and documentation styles. However, the clarity is somewhat compromised by unclear formatting (\"String 03d EffectParameterInfo semantic\"). / The segment contains a mix of uppercase text, which could be interpreted as an identifier or constant in programming contexts (\"String\", \"03d EffectParameterInfo\"), and descriptive English prose explaining its usage (semantic property description). This combination provides both code-like patterns for span segmentation learning. / The segment contains a mix of uppercase text and comments, which could be useful for learning span segmentation in both programming contexts (e.g., constants) and documentation styles. However, the clarity is somewhat compromised by unconventional formatting (\"String 03d EffectParameterInfo semantic\")."}}
{"raw": "NamedQbiect: Array 03d Param outputConnections [inherited] The output connections for this param:\nThis property is read-only\nbool 03d Param readOnly [inherited] If true the param is read only: Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only: bool 03d", "type": "code", "id": {"id": "f10a2896-cb58-4074-9836-45034490a276"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements with meaningful spans; well-suited for learning span composition in programming context. / Clear structured elements with meaningful spans; clean and well-formed for training purposes, representing valuable patterns in span composition. / Clear structured elements with identifiable spans; well-suited for learning span composition in programming context. / Clear structured elements with meaningful spans; represents valuable patterns for learning span composition in programming context. / Clear, structured programming constructs with meaningful spans; well-suited for learning span segmentation in a coding context."}}
{"raw": "Detailed Description data type representing a 3d direction A Vector? is represented in JavaScript by an array containing 3 numbers:", "type": "mixed", "id": {"id": "d118a3e0-76f7-406c-a333-eb232e3c7775"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related content, with clear references to both language (JavaScript) constructs (\"array containing 3 numbers\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / Contains a clear description with both technical (code-related) and explanatory language elements, suitable for learning span segmentation in diverse contexts. / Contains both descriptive text and a JavaScript array example, providing clear span segmentation opportunities between language elements and coding constructs. / Contains a mix of descriptive text and programming-related content, with clear structure for span segmentation between explanation (natural language) and JavaScript array representation (code). / The segment combines both descriptive text and a JavaScript array representation, providing clear examples of span segmentation in different contexts (natural language for description; structured data format). It is clean but lacks context or additional code structure to improve its training utility further."}}
{"raw": "IMPORTING YOUR APPLICATION INTO ECLIPSE\nCreate an Eclipse project for your source, if you haven't already done so, by selecting File > New > Java Project.", "type": "mixed", "id": {"id": "aac1e2e4-ee88-42fc-86e3-f1aa93eec7dc"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear instructional steps with identifiable actions and outcomes, suitable for training a span-aware model on structured text. / Clear instructional steps with identifiable spans for actions and outcomes, suitable for learning structured commands in a non-code context. / The segment contains a mix of instructions and menu navigation, with clear structure suitable for span segmentation; it includes both action phrases (\"Create an Eclipse project\") and UI elements (\"File > New > Java Project\"), representing valuable patterns in software development workflows. / The segment contains a mix of instructions (natural language) and actions related to software development tools, which can help the model learn both types of span segmentation effectively. It is clear in structure with identifiable spans such as \"IMPORTING YOUR APPLICATION INTO ECLIPSE\", \"Create an Eclipse project for your source\" etc., representing valuable patterns that are cleanly composed within a mixed context. / The segment contains a mix of instructions and menu options that can be segmented into meaningful spans, such as \"IMPORTING YOUR APPLICATION INTO ECLIPSE\", \"Create an Eclipse project for your source...\", which are clear commands or steps in the context; it's clean but lacks variety to represent diverse patterns."}}
{"raw": "The Hello, Cube Textures sample creates a cube with a texture applied to each face.", "type": "natural", "id": {"id": "1fe908a8-0e20-4f55-a1f4-c9e8826e7eeb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with a subject, verb phrase and object; spans can be identified as \"Hello,\" (noun), \", Cube Textures sample\" (phrase describing the noun) and so on. Well-formed for training purposes. / Clear sentence structure with identifiable spans for subject (\"The Hello, Cube Textures sample\"), verb phrase (\"creates a cube\"), and object description (\"with a texture applied to each face\"). Well-formed text suitable as training data. / Clear sentence structure with identifiable spans for a cube and its texture, representing valuable patterns in span composition within the context of programming documentation or tutorials. / Clear sentence structure with a subject, verb phrase and object; spans can be identified as \"Hello,\" (noun), \", Cube Textures sample\" (phrase) creating an informative example for span segmentation in the context of programming documentation or tutorials. / Clear sentence structure with a subject, verb phrase and object; spans can be identified as \"Hello,\" (noun), \", Cube Textures sample\" (phrase describing the noun) creating an illustrative example of span segmentation in English prose."}}
{"raw": "Setting Up Two Views The fullscreen_html sample sets up two views, a perspective view (g_ viewInfo) for the 3D teapot scene, and an orthographic view (orthoViewInfo) that is drawn after (that is, on top 0f) the 3D scene.", "type": "mixed", "id": {"id": "22d945cd-b634-4b05-916d-54205b206ae2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of technical terms and phrases that can be segmented into meaningful spans, such as \"Setting Up Two Views,\" \"fullscreen_html sample sets up two views,\" etc., which are useful for learning span composition in both natural language processing (NLP) tasks related to code documentation. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"Setting Up Two Views,\" \"fullscreen_html sample sets up two views,\" etc., which are useful for learning span composition in both natural language processing (NLP) tasks related to code documentation. / Contains both descriptive text and technical terms related to a software context, which can help the model learn span segmentation for different types of content. / Contains both descriptive text and technical terms related to a software context, which can help the model learn span segmentation for different types of content. / Clear distinction between two views and their descriptions, suitable for learning span segmentation in descriptive text."}}
{"raw": "ParamObject copyParams ParamObject source_param_object [inherited] Copies all the params from a the given source_param_object to this param object: Does not replace any currently existing params with the same name.", "type": "mixed", "id": {"id": "c7dfb6da-956b-425f-87d9-e09f2cedbb63"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like terminology, which can help the model learn both span segmentation in human language as well as specific patterns related to coding constructs like parameters (spans). However, it lacks clarity due to grammatical errors (\"a\" instead of \"the\") that could confuse learning. / The segment contains a mix of programming concepts and language, with clear parameters for learning span segmentation in both contexts. / The segment contains a mix of programming concepts and documentation, with clear spanable elements like \"ParamObject\", \"[inherited]\", which are useful for learning how to parse such constructs in both code snippets and accompanying explanations. However, the sentence structure is somewhat awkward (\"a the given source_param_object\" should be corrected), but it still maintains clarity on its own terms as a mixed content type suitable for training purposes. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"copyParams,\" \"source_param_object,\" etc., which are useful for learning span composition in both code context (function/method names) and natural language descriptions. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"ParamObject copyParams\", \"[inherited]\", which are useful for learning span composition in both code-like structures (e.g., function names) and natural language descriptions."}}
{"raw": "Param updateInput [inherited] If true, this param will make sure its input param is up to date when using it as a source.", "type": "mixed", "id": {"id": "418cbb7b-0370-40fb-bc56-8d7c393fe51f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and a descriptive comment, which can help the model learn to distinguish between different types of spans in an integrated context. / The segment contains both programming language syntax and comments, which can help the model learn span segmentation for different types of content within a single context. / The segment contains both programming language syntax and comments, providing a good mix of structured patterns for learning span segmentation in X-Spanformer. / The segment contains both programming language syntax and a descriptive text, providing examples of span segmentation for different contexts (code constructs like 'param updateInput' alongside the explanatory phrase). It is clean but lacks context to fully understand usage in code or documentation scenarios. / The segment contains both programming language syntax and comments, providing a clear example of span segmentation for parameters in source code with accompanying documentation-style text."}}
{"raw": "rendergraph ViewInfo 03djs.rendergraph createExtraView\n03djs rendergraph ViewInfo viewInfo\no3djsmath Vector4\nopt_viewport opt_clearCol or\n03djsmath Vector4\nnumber\nopt_priority Creates an extra view render graph setup to draw opaque and transparent 3d objects based on a previously created view. It uses the previous view to share draw lists and to set the priority Parameters: viewInfo ViewInfo returned from createBasicView: opt_viewport viewport settings for view.", "type": "mixed", "id": {"id": "a27e938d-9c3a-4183-b98a-8805a56b9ba0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and comments, with clear span boundaries for different elements like function calls (rendergraph ViewInfo), variable declarations (03djs rendergraph ViewInfo viewInfo), object instantiations (o3djsmath Vector4), conditional expressions ('opt_viewport opt_clearCol or'), numerical values ('number'), descriptive text ('Creates an extra view render graph setup to draw opaque and transparent 3d objects based on a previously created view.'), parameters, comments explaining the purpose of code elements. This diversity in structure provides valuable examples for learning span segmentation across both natural language descriptions within programming context and actual coding constructs. / The segment contains a mix of programming constructs and comments, with clear span boundaries for each construct (e.g., function calls like `rendergraph ViewInfo`, variable declarations such as `Vector4`). It is clean but lacks context to fully understand the code's purpose. / Contains a mix of programming constructs and comments, with clear span segmentation opportunities in both the function call syntax (\"rendergraph ViewInfo\") and descriptive text (\"opt_viewport viewport settings for view\"). However, some parts like \"03djs rendergraph\" are ambiguous. / The segment contains a mix of programming constructs and comments, with clear spanable elements like function calls (rendergraph ViewInfo), variable names ('03djs', 'opt_viewport'), parameters descriptions (\"viewInfo\", \"viewport settings for view\"), which are valuable patterns to learn. However, it lacks coherence due to the presence of unrelated fragments such as a natural language comment and an incomplete mathematical vector declaration that may confuse learning processes if not cleaned up or contextualized properly in training data. / The segment contains a mix of programming constructs and comments, with clear span boundaries for both syntax elements (e.g., function calls) and descriptive text that can aid in learning the composition rules for spans across different content types."}}
{"raw": "subdivisionsAxis number of steps around the sphere. subdivisionsHeight number of vertically on the sphere. opt_matrix A matrix by which to multiply all the vertices.", "type": "mixed", "id": {"id": "b65befab-7703-4b58-826b-d4b597967386"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear spanable phrases related to geometry and matrix operations, useful for learning diverse patterns in both domains. / Contains both programming terms and configuration-like settings, demonstrating clear span segmentation opportunities for a tokenizer-free model in handling diverse content types. / Clear spanable elements with a mix of technical terms and phrases indicating both numerical values (steps, height) for spatial subdivisions on spheres in different contexts (\"subdivisionsAxis\", \"number of steps around the sphere.\", etc.). The segment is clean but lacks context. / The segment contains a mix of programming concepts and terminology, with clear patterns for span segmentation around technical terms like \"subdivisionsAxis\", which can be useful in training the model to understand contextually relevant spans across different domains. / The segment contains a mix of programming concepts and parameters, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to missing context or definitions for terms like \"subdivisionsAxis\" and \"opt_matrix\"."}}
{"raw": "Note that the body of the page contains only a SCRIPT tag and an IFRAME tag: It is left to the GWT application to then fill in all the visual content:", "type": "mixed", "id": {"id": "db377cb5-d24d-47a3-9190-961a16ba44be"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains both HTML tags and a descriptive note, representing valuable patterns for learning span composition in the context of web development documentation. / Clear separation of HTML tags and descriptive text; spans can be identified as 'SCRIPT tag', 'IFRAME tag', and the explanatory phrase, representing both markup language (code) elements with natural descriptions for learning span composition in a web context. / The segment contains both HTML tags and a descriptive text, providing clear examples of span segmentation for web development contexts (natural language + markup). / The segment contains a mix of HTML tags and plain text, with clear structure for span segmentation; it represents valuable patterns in both markup language (code) context and descriptive content (natural). / The segment contains both HTML tags and a descriptive note, which can help the model learn to distinguish between different types of spans in web development context."}}
{"raw": "To configure the plugin to use another naming convention, set the includes plugin parameter\n<plugin>\n<groupId>org _ codehaus mojo</groupId>\n<artifactId>gwt-maven-plugin</artifactId>\n<version>2.5.1</version>\n<configuration>\n<includes>** /CustomPattern* .", "type": "mixed", "id": {"id": "33f68c45-ddc0-434f-a43e-f90330c96e75"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of configuration settings and XML-like syntax, which can be useful for learning span segmentation in both structured data (code) and descriptive text (natural language). However, the presence of underscores instead of spaces may cause parsing issues; this should ideally not occur. / The segment contains a mix of configuration settings and comments, with clear delimiters for spans; however, it lacks context which might be necessary to fully understand the purpose or function within its domain. / The segment contains a mix of configuration settings and naming conventions, with clear delimiters for spans like \"includes\" plugin parameter setting which can be useful in learning span segmentation patterns across natural language descriptions intertwined with code-like elements. / Clear XML-like structure with identifiable spans for configuration settings; good training data for span segmentation in programming contexts. / Contains both structured XML-like configuration and a mix of programming language elements, which can help the model learn span segmentation in different contexts. However, it lacks clarity due to missing closing tags for some spans like `<groupId>` and `</configuration>`."}}
{"raw": "Canvas restoreMatrix Balances a call to saveMatrixO); and removes modifications to matrix since the last save call. It is an error to call this more than previous calls to saveMatrixO:", "type": "mixed", "id": {"id": "823a1984-1674-4e13-9199-8dbe0862bad3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and language, with clear references to functions (`saveMatrixO`), variables (e.g., `restoreMatrix`, `Balances`), and logical constructs that can be segmented into meaningful spans for training purposes. / The segment contains a mix of programming concepts and language, with clear references to functions (`saveMatrixO`) that can be segmented into meaningful spans for training purposes. It is coherent but lacks context which might affect its utility as standalone data. / The segment contains a mix of programming concepts and language, with clear references to functions (`saveMatrixO`, `restoreMatrix`) that can be segmented into meaningful spans for learning purposes in both code context (function names) and natural language explanation (\"It is an error\"). / The segment contains a mix of programming concepts and language, with clear references to functions (`saveMatrixO`, `restoreMatrix`) that can be segmented into meaningful spans for training purposes. It is clean but lacks context which might affect its utility as standalone data; however, it represents valuable patterns in code-related span composition within natural language explanations. / The segment contains a mix of programming concepts and language, with clear references to function calls (\"saveMatrixO\") that can be segmented into meaningful spans for training purposes. Despite the presence of some typos (e.g., \"Balaces\"), it retains its compositional value as an error message related to matrix operations in code context."}}
{"raw": "The user can specify the URL of the texture to use.", "type": "natural", "id": {"id": "306dcbd9-a0eb-43df-881c-dde81d6f9757"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear instruction with a single span for the URL, representing useful pattern in user input instructions. / Clear instruction with a single spanable phrase, good for learning simple command structures in text. / Clear instruction with a single meaningful span (\"The user can specify the URL of the texture to use.\") and good for learning simple command structures in text. / Clear instructions with a single spanable phrase; represents useful patterns for learning text comprehension and extraction in NLP tasks. / Clear instruction with a single spanable phrase, good for learning simple command structures in text."}}
{"raw": "The orthographic view contains the textured rectangle that corresponds to the clickable region for full-screen mode.", "type": "natural", "id": {"id": "dd548d8d-e01d-4f86-8b74-ee9481850419"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with identifiable spans; useful for learning context and composition in text. / Clear sentence structure with identifiable spans; useful for learning context and composition in text. / The segment contains clear, structured elements that can be segmented into meaningful spans such as \"orthographic view,\" \"textured rectangle,\" and phrases describing relationships (\"corresponds to the clickable region for full-screen mode\"). It is clean but lacks context which might affect its utility. / Clear sentence structure with identifiable spans; useful for learning span composition in text. / Clear sentence structure with identifiable spans (e.g., \"The orthographic view,\" \"clickable region for full-screen mode\"). Well-formed and coherent, representing useful patterns in span composition within a descriptive context."}}
{"raw": "Detailed Description\nEffectStreamInfo holds information about the Streams an Effect needs.", "type": "mixed", "id": {"id": "23ea6553-1a06-428d-8e27-e6f73cbe4184"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear description with potential spans for both technical terms (\"Streams\", \"Effect\") and general language, suitable as training data for span segmentation in mixed content. / The segment contains a mix of descriptive text and technical terms that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both domains. It is clean but lacks context or examples to improve its training utility further. / Clear descriptive text with a coherent structure suitable for learning span segmentation in the context of documentation or prose. / The segment contains a mix of descriptive text and technical terms that can be segmented into meaningful spans, such as \"Detailed Description,\" which is clear in its intent to describe something; \"EffectStreamInfo\" could represent both natural language explanation (\"holds information\") combined with code-like terminology. It provides valuable patterns for learning span composition across mixed content types. / Clear descriptive text with a coherent structure suitable for learning span segmentation in the context of documentation or articles."}}
{"raw": "Object   createStandardParams(pack) <static > prepareMaterial(pack, viewInfo, material, opt_effectType)", "type": "code", "id": {"id": "73b7dabd-13b2-4bc3-ba74-9ce787f90607"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear function signature with meaningful spans for learning (Object, createStandardParams, static, prepareMaterial). Well-formed and representative of programming patterns. / Clear function signature with meaningful spans for training; well-formed and representative of programming patterns. / Clear function signature with parameters, representing valuable patterns for learning span composition in programming context. / Clear function signature with meaningful spans for parameter identification and type inference. Well-suited to learn span composition in programming context. / Clear function signature with meaningful spans for training (Object, createStandardParams, static, prepareMaterial). Well-formed and representative of programming patterns."}}
{"raw": "In other words if you have both a specular texture AND a diffuse texture the builder assumes you have 2 TEXCOORD streams This assumption is often false.", "type": "natural", "id": {"id": "fc350570-bc4c-46ba-811b-415a9e4571e6"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with identifiable phrases; useful for learning span composition in English text. / Clear sentence structure with identifiable spans; useful for learning context and compositional patterns in text. / Clear sentence structure with identifiable phrases; useful for learning span segmentation in English prose. / Clear sentence structure with identifiable phrases; useful for learning span segmentation in English text. / Clear sentence structure with identifiable phrases and terms relevant for span segmentation in English prose."}}
{"raw": "VertexInfo.addTriangle number indexl number index2 number index3", "type": "code", "id": {"id": "2d91c95f-cb72-4545-b1ad-a9a3c4ab4a44"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans for triangle indices; clean and representative of programming patterns. / Clear structure with identifiable spans for triangle indices; clean and representative of programming patterns. / Clear structured pattern representing a function call with parameters; valuable for learning span composition in programming contexts. / Clear structure with identifiable spans for triangle indices; clean and well-suited to learning span composition in programming contexts. / Clear structure with identifiable spans for triangle indices; well-suited to learning span composition in programming contexts."}}
{"raw": "The setUpBanner () function creates the orthographic view for the ZD user interface \"layer' This view turns off the clear color flag so that the 3D view remains 0n the screen: It sets the priority for the orthographic view to one greater than that of the perspective view, so that it is drawn after the perspective view (g_ viewInfo): function setupBanner (width, height , viewInfo ) 9 orthoRoot = g_pack.createobject ( ' Transform' ) ; [ [ Create a view for the orthographic display of the fullscreen banner_", "type": "mixed", "id": {"id": "b7443619-6c92-4559-8507-fcba5aad6be3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming functions and comments, with clear structure for learning span composition in both contexts. However, it lacks coherence due to the fragmented nature (missing closing brackets). It should be cleaned up before use as training data. / The segment contains a mix of programming constructs and comments, with clear structure for span segmentation; however, it lacks coherence due to the presence of an incomplete function signature (\"9 orthoRoot = g_pack.createobject ( ' Transform' ) ;\"). / The segment contains a mix of programming functions and comments, with clear structure for span segmentation; however, it lacks coherence due to the presence of HTML-like tags which may confuse training data quality. / The segment contains a mix of programming functions and comments, with clear structure for span segmentation; however, it lacks context which may affect its utility as training data. / The segment contains a mix of programming functions and comments, with clear structure for learning span segmentation in both contexts. However, the presence of non-standard characters (e.g., '9' instead of '9') may affect clarity slightly but is not severe enough to discard it entirely as training data."}}
{"raw": "Canvas rotate Number   degrees Adds a rotation to the current canvas matrix. Parameters:\ndegrees The amount to rotate, in degrees 03d.", "type": "mixed", "id": {"id": "88c3dc03-a86a-40cb-914e-8fbb815f2886"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and numerical values, which can help the model learn to distinguish between different types of spans in both domains. However, there is an issue with formatting (missing space before \"degrees\" should be corrected). / The segment contains a mix of programming parameters and descriptions, with clear span segmentation between the command/function name (\"Canvas rotate\") and its description/purpose (\"Number   degrees Adds...\"). It also includes parameter names (e.g., \"degrees\") which are essential for understanding code semantics. / The segment contains a mix of programming parameters and descriptions, with clear spanable elements like \"degrees\" that can be used to learn the composition between variable names/values (e.g., 'Number', '03d') in code-related contexts within natural language explanations. / Clear structure with identifiable spans; combines both numerical values and descriptive text, representing a useful pattern for learning span composition in the context of programming parameters. / The segment contains a mix of programming parameters and documentation, with clear span segmentation for both the command (\"Canvas rotate\") and its description (parameters explanation). It is clean but lacks context on how to use it in code or further examples that could enhance learning utility."}}
{"raw": "Counter removeCallback Number count Removes a callback for a given count value. [inherited]\nParameters: count Count to remove callback for; Returns: true if there was a callback for that count; false if there was not a callback for that count:\nbool 03d. ParamObject removeParam Param param Removes a Param from a ParamObject:", "type": "mixed", "id": {"id": "7359cb12-4555-4285-80ad-ed68a536d39c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear function signatures and parameter descriptions, ideal for learning span segmentation in programming contexts. / Contains both programming concepts and documentation, with clear spanable elements like function names, parameters descriptions, and return values. / The segment contains both programming concepts and documentation, which can help the model learn span segmentation in a diverse context. However, it lacks clarity due to missing punctuation or formatting that would improve readability for training purposes. / The segment contains both programming concepts and documentation, with clear spanable phrases like \"removeCallback\", function names (\"Count\"), parameters descriptions (e.g., \"count Count to remove callback for\"). It is clean but lacks context on usage or examples which could be beneficial. / Contains both programming concepts and documentation, with clear spanable elements like function names, parameters descriptions, which are valuable for learning patterns in a tokenizer-free context."}}
{"raw": "Element createDrawElement Pack pack, Material material [inherited] Creates a DrawElement for this Element: Note that unlike Shape createDrawElements and Transform createDrawElements this one will create more than one element for the same material.", "type": "mixed", "id": {"id": "9fd33f3c-d4e5-4d83-8dcc-342753570275"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear references to functions (`createDrawElement`, `pack`) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context on the usage or implementation details which could improve its utility as training data. / Contains both programming concepts and language, with clear spanable elements like \"createDrawElement\", \"[inherited]\", etc., useful for learning composition in a mixed context. / The segment contains a mix of programming concepts and documentation, with clear references to methods (createDrawElement) that can be segmented into meaningful spans for learning purposes. It is clean but lacks context on the usage or implementation details which could enhance its utility as training data. / The segment contains a mix of programming concepts and language, with clear references to functions (`createDrawElement`, `pack`) that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context which might affect its utility as training data. / The segment contains a mix of programming concepts and documentation, with clear spanable phrases like \"createDrawElement\", \"[inherited]\", and structured notes that can help the model learn both natural language explanations as well as code-related terminology."}}
{"raw": "For example:\nvar shapes = transform_ shapes;", "type": "code", "id": {"id": "d055cb45-0491-4112-8e45-441fc564961a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with variable declaration and function call, representing valuable patterns for learning span segmentation in programming context. / Clear syntactical structure with identifiable spans for variables and commands, suitable for learning span segmentation in programming context. / Clear structure with variable declaration and function call, representing valuable patterns for learning span composition in programming context. / Clear syntactic structure with variable assignment and function call, representing valuable patterns for learning span segmentation in programming contexts. / Clear structure with variable declaration and function call, representing valuable patterns for learning span composition in programming context."}}
{"raw": "o3djsmath Vector3 opt_end lo3djs math Vector4 opt_color Adds a debug line. Parameters: opt_ start Start position for line. opt_end End position for line. opt_color Color for line. Returns: Io3dis debug debugLine", "type": "mixed", "id": {"id": "967c0686-b237-4d58-87fb-61521ccf19aa"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, with clear parameters for function calls that can be segmented into meaningful spans useful in training span-aware models. However, the presence of typos (\"o3djsmath\" instead of \"OpenGL math\", etc.) may affect clarity slightly but still retains its compositional value as an example of mixed content spanning code and comments. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. However, there are some typos like \"o3djsmath\" instead of \"OpenGL math\", making it less ideal for training purposes but still valuable due to its structural clarity as mixed content. / Contains both programming constructs and parameters, representing valuable patterns for learning span composition in a tokenizer-free context. / Contains both programming constructs and parameters, representing a valuable pattern for learning span segmentation in the context of debugging visualizations. / The segment contains a mix of programming terminology and function-like expressions, which can help the model learn span segmentation in both contexts. However, there are spelling errors (\"o3djsmath\" should be \"OpenGL math\", etc.) that may affect clarity but don't detract significantly from its structural value for training purposes."}}
{"raw": "This must be used from V8 in preference to document-getElementById because we do not currently support invoking methods o DOM objects in IE.", "type": "mixed", "id": {"id": "02279beb-c611-4461-bc63-5f2997be952f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical language and instructions that can be segmented into meaningful spans, such as \"V8\", \"document-getElementById\", which are relevant for learning span segmentation in both code contexts (JavaScript) and natural language explanations about browser compatibility. / The segment contains a mix of technical instructions and HTML-like syntax, which can help the model learn span segmentation in both contexts. It's clean but lacks context for full comprehension by X-Spanformer without additional data. / The segment contains a mix of programming concepts and instructions, with clear references to DOM objects in JavaScript that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which might affect its utility as standalone training data. / The segment contains a mix of programming concepts and instructions, with clear references to DOM objects in JavaScript which are relevant for span segmentation learning purposes. It is clean but lacks contextual depth that could improve its utility as training data. / The segment contains a mix of programming language syntax and comments, with clear references to DOM objects which can be segmented into meaningful spans for learning purposes. It is clean but lacks context as it refers specifically to V8 usage in Internet Explorer without further explanation or examples."}}
{"raw": "Note: For a general overview of the UiBinder framework, see Declarative_Lavout with _UiBinder:\nCREATING A UIBINDER\nSelect File > New > UiBinder to open the New UiBinder wizard.", "type": "mixed", "id": {"id": "4cad566a-fbd1-420d-90a7-db5e05c17a03"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Contains a mixture of instructional text and UI-related commands, with clear spanable phrases like \"UiBinder\" and \"_UiBinder\". The segment is clean but lacks context for full comprehension as it's truncated at the end. / Contains both instructional text and UI-related commands, providing a mix of spans for learning. / Contains both instructional language and UI-related terminology, with clear separations for potential span segmentation; however, it lacks context-specific details that could improve learning outcomes. / The segment contains a mix of instructional text and programming-related terms, with clear indications for span segmentation (e.g., \"Note:\", file paths like `File > New`, etc.). It is coherent but lacks context that could be useful in training an encoder to understand both natural language instructions as well as code-like structures. / Contains both instructional text and UI-related commands, showing clear span patterns for training a tokenizer-free model."}}
{"raw": "var orthoViewInfo = 03djs.rendergraph _ createBasicView g_pack, g_orthoRoot, 9_client _ renderGraphRoot) Make sure the orthographic view gets drawn after the 3d stuff orthoViewInfo root.priority = g_ viewInfo_ root.priority + 1; Turn off clearing the color for the orthographic view since that would erase the 3d parts _ Leave clearing the depth and stencil, S0 it' s unaffected by anything done by the 3d parts _ orthoViewInfo.", "type": "code", "id": {"id": "c83e665c-1870-42c0-b378-c3f28fcb4138"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structure with identifiable spans for variables, functions/methods (e.g., `var`, `_createBasicView`), and comments; well-formed programming context ideal for learning span segmentation in a coding environment. / Clear, structured programming constructs with meaningful spans; well-suited for learning span segmentation in a coding context. / Clear structure with identifiable spans for variables, functions/methods, and comments; well-suited to learning span segmentation in programming context. / Clear structure with identifiable spans (variable declaration, function calls), clean and coherent for training purposes; represents valuable patterns in span segmentation within programming context."}}
{"raw": "Canvas saveMatrix This call saves the current matrix and pushes a copy onto a private stack. Subsequent calls to translate, scale, rotate all operate on this copy. When the balancing call to restoreMatrix() is made, this copy is deleted and the previous matrix is restored:\n03d.Canvas.scale\nNumber SX , Number SY\nAdds a scale to the current canvas matrix\nParameters:\nSX The amount to scale in X SY The amount to scale in y bool 03d.", "type": "mixed", "id": {"id": "b4399f43-19e6-4f5a-b2d8-60701a2879c4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming instructions and comments, with clear structure for span segmentation; it includes both function calls (code) and descriptions/commentary that are coherent and representative of the target domain. / The segment contains a mix of programming concepts and function descriptions, with clear structure for span segmentation; it is clean but lacks context on usage or examples. / Clear structure with identifiable spans for functions, parameters and descriptions; well-suited to learning span segmentation in programming context. / Clear structure with identifiable spans; includes both descriptive text and programming syntax, representing valuable patterns for learning span composition in a mixed context. / The segment contains a mix of programming concepts and function descriptions, with clear spanable elements like \"Canvas saveMatrix\", method names (\"03d.Canvas.scale\"), parameters (SX, SY), and comments describing functionality which are valuable for learning both code structure and natural language explanations."}}
{"raw": "Parameters:\npack used to manage created DrawElement;\npack material material to use for DrawElement: If you pass null it will use the material on this Element: This allows you to easily setup the default (just draw as is) by passing null o setup a shadow pass by passing in a shadow material: Returns:\nThe created draw element.", "type": "mixed", "id": {"id": "03ad9f38-a16a-4c65-b1eb-201f572a8fa9"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related terms, with clear parameter descriptions that can be segmented into meaningful spans for learning purposes. It is well-structured to represent the patterns in span composition within both natural language explanations (e.g., \"pack used\") and code-like constructs (\"material material\"). / Clear distinction between parameters and return values; spans can be identified as individual concepts or elements, useful for learning span segmentation in both programming context (code) and descriptive text (natural language). / Clear distinction between parameters and return values, representing valuable patterns for learning span composition in both programming context (code) and descriptive text (natural language). / Clear distinction between parameters and descriptions, with identifiable spans for both technical terms (\"DrawElement\", \"material\") and explanatory text; represents a mix of programming concepts in documentation format. / Clear distinction between parameters and return values, representing valuable patterns for learning span composition in both programming context (code) and explanatory text (natural language)."}}
{"raw": "VertexSource bindStream\nVertexSource source , Stream _Semantic semantic, Number semantic index [inherited]", "type": "code", "id": {"id": "a91af0ad-e480-4e40-b04b-fc31f4f06b45"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements like function calls and parameters, suitable for learning span segmentation in programming context. / Clear structured elements like function names and parameters, suitable for learning span segmentation in programming contexts. / Clear structured elements with meaningful spans; clean and well-formatted for training purposes, representing valuable patterns in programming constructs. / Clear structure with identifiable spans; useful for learning span segmentation in programming context. / Clear structured elements with meaningful spans; well-suited for learning span composition in programming context."}}
{"raw": "NamedObject:\nArray 03d Param outputConnections [inherited] The output connections for this param:\nThis property is read-only:\nbool 03d", "type": "mixed", "id": {"id": "588a395b-c59b-4b16-91d5-202bbd09f186"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of structured data (code-like elements) and descriptive text, which can help the model learn span segmentation in both domains. However, it lacks clarity due to its informal syntax (\"Array 03d\", \"bool 03d\"). / The segment contains a mix of structured data (code-like syntax) and descriptive text, which could be valuable for learning span segmentation in both domains. However, the clarity is somewhat compromised due to unconventional formatting (\"Array 03d Param outputConnections [inherited]\"). / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structured elements with meaningful spans; well-suited for learning span composition in programming context. / The segment contains a mix of structured elements (code-like syntax) and descriptive text, which can help the model learn to distinguish between different types of spans in both contexts."}}
{"raw": "Will not be required when Google releases 2.5", "type": "natural", "id": {"id": "21248f8a-7a39-4c56-a360-b879f6aea803"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear sentence structure with a discernible subject (\"Will not be required\") and predicate (when Google releases 2.5), representing useful patterns for span segmentation in English text. / Clear sentence structure with a single meaningful span; represents simple declarative pattern useful for training on coherent sentences. / Clear sentence structure with a single meaningful span; represents simple declarative pattern in English text. / Clear, concise sentence with a clear subject (\"Will not be required\") and object (when Google releases 2.5), suitable for learning span segmentation in contextually rich sentences. / Clear, concise sentence with a single meaningful span; good for learning simple text spans in English."}}
{"raw": "This worked good for small application, and even some less complex medium sized application: However; this failed horribly when trying to scale the applications user experience to more complex design.", "type": "natural", "id": {"id": "e4a36cb6-e328-441b-9bad-dfc438bea386"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear sentence structure with identifiable spans; useful for learning complex span segmentation in prose. / Clear sentence structure with identifiable spans; useful for learning context and complexity in text. / Clear sentence structure with identifiable spans; represents patterns for training on complex sentences and punctuation usage. / Clear sentence structure with identifiable spans; useful for learning context and complexity in text composition. / Clear sentence structure with meaningful spans; good for learning span segmentation in prose."}}
{"raw": "A cube texture stores images for the six faces of a cube and is addressed by three texture coordinates u, V, and w) The effect of applying a cube texture to a shape is roughly analogous to shrink-wrapping the texture onto a shape that is enclosed by the cube.", "type": "mixed", "id": {"id": "5bc1430a-e7dc-46ca-8cda-bc2bc60f7032"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both descriptive language and technical terms related to cube textures, which can help the model learn span segmentation in a context involving programming concepts intertwined with explanations. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"cube texture,\" \"texture coordinates u, V, w),\" and phrases describing the application process on shapes. It is clean but lacks context for full comprehension by X-Spanformer without additional data. / Clear sentence structure with identifiable phrases; however, lacks explicit span boundaries for direct training purposes. Could benefit from additional annotations to improve learning of spans in text. / Clear sentence structure with identifiable spans; useful for learning context and composition in text. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"cube texture,\" \"texture coordinates u, V, w),\" and the process description which is coherent for training purposes. It represents valuable patterns in both natural language explanation (the effect on shapes) and code-like terminology (\"u\", \"V\", \"w\")."}}
{"raw": "Counter setCount Number count [inherited] Sets the current count value for this counter as well as the resetting the state of the callbacks.", "type": "mixed", "id": {"id": "d4f900f6-8fa3-428a-bcee-2395c3796be4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and language, with clear spanable elements like \"Counter setCount\", \"[inherited]\", which can be useful for learning both syntax (code) patterns as well as contextual understanding in natural languages. / The segment contains a mix of programming concepts and language, with clear spanable elements like \"Counter\", \"[inherited]\", which can help the model learn both syntax (code) patterns as well as contextual usage in natural languages. However, it lacks explicit context or examples that would make its utility for training clearer without additional data points. / The segment contains a mix of programming concepts and language, with clear spans for \"Counter setCount\", \"[inherited]\", and the action description that can be used to train span segmentation in code context. / The segment contains a mix of programming language syntax and comments, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to missing punctuation or clearer separation markers for tokens like \"Counter setCount\" that could be better segmented as separate entities (e.g., function name vs argument). / The segment contains a mix of programming concepts and language, with clear spanable elements like \"Counter setCount\", \"[inherited]\", which are useful for learning how to parse such constructs in code snippets combined with natural explanations."}}
{"raw": "This property is read-only:\nbool 03d Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only. bool 03d", "type": "mixed", "id": {"id": "ecebc75e-7217-4fb0-b5b4-8aa4fccba4db"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn span segmentation for both types of content. However, it lacks clarity due to repetition (\"This property is read-only.\") / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to repetition (\"This property is read-only.\") / The segment contains both a descriptive text and programming-like syntax, which can help the model learn to distinguish between different types of spans in varied contexts. However, it lacks clarity due to repetition (\"This property is read-only.\") / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to identify spans in both contexts. However, it lacks clarity due to repetition (\"This property is read-only.\") / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to repetition (\"This property is read-only.\")"}}
{"raw": "For example it can add axes, spheres and boxes to your transforms as well as draw lines in 3d space given 2 points. Parameters: pack Pack for DebugHelper to manage its resources with: viewInfo ViewInfo for debug visuals. Returns: lo3djsdebug_DebugHelper the DebugHelper object.", "type": "mixed", "id": {"id": "7d828b82-4149-4b33-a153-e408a90d7bf4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming concepts (transforms, parameters) and documentation-style explanations; spans can be segmented into meaningful parts like function descriptions or parameter lists. / Contains both programming concepts and documentation, with clear spanable elements like function names, parameters, return types, which are valuable for learning structured patterns in a tokenizer-free context. / The segment contains a mix of programming concepts (transforms, parameters) and documentation-style explanations which can help the model learn span segmentation in both contexts. However, it lacks clear delimiters for spans; thus it's not ideal but still valuable due to its compositional value. / The segment contains a mix of programming concepts and documentation, with clear spans for parameters (e.g., \"Pack\", \"ViewInfo\") that can be used to learn span segmentation in both code constructs (\"add axes, spheres and boxes\") and natural language descriptions (\"Returns\"). / The segment contains a mix of descriptive text and technical parameters, with clear references to programming constructs (e.g., \"pack\", \"viewInfo\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data."}}
{"raw": "For all particle functions you can specific a ParticleSpec as a Javascript object, only specifying the fields that you care about: emitter setParameters ( { numParticles 40 , lifeTime: 2 , timeRange: 2  startsize: 50 _ endSize: 90 , positionRange: [10 , 10 , 10] velocity: [ 0 , 0 , 60] , velocityRange: [15, 15, 15] , acceleration:", "type": "mixed", "id": {"id": "dd16f609-77ff-41f8-ace0-4c2fc5f8ba67"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured data (code-like syntax) and unstructured text, useful for learning span segmentation in a diverse context. / The segment contains both structured data (code-like syntax) and descriptive text, providing a good mix for learning span segmentation in diverse contexts. However, the presence of unclosed brackets may affect clarity slightly. / Contains both structured data (code-like syntax) and unstructured text, which can help the model learn to segment spans in a diverse context. However, some syntactical errors may affect clarity slightly. / Contains both structured data (code-like syntax) and unstructured text, which can help the model learn span segmentation in a diverse context. However, it lacks clarity due to incomplete structures like missing commas or semicolons within object properties; minor edits could improve its utility as training examples. / The segment contains a mix of descriptive text and JSON-like structure, which can help the model learn to differentiate between spans in both contexts. However, it lacks clarity due to missing commas or proper formatting for valid code representation; thus it's not ideal but still valuable as is."}}
{"raw": "Then choose Create project from existing source and set up your project.", "type": "natural", "id": {"id": "11c431cf-2f9d-4e6f-997c-3d31a8518d4f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear instructional text with identifiable action phrases and a coherent sequence suitable for learning span segmentation in the context of user instructions or documentation. / Clear instructional structure with identifiable spans; useful for learning sequence and command composition in text-based tasks. / Clear instructional structure with identifiable spans for action (\"Choose\", \"Create project from existing source and set up your project\") that can be used to train a span-aware model on understanding sequences of actions in text. / Clear instructional structure with identifiable spans (\"Then choose\", \"Create project from existing source and set up your project\") suitable for training a span-aware model in understanding sequences of actions or instructions. / Clear instructional structure with actionable steps, suitable for learning span segmentation in user guidance text."}}
{"raw": "Texture Samplers texture sampler encapsulates a reference to a texture object and a set of states that define how the texture bitmap is applied to a surface.", "type": "mixed", "id": {"id": "1db2b69c-b23b-4ddb-9aea-d7b17849cf34"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines technical terminology with a descriptive explanation, indicating both programming concepts and their applications in texture mapping within graphics rendering contexts. This provides valuable patterns for learning span composition across different domains (code constructs like \"texture sampler\" alongside natural language descriptions). / The segment contains both technical terminology and a description that could be useful for learning span segmentation in the context of programming concepts, especially related to graphics or game development where texture samplers are relevant. / Clear sentence structure with identifiable spans; useful for learning context and composition in text. / The segment contains both technical terminology and a description that could benefit span segmentation learning, especially for terms like \"texture sampler\" which are likely to appear in similar contexts across different domains. / The segment combines technical terminology with a descriptive explanation, representing valuable patterns for learning span composition in both programming concepts and documentation language."}}
{"raw": "clearColorFlag = false;\nSee the Creating a heads-up display sample for another example of creating a 2D overlay and an accompanying 3D view.", "type": "mixed", "id": {"id": "158f19c2-2674-4683-83fa-ccf845dfd1bd"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming constructs (variable declaration) and explanatory text, providing a good mix for learning span segmentation in diverse contexts. / Contains both programming constructs (variable declaration) and explanatory text, demonstrating span segmentation across different content types. / The segment contains a clear flag assignment (code) and explanatory text with references to examples, demonstrating both programming constructs and instructional language which is valuable for learning span segmentation in diverse contexts. / The segment contains a mix of programming constructs (variable assignment) and explanatory text, which is valuable for learning span segmentation in both contexts. / The segment contains a mix of programming syntax (code) and explanatory text, with clear spans for both variables (`clearColorFlag`) as well as instructional content (\"See the Creating...\"). It is clean but lacks context which might affect its utility in training an encoder."}}
{"raw": "Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source.", "type": "mixed", "id": {"id": "66f8d62b-124f-47f0-a564-534dbd97d2c3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a context that includes multiple languages. / The segment contains both programming language syntax and comments, which can help the model learn span segmentation in a context that includes variable names (code) alongside explanatory text or documentation style elements (natural). However, it lacks clarity due to unconventional capitalization (\"Param\" instead of \"Parameter\") and ambiguous phrasing. / The segment contains both programming language syntax and comments, which can help the model learn span segmentation in a context where multiple languages are used together. However, it lacks clarity due to potential ambiguity with \"Param\" being interpreted as either code or natural text without further clarification on its usage within this specific domain. / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to potential ambiguity with terms like \"param\" that could be interpreted differently depending on surrounding code or documentation structure. / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context."}}
{"raw": "Matrix4 03d ParamMatrix4 value [inherited] Sets the 4-by-4 matrix stored by the Param by a length-4 array of arrays of 4 numbers.", "type": "mixed", "id": {"id": "4035a968-3463-4037-8549-23d119c9a33c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming concepts and language, with clear spanable elements like \"Matrix4\", \"[inherited]\", etc., representing valuable patterns for learning span composition in a tokenizer-free context. / Clear combination of programming terminology and structure, representing valuable patterns for learning span segmentation in both domains. / Clear distinction between a programming concept (Matrix4) and its description, with structured parameters that can be segmented into meaningful spans for learning purposes. / Clear distinction between a programming concept (Matrix4) and its description, representing valuable patterns for learning span composition in both domains. / Clear structure with identifiable spans related to programming constructs and parameters. Well-suited for learning span segmentation in a coding context."}}
{"raw": "Parameters:\nmip_ level The mip-level of the surface to be returned: pack The pack in which the surface will reside.", "type": "mixed", "id": {"id": "af4dab23-4f13-4791-b96e-fbe5b53679b3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of parameter descriptions and programming concepts, with clear spans for both technical terms (\"mip level\", \"pack\") that can be used to train the model on span segmentation in code context as well as natural language explanations. / The segment contains a mix of parameter descriptions (natural language) and technical terms related to software configuration, which can help the model learn span segmentation in both contexts. / The segment contains a mix of parameter descriptions and programming concepts, with clear identifiers for spans that can be useful in learning span segmentation across different contexts. / The segment contains a mix of parameter descriptions and programming concepts, which can help the model learn span segmentation for both human-readable text (natural language) and technical terms commonly found in software documentation or code comments. / The segment contains both parameter descriptions (natural language) and technical terms related to a specific domain, which can help the model learn span segmentation in diverse contexts."}}
{"raw": "number opt_priority lo3djsmath Vector4 opt_viewport Creates a basic render graph setup to draw opaque and transparent 3d objects. Parameters: pack Pack to manage created objects. treeRoot root Transform of tree to render: opt_parent RenderNode to build this view under: opt_clearColor color to clear view. opt_priority Optional base priority for created objects. opt_viewport viewport settings for view.", "type": "mixed", "id": {"id": "db84be99-4f03-49ba-94b7-7df52db6d0da"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear spans identified (parameters, descriptions), representing both programming constructs and their explanations in a coherent manner suitable for learning span segmentation patterns. / The segment contains a mix of programming concepts and language, with clear parameters that can be segmented into meaningful spans for learning span composition in both contexts. / The segment contains a mix of programming concepts and parameters, with clear spanable elements like function names (\"Creates\"), parameter lists (e.g., \"opt_priority lo3djsmath Vector4 opt_viewport\"), which are valuable for learning the composition in both natural language descriptions within code comments or documentation. / Clear spans of parameters and descriptions; represents a mix of structured data (code-like) with explanatory text, useful for learning span segmentation in both contexts. / The segment contains a mix of programming concepts and language, with clear parameters for learning span segmentation in both contexts. However, it lacks contextual coherence which might affect its utility as training data."}}
{"raw": "opt_clearColor color to clear view: opt_priority base priority for created objects. Returns: lo3dis rendergraph ViewInfo. A ViewInfo object with info about everything created\n! o3djs rendergraph ViewInfo 03djs.rendergraph create View\n!03d", "type": "mixed", "id": {"id": "1a9f0054-3af5-4d6e-a18f-d254f2362c57"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming commands and descriptions, with clear spanable elements like function names, parameters (e.g., 'opt_clearColor'), object types ('ViewInfo'), which are valuable for learning code structure alongside natural language explanations. / Contains both programming commands and comments, showing clear span patterns for training a tokenizer-free model that can understand context in software development environments. / The segment contains a mix of programming commands and comments, with clear structure for learning span segmentation in both contexts. / Contains both programming commands and comments, showing clear span segmentation opportunities between language constructs and descriptions. / The segment contains a mix of programming commands and comments, with clear structure for span segmentation; however, it lacks context or coherence as standalone content."}}
{"raw": "Shape: The created sphere. See Also:\n93d Pack 03d Shape\n! o3djs primitives VertexInfo_ 03djs.primitives createSphereVertices\nnumber\nradius\nnumber subdivisionsAxis number subdivisionsHeight ! o3djsmath Matrix4 opt_ matrix Creates sphere vertices The created sphere has position, normal and uv streams.", "type": "mixed", "id": {"id": "f039067e-06c6-4a40-bcc0-c1fbaa493d13"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related terms, with clear references to shapes (natural language) and functions/methods/code constructs related to creating spheres in an unspecified software context (\"o3djs\"). It demonstrates the compositional value for learning span segmentation between natural descriptions ('Shape', 'The created sphere') and code elements ('93d Pack 03d Shape', '! o3djs primitives VertexInfo_'). The text is clean, coherent but lacks sufficient detail to fully represent a diverse range of patterns. / The segment contains a mix of descriptive text and programming-related content, with clear references to functions/methods (e.g., `createSphereVertices`, `opt_matrix`) that can be segmented into meaningful spans for learning purposes in both natural language processing tasks related to code documentation understanding as well as span segmentation within mixed contexts. / The segment contains a mix of descriptive text and programming-related terms, with clear references to shapes in both human-readable form (\"The created sphere\") and as part of an API call or function definition (e.g., \"createSphereVertices\"). It shows structural clarity for span segmentation between natural language descriptions and code constructs. / The segment contains a mix of descriptive text and programming-related content, with clear references to variables (radius), functions/methods (createSphereVertices), and object properties/attributes ('position', 'normal' streams). It includes both natural language explanations (\"The created sphere has position\") as well as code constructs. This combination provides diverse examples for learning span segmentation in a mixed context. / The segment contains a mix of descriptive text and programming-related terms, which can help the model learn both language patterns (natural) as well as specific syntax or structure related to coding constructs in O3Djs primitives context. However, it lacks clear separation between spans that could hinder learning; thus not perfect but valuable for mixed content training."}}
{"raw": "But GWT was designed to make it easy to add GWT functionality to existing web applications with only minor changes.", "type": "natural", "id": {"id": "e1a4b638-d024-4cfb-84b4-2b07338fee48"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear, coherent sentence with identifiable spans; useful for learning span composition in English text. / Clear, coherent sentence with a logical structure suitable for learning span composition in the context of web development documentation. / Clear, coherent sentence with a clear subject (\"GWT\") and predicate structure suitable for learning span segmentation in the context of programming language documentation or similar texts. / Clear, coherent sentence with identifiable spans for training (subject-predicate-object structure). / Clear, coherent sentence with a single meaningful span; good for learning context and composition in NLP tasks."}}
{"raw": "Sampler states can be set using parameters defined on a Sampler object or specified directly using one of the convenience methods supplied by the Sampler", "type": "natural", "id": {"id": "108163dc-827b-4171-83b8-41c4df5c9927"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text segment contains a mix of technical terminology and instructional language, with clear references to object properties (\"Sampler states\") that can be segmented into meaningful spans for training purposes (e.g., \"Sampler\", \"parameters\", \"convenience methods\"). It is clean but lacks context or examples. / The segment contains clear, structured information about a concept (Sampler states) and its usage in both object-oriented programming context (\"parameters defined on a Sampler object\") as well as direct method invocation (\"convenience methods supplied by the Sampler\"). It is coherent for training purposes. / Clear instructional text with identifiable spans for parameters and methods, suitable for learning compositional patterns in span segmentation. / Clear instructional text with identifiable spans for parameters and methods, suitable for training on span segmentation in documentation. / Clear instructional text with identifiable spans for learning (\"Sampler states\", \"parameters defined on a Sampler object\")"}}
{"raw": "03D Best Practices and Tips\nIntroduction This chapter presents a few useful tips for writing 03D applications. Always initialize the perspective matrix from the width and height of the client area, not from magic numbers.", "type": "mixed", "id": {"id": "4cf47533-6a0b-45f2-9911-52969ecb47e1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text contains a mix of programming concepts and documentation, with clear spans for both the title (\"03D Best Practices and Tips\") which is likely to be treated as one span in natural language processing tasks due to its descriptive nature; and code-related phrases like \"perspective matrix\" that can help learn patterns related to coding terminology. / Contains a mix of instructional text and programming-related terms, with clear structure for span segmentation; useful patterns present in both domains. / Contains a mix of instructional language and programming concepts, with clear structure for span segmentation (e.g., \"03D applications\", \"perspective matrix\"). Suitable training data due to its compositional value in representing both natural language instructions and code-related terminology. / The segment contains a mix of instructional language and technical terms related to programming, with clear structure for span segmentation between phrases like \"03D applications\", \"perspective matrix\" etc., representing valuable patterns in both natural language instructions and code-related terminology. / Clear structure with identifiable spans; includes both descriptive text and programming-related terms, representing valuable patterns for learning span composition in a mixed context."}}
{"raw": "ParamString', '03d. ParamTexture'\n'03d. ParamTransform', '03d.ProjectionParamMatrix4' , '03d. ProjectionInverseParamMatrix4' , '03d.", "type": "code", "id": {"id": "7c7e5a40-e968-422f-8cb0-ef5a1b26a8d0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements representing meaningful spans for a span-aware model focused on programming constructs. Well-defined and clean, suitable as training data. / Clear structure with identifiable spans related to programming constructs, useful for learning span segmentation in a coding context. / Clear structure with identifiable spans related to programming parameters and matrices, suitable for learning span segmentation in a coding context. / Clear structure with identifiable spans related to programming parameters and matrices, suitable for learning span composition in a coding context. / Clear structured elements representing meaningful spans; well-suited for learning span composition in programming contexts."}}
{"raw": "Default = true. This is for helping with Param cycles\nIf paramA gets its value from paramB and paramB gets its value from paramA: Ifyou go paramA.value, paramB will evaluate then copy to paramA. If you go paramB value, paramA will evaluate then copy to paramB. Ifyou set paramB updateInput = false;, then: If you go paramA value, paramB will evaluate then copy to paramA If you go paramB value, paramB just copy paramA. paramA will NOT evaluate when paramB asks for its value.", "type": "mixed", "id": {"id": "93a4a9fc-0ce2-4f7e-82c8-2af1dce1aa50"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming logic and comments, with clear spanable patterns like variable assignments (\"paramA\", \"paramB\") that can help the model learn complex relationships in both code constructs (e.g., loops) and natural language explanations/comments. / The segment contains a mixture of configuration settings and explanations, with clear span patterns related to parameter interactions that can be useful for learning complex relationships in both language descriptions and technical configurations. / The segment contains a mix of programming logic and comments, which can help the model learn span segmentation in both contexts; however, it lacks clarity due to informal language (\"Ifyou go\"). Clean up for better training utility. / The segment contains a mix of configuration settings and pseudo-code-like structures that can be segmented into meaningful spans, reflecting the interaction between parameters in an abstracted programming context which is useful for learning span segmentation patterns. However, it lacks clarity due to informal language (\"Ifyou go\", \"then copy\") making comprehension difficult without further clarification or formalization. / The segment contains a mix of programming logic and comments, with clear span patterns for variables (paramA, paramB) that can be learned by the model; however, it lacks natural language context which may affect clarity slightly."}}
{"raw": "Parameters:\nparam name The name of the Param to be created.", "type": "mixed", "id": {"id": "afc3e078-bc65-4e18-83aa-0c1a68dc7ac2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear parameters and values that can be segmented into meaningful spans for learning; represents a common pattern in configuration files with both descriptive text (natural language) and key-value pairs (code-like structure). / Clear parameters and values for a programming context, suitable for learning span segmentation in coding constructs. / Clear parameters and values can be segmented; represents a common pattern in configuration files with both descriptive text (natural language) and key-value pairs typical of programming constructs. / Clear parameter definition with a name-value pair structure common in programming, suitable for learning span segmentation and composition. / Clear parameters and values can be segmented into meaningful spans; represents valuable patterns for learning span composition in both programming contexts and documentation language."}}
{"raw": "<static > prepareMaterials(pack, viewInfo, opt_effectPack) <static > setDrawListOnMaterials(pack; drawList)", "type": "code", "id": {"id": "1d2e69e9-11b4-41d3-a984-a716d311b5de"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements with consistent formatting and recognizable patterns for span segmentation in programming context. / Clear structured elements with consistent syntax, suitable for learning span segmentation in programming context. / Clear structured elements with consistent syntax, suitable for learning span segmentation in programming contexts. / Clear, structured programming constructs with identifiable spans for training a tokenizer-free span-aware model. / Clear structure with identifiable spans; well-suited for learning span segmentation in programming context."}}
{"raw": "To work around this we check how many streams the material expects and if there are not enough UVs streams we duplicate the last TEXCOORD stream until there are, making a BIG assumption that that will work.", "type": "mixed", "id": {"id": "5a06ea7f-c172-41cc-af36-8d8e65fac8f2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains a mix of programming logic and comments, with clear spans for both technical terms (\"streams\", \"UVs\") and phrases indicating actions or assumptions in the context of software development. The structure is coherent enough to represent span segmentation patterns across natural language explanations interspersed within code-like statements. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"streams\", \"UVs streams\", which are likely to represent variable names or identifiers in code context; it is clean for training purposes with clear compositional value. / The segment contains a mix of technical language and instructions that can be segmented into meaningful spans, such as \"streams\", \"UVs streams\", which are likely to represent variable names or identifiers in code context; it is clean but lacks explicit delimiters for span segmentation. / Contains both programming concepts and language, with clear spanable patterns like \"streams\", \"UVs streams\" that could be useful for learning context-aware segmentation in a tokenizer-free model. / The segment contains a mix of technical jargon and programming concepts, with clear spans for phrases like \"work around this,\" \"check how many streams the material expects,\" etc., which are valuable patterns to learn span segmentation in both natural language context and code-related expressions."}}
{"raw": "This method ensures that if the client area changes size, the perspective matrix changes accordingly\nIf you are using a render target, make constants for the width and height of the render target such that it's clear how any perspective matrix used by the render target is set;\nDon't use the DOM values clientWidth and clientHeight to initialize the perspective matrix; these values will give you the wrong answer in full-screen mode.", "type": "mixed", "id": {"id": "ad3fcec3-8a26-419b-abd7-e598a07dd42b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of instructions and explanations that can be segmented into meaningful spans, such as \"client area,\" \"perspective matrix,\" etc., which are useful for learning span composition in both code-related contexts (like CSS or JavaScript) and natural language descriptions. / The segment contains a mix of instructional text and programming-related concepts, with clear spans for both explanation (natural language) and technical instructions/code references (\"render target\", \"perspective matrix\"). It is coherent but lacks explicit code examples which could enhance its utility as training data. / The segment contains a mix of instructional text and programming-related instructions, with clear spans for both conceptual explanations (\"perspective matrix,\" \"render target\") and specific coding advice (using constants instead of DOM values). It's coherent but lacks explicit code examples which could improve its training utility. / The segment contains a mix of instructional text and programming-related instructions, with clear spans for both conceptual explanations (\"perspective matrix\") and specific coding advice (e.g., \"clientWidth\", \"clientHeight\"). It is cleanly structured to aid in learning span segmentation. / The text segment contains a mix of instructional language and technical terms related to programming, with clear instructions that can be segmented into meaningful spans for learning purposes. It is coherent but lacks explicit coding examples or code snippets which could have improved its score slightly more towards 1.0."}}
{"raw": "WorldViewInverseTransposeParamMatrix4 Class Reference\nInherits 03d ParamMatrix4;\nList of all members", "type": "mixed", "id": {"id": "e870c970-b893-4f5b-973e-1f0fa3fc329c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of class reference notation and programming-like syntax, which can be segmented into meaningful spans for learning purposes; however, it lacks context or content to fully evaluate its training utility. Additional examples would improve the score. / The segment contains a mix of class reference notation and programming terminology, which provides clear examples for span segmentation in both structured (class names) and unstructured contexts (text descriptions). It is clean but lacks context or content to fully represent the target domain's complexity; however, it serves as an introductory example. / The segment lacks meaningful content and context; it is a fragment with unclear structure for span segmentation. / The segment combines a class name with inheritance notation, which is useful for learning span segmentation in both programming and documentation contexts. It's clean but lacks context or content to score higher. / The segment combines a class reference with programming constructs, providing clear examples of span segmentation for both structured and unstructured elements in the context of software documentation."}}
{"raw": "Parameters: id The Node id. Returns: Node. The node or null if not found.", "type": "code", "id": {"id": "05dc5190-133f-4475-accf-91ba7d15ef6d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear parameter and return type descriptions, suitable for learning span segmentation in programming contexts. / Clear parameter and return type descriptions with identifiable spans for learning. / Clear parameters and return descriptions, suitable for learning span segmentation in programming contexts. / Clear parameters and return types, representative of function documentation patterns in programming languages. / Clear parameters and return types, suitable for learning span composition in programming contexts."}}
{"raw": "The casesensitive attribute Nested include tags Nested exclude tags\nOther attributes and nested elements are not supported.", "type": "mixed", "id": {"id": "46bdadd0-5958-42f2-9334-cf4e6ed709f5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of attribute names and tags, which can be segmented into meaningful spans for learning span composition in both coding context (tags) and descriptive text (\"casesensitive\", \"Nested include\"). It's clean but lacks contextual clarity that could improve its utility as training data. / Clear structure with nested elements, valuable for learning span composition in programming context. / The segment contains a mix of attributes and tags that can be segmented into meaningful spans, such as \"casesensitive\", \"Nested include tags Nested exclude tags\". It's clean for training purposes but lacks context or examples to fully represent span composition patterns in either natural language processing (NLP) tasks related to code parsing/understanding. / Clear structure with identifiable spans; well-suited for learning span segmentation in programming context. / The segment contains a mix of attribute names and tags, which can be segmented into meaningful spans for learning purposes; however, it lacks context or examples that would increase its utility as training data."}}
{"raw": "Use client width and client.height, which are correct in both full-screen and plug-in modes.", "type": "mixed", "id": {"id": "2432fe29-d5e5-44d3-9b82-23cabbad549a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, which can help the model learn to distinguish between different types of spans in both contexts. / The segment contains a mixture of programming concepts (variables and methods) with clear contextual meaning, suitable for learning span segmentation in both coding constructs and their descriptions. / The segment contains a mix of programming concepts (variables and methods) with clear, identifiable spans that are relevant for learning span segmentation in both coding contexts and general language usage. / The segment contains a mix of programming concepts (variables and methods) with clear, meaningful spans that can be used to learn span segmentation in both coding contexts and descriptions. It is clean for training purposes as well. / The segment contains a mix of programming concepts (full-screen and plug-in modes) with variable names, which can help the model learn span segmentation in both contexts. It is clean but lacks context for full understanding; however, it still represents valuable patterns due to its technical nature."}}
{"raw": "ViewParamMatrix4' ,\n'03d. ViewInverseParamMatrix4' ,\n'03d. ViewTransposeParamMatrix4' , '03d.ViewInverseTransposeParamMatrix4' , '03d. ViewProjectionParamMatrix4' , '03d.ViewProjectionInverseParamMatrix4' , '03d. ViewProjectionTransposeParamMatrix4' , '03d.", "type": "code", "id": {"id": "b02a1964-5bc0-4a1f-9741-95d246a27b30"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "lacks clear span segmentation, repetitive and not coherent for learning patterns. / Clear, structured programming constants with consistent naming patterns suitable for span segmentation and learning. / Clear structured elements representing matrix names and operations, suitable for learning span segmentation in programming contexts. / Clear, structured programming constants with consistent naming patterns suitable for learning span segmentation in a tokenizer-free context. / Clear, structured programming constants with consistent naming patterns suitable for span segmentation and learning."}}
{"raw": "Detailed Description\ntype of ParamMatrix4 that supplies the current inverse world view transpose matrix at render time.", "type": "mixed", "id": {"id": "8070c466-9daf-40f0-ba96-1d08a6dce21d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans for training purposes, representing valuable patterns in both programming context (e.g., \"ParamMatrix4\", \"inverse world view transpose matrix\") and natural language descriptions (\"Detailed Description\"). / The segment combines technical terminology with a descriptive sentence structure, providing clear spans for both terms and phrases that can be useful in learning span segmentation across different domains. / The segment combines technical descriptions (natural language) with specific terminology (\"ParamMatrix4\", \"inverse world view transpose matrix\") that can be segmented into meaningful spans for a span-aware model to learn from. It is clean and coherent, representing valuable patterns in the context of both natural language explanations and code-related concepts. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"ParamMatrix4,\" which is likely to represent an object or variable in programming context; it also includes natural language phrases like 'Detailed Description' indicating the type. This combination provides valuable patterns for learning span composition across both code constructs (e.g., class names) and descriptive text elements typical of documentation. / The segment combines technical terminology with a descriptive sentence structure, providing clear spans for both language and programming concepts that are valuable in training span-aware models."}}
{"raw": "Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only: Stream 03d ParamVertexBufferStream stream The Stream stored by the Param:\nThis property is read-only:\nbool 03d", "type": "mixed", "id": {"id": "990db3f8-acbc-4c90-8c35-3b9faf2e30c2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both descriptive text and programming-related terms, with clear span boundaries for parameters (e.g., \"Param readOnly\", \"Stream 03d ParamVertexBufferStream stream\"). It is coherent but lacks context to fully understand the usage of spans in a broader sense. / The segment contains a mix of documentation (natural language) and programming constructs, with clear span segmentation for properties like 'readOnly' which can be useful in learning context-aware spans. However, the repeated phrases could potentially confuse learners about their significance or usage within code structures; thus it is not perfect but still valuable training data. / The segment contains a mix of documentation (natural language) and programming constructs, with clear span boundaries for properties like \"readOnly\" which can be useful in learning how to parse such structures. However, the repetition may affect training utility slightly. / Contains both structured programming elements and documentation, with clear span segmentation opportunities in the context of a class definition or API reference. / The segment contains a mix of documentation (natural language) and programming constructs, with clear span segmentation opportunities for both types. It is clean but lacks context or examples that could improve its training utility."}}
{"raw": "The end result of this design implementation created web applications that could not stray far from the look and feel of the core GXT components.", "type": "natural", "id": {"id": "5cdfdf33-7d24-4fa2-831a-eb213ad97609"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear, coherent sentence with identifiable spans; good for learning span composition in text. / Clear, coherent sentence with identifiable spans of meaning suitable for training a span-aware model in the context of design implementation and web applications. / Clear sentence structure with identifiable spans such as \"design implementation,\" \"web applications,\" and phrases like \"look and feel of the core GXT components.\" The text is coherent, clean for training purposes, representing valuable patterns in span composition within a natural language context. / Clear sentence structure with identifiable spans (nouns, verbs) suitable for learning span composition in a tokenizer-free context. Well-formed and coherent text representative of documentation style. / Clear, coherent prose with identifiable phrases suitable for training a span-aware model on sentence-level structures and context understanding in English text."}}
{"raw": "If your client area is resizeable, set the perspective matrix every frame in your render callback\nIf you do not reset the perspective matrix for every frame, the browser will resize the client area with the wrong aspect ratio when the user resizes the window.", "type": "mixed", "id": {"id": "4791329f-7393-408e-a989-5e29dc1136b4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both instructional language and technical terms related to web development, with clear spanable phrases like \"perspective matrix\" that can aid in learning contextually relevant spans. / The segment contains a mix of technical instructions and explanations, with clear structure for span segmentation; it includes both imperative statements (\"set the perspective matrix\") as well as explanatory text that could teach about aspect ratios in web development contexts. / Contains both instructional language and programming-related terms, with clear structure for span segmentation between phrases indicating actions or conditions in a software context. / The segment contains a mix of instructional language and technical terms related to web development, with clear instructions that can be segmented into meaningful spans for learning purposes. / Contains both instructional language and technical terms related to web development, with clear spans for phrases like \"perspective matrix\" that can be useful in training a span-aware model. The sentence structure is coherent but lacks explicit code examples or configuration details which could have improved the score slightly."}}
{"raw": "Param bind Param source_param [inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from Passing in null will unbind any m parameter currently bound.", "type": "mixed", "id": {"id": "84602428-a95b-4c76-8192-81de508aab41"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical terms related to parameters, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential ambiguity around \"source_para\" without further context or examples. / The segment contains a mix of technical descriptions and parameter bindings, which can help the model learn span segmentation in both programming contexts (code) and explanatory text (natural language). However, it lacks clarity due to potential ambiguity (\"source_para\" could be misinterpreted as \"source_param\"). / The segment contains both structured programming concepts (parameters, bindings) and explanatory text that can help the model learn span segmentation in a coding context with embedded explanations. / The segment contains a mixture of descriptive text and technical terms related to parameters, which can be segmented into meaningful spans for learning purposes in both domains (natural language explanations combined with programming concepts). It is clean but lacks context or examples that would make it more representative as training data. / The segment contains a mix of descriptive text and programming-related terminology, with clear references to parameters that can be segmented into meaningful spans for learning purposes. It is clean but lacks context on usage or examples which could improve its utility as training data."}}
{"raw": "StencilMask\n03d. StencilWriteMask\n03d. ColorWriteEnable\n03d. BlendEquation\n03d. TwoSidedStencilEnable\nParamBoolean\ndefault false\nParamInteger; State StencilQperation ParamInteger; State_StencilOperation", "type": "code", "id": {"id": "ee0e59a4-11aa-4844-a1e9-b76d02d0ca80"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; well-suited for learning span segmentation in programming contexts. / Clear, structured programming constants and parameters with identifiable spans for training a span-aware model in the context of shader language or similar DSLs. / Clear structured elements with meaningful spans; well-defined parameters and states for stencil operations in graphics programming. / Clear structured elements with meaningful spans; well-defined parameters and states for stencil operations in graphics programming. / Clear structure with identifiable spans; well-suited for learning span segmentation in programming contexts."}}
{"raw": "At this point; your source will be loaded in Eclipse, but the project's build path may not be set up properly, and you may see build errors.", "type": "mixed", "id": {"id": "8351766c-3cf1-4ad8-8a46-cf732b1275e8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of instructions (natural language) and technical terms related to software development environments, which can help the model learn span segmentation in both contexts. However; it lacks clarity due to punctuation errors (\"At this point;\" instead of \"At this point:\",), but it's still coherent enough for training purposes. / The segment contains a mixture of instructions and technical language, with clear punctuation that can help the model learn to distinguish between different types of spans (natural vs. programming-related). However, it lacks context for code-specific patterns which might limit its utility slightly in training an encoder focused on span segmentation within natural or coding contexts exclusively. / The segment contains a mix of programming-related instructions and prose, with clear markers for potential spans (\"At this point\", \"source will be loaded in Eclipse\"). It is coherent but lacks context on the build path setup process which could improve its utility as training data. / The segment contains a mix of instructions and technical language, with clear punctuation that aids in identifying spans related to software development tasks (loading source files into Eclipse) and potential errors (\"build path may not be set up properly\"). This provides valuable patterns for learning span segmentation. / The segment contains a mix of instructions (natural language) and technical references to software usage, which can help the model learn span segmentation in both contexts. However; it lacks clarity due to punctuation errors (\"At this point;\" should be \"At this point:\"), but it's still coherent enough for training purposes."}}
{"raw": "The minification filter (minFilter) specifies how to apply the texture if the area to be textured has fewer pixels than the texture that is, the texture needs to be shrunk to fill the area).", "type": "mixed", "id": {"id": "af4ea2ee-1226-4382-a730-ccf661115b82"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans for learning, such as \"minification filter,\" \"(minFilter),\" etc., which are relevant to both natural language processing (NLP) tasks related to code understanding or documentation. / The segment contains a mix of technical jargon and descriptive text, which can help the model learn to identify spans related both to programming concepts (minFilter) as well as their explanations in natural language (\"specifies how\"). However, punctuation is missing around \"the texture that,\" making it slightly less ideal. / The segment contains a mixture of technical terms and explanations that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both coding context (minFilter) and its description. / The segment contains a mix of technical jargon and structured explanation, providing clear patterns for span segmentation in both coding context (minFilter) and descriptive text (\"specifies how to apply the texture\"). It's clean with coherent structure suitable as training data. / The text segment contains a mix of technical terms and explanations that can be segmented into meaningful spans, such as \"minification filter,\" \"(minFilter),\" etc., which are useful for learning span composition in both natural language processing (NLP) tasks related to code documentation."}}
{"raw": "Always clear a render callback: Ifyou do not clear the callback in window unload; the browser will attempt to render during cleanup after the JavaScript has been freed, which causes JavaScript errors in the callback\nMinimize the number of effects used in your application:\nSince its expensive to create and render effects, create objects that share effects when possible. For example, the Picking example creates seven different objects that all use the same effect.", "type": "mixed", "id": {"id": "6af95eaa-142a-40c6-83bf-02af40145e0c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of instructional text and programming concepts, with clear examples that can be segmented into meaningful spans for learning purposes. It is clean but could benefit from punctuation to improve readability. / The segment contains both instructional language and technical terms related to programming, making it suitable for learning span segmentation in a context that includes coding concepts alongside explanatory text. / The segment contains a mix of instructional text and programming concepts, with clear spans for both explanations (\"Always clear a render callback\") and examples (\"create objects that share effects\"). It is cleanly structured to demonstrate span segmentation between natural language instructions and code-related advice. / The segment contains a mix of instructional text and programming concepts, with clear spans for both explanation (\"Always clear...\") and advice/code snippet (\"Minimize the number of effects used in your application\"). It is cleanly structured to facilitate learning about span segmentation across different contexts. / The segment contains a mix of instructional text and programming concepts, with clear examples that can be segmented into meaningful spans for learning span composition in both contexts."}}
{"raw": "[inherited] Unique id of the object:\nThis id will be unique, even across multiple 03D clients in the same page.", "type": "mixed", "id": {"id": "81c7f54e-4567-4b5d-8997-847108266736"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-related terminology (\"unique id\", \"03D clients\") and documentation-style comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to shorthand notation ('id') that might not be universally understood as meaningful spans across different domains or codebases. / The segment contains a mix of documentation-style text and programming-related terms, with clear spans for \"unique id,\" \"[inherited],\" and the concept of an object ID being unique across clients which can be useful in learning span segmentation patterns that are common to both natural language descriptions within code comments/documentation. / The segment contains a mix of descriptive text and programming-related terms, with clear references to unique identifiers (\"id\") that are common in both domains; it provides an example for learning span segmentation between natural language explanations (e.g., \"This id will be... even across multiple 03D clients\") and code-like expressions or conventions. / The segment contains a mix of programming concepts (unique id, clients) and documentation style comments (\"This id will be unique\"). It shows clear span segmentation between the comment explaining what an 'id' is for in this context versus actual code-like syntax which can help with learning patterns. / The segment contains a mix of programming concepts (unique id, object) and documentation-style text (\"This id will be unique\"), which can help the model learn span segmentation in both contexts. However, it lacks clarity due to shorthand notation ('03D') that may not generalize well across different domains or codebases without further context."}}
{"raw": "Id 03d ObiectBase clientId [inherited] Unique id of the object:\nThis id will be unique, even across multiple 03D clients in the same page.", "type": "mixed", "id": {"id": "06a896a8-5c00-46e8-b5df-b4e44f6bcad4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts (client ID, unique id) and documentation style text (\"This id will be...\"), providing diverse examples for span segmentation in both contexts. However, the clarity could improve by separating code-like constructs from prose to enhance learning patterns distinctly. / The segment contains a mix of programming concepts (client ID, unique id) and documentation-style text (\"This id will be...\"). It has clear structure for span segmentation with identifiable phrases like \"Unique id\" that can serve as learning examples in both code context and natural language explanation. / The segment contains a mix of programming-like identifiers and comments, with clear spans for 'clientId' as an object attribute name; it is coherent but lacks context to fully assess its training utility. / The segment contains a mix of programming concepts (client ID, unique id) and documentation-style text (\"This id will be unique...\"). It has clear markers for spans such as \"Id\", \"[inherited]\", and the colon indicating an explanation or definition which can help in learning span segmentation. / The segment contains a mix of programming-like identifiers and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to unconventional naming conventions (\"03d\") that may confuse learners without further context or normalization steps."}}
{"raw": "Param bind Param source_param [inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para", "type": "mixed", "id": {"id": "c906a396-c9e6-4470-9da4-66aab7d2dd4b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured language and technical terms, with clear spans for \"Param\", \"[inherited]\", etc., useful in learning span composition across different contexts. / The segment contains a mix of descriptive text and parameter notation, which can help the model learn both linguistic patterns in descriptions as well as syntactic structures related to programming constructs. However, it lacks context for complete span understanding due to missing values or examples that would make its utility clearer. / Contains both structured programming elements and parameter descriptions, useful for learning span segmentation in a combined context. / The segment contains a mix of descriptive text and technical terms related to parameters, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to missing punctuation or context for proper interpretation as natural language code documentation. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "The plugin use the standard Surefire testrunner; and contributes to execution report: If you use the surefire-report-plugin, you will see the GwtTests result included in generated project site. About GwTTESTSUITE\nThe Official GWT documentation on TestSuites suggest to grouping your GWT tests in a suite by extending GwtTestSuite: Maven will not be able to run such a Suite: The snippet below is what will allow both the Eclipse Junit Runner and Maven to run the test cases.", "type": "mixed", "id": {"id": "b92c713f-2cf2-4491-bfda-fb75d13b0218"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of technical documentation and configuration instructions, with clear references to software components (Surefire runner) that can be segmented into meaningful spans for learning purposes. Despite some grammatical issues (\"use\" should likely read \"uses\", etc.), the overall structure is coherent enough as training data. / The segment contains a mix of technical documentation and configuration instructions, with clear references to programming concepts like test suites (GwtTestSuite) that can be segmented into meaningful spans for training purposes. Despite some grammatical issues (\"suggest\" should likely read \"suggests\"), the overall structure is coherent enough as it relates to software testing practices in Java development environments using GWT. / The segment contains a mix of documentation (natural language) and technical instructions for configuring test suites in GWT, which includes both clear span segments like \"The Official GWT documentation\" or code-like phrases such as \"Maven will not be able to run\". It has structural clarity with identifiable spans but lacks coherence due to mixing different types. / The segment contains a mix of documentation (natural language) and technical instructions for configuring test suites, which can help the model learn span segmentation in both contexts. However, it lacks clear delimiters between different spans such as code snippets versus prose descriptions; thus it's not ideal but still valuable with minor adjustments. / The segment contains a mix of documentation (natural language) and technical instructions for configuring test suites in GWT, which includes both clear spans like \"GwtTests result\" that can be segmented meaningfully as well as code-like structures such as class names (\"GwtTestSuite\") suitable for learning span composition."}}
{"raw": "This property is read-only. Number 03d. Counter_count [inherited] The current count value for this counter: Default = 0_ This property is read-only:", "type": "mixed", "id": {"id": "d9bef19d-7ac3-4344-b696-5dcd269d7cbe"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like notation, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to inconsistent formatting (e.g., \"03d\" instead of an integer). / The segment contains a mix of descriptive text and programming-like notation, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to inconsistent formatting (e.g., missing spaces around underscores). / The segment contains a mix of descriptive text and programming-like notation, which can help the model learn to distinguish between different types of spans in both domains. However, it lacks clarity due to inconsistent formatting (e.g., \"03d\" instead of an integer). / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to differentiate between language constructs in both contexts. However, it lacks clarity due to inconsistent formatting (e.g., missing spaces around underscores). / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to inconsistent formatting (e.g., missing spaces around underscores)."}}
{"raw": "StandardParamMatrix4 parameters on the given ParamQbject: Note that SAS parameters are handled automatically by the rendering system: so except in some rare cases there is no reason to call this function.", "type": "mixed", "id": {"id": "0417e9e6-b8d8-45bb-91cb-f8f5c982a3ea"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"StandardParamMatrix4 parameters,\" which is indicative for learning span composition in both natural language processing (NLP) tasks related to code documentation or comments within programming contexts. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts (e.g., \"StandardParamMatrix4\") and natural language descriptions (\"parameters on the given ParamQbject\"). / The segment contains a mix of programming-like terms and documentation, with clear spans for \"StandardParamMatrix4\", \"parameters\", \"SAS parameters\" indicating potential patterns in span segmentation; however, the presence of informal language (\"Note that SAS...\") may affect clarity. / Contains both programming-like syntax and comments, which can help the model learn span segmentation in a context that includes variable names (code) alongside explanatory text (natural language). / Contains both programming-like syntax and documentation, which can help the model learn to segment spans in a context that includes variable names (code) alongside explanatory text (natural language). However, some terms like \"StandardParamMatrix4\" may need further clarification for consistent training."}}
{"raw": "The parameter that the value originates from Passing in null will unbind any m parameter currently bound. Returns:\nTrue if the bind succeeded.", "type": "mixed", "id": {"id": "34bd798e-c32d-4eec-8fcd-f6a0066336a0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related terms, with clear boundaries between them that can be used to train the model on span segmentation in both contexts. / The segment contains a mix of programming language syntax and documentation, with clear boundaries for spans such as \"parameter\", \"value\", \"null\", which are useful patterns to learn span composition in both code understanding and natural text processing contexts. / Clear structure with identifiable spans; includes both descriptive text and programming-related syntax, representing valuable patterns for learning span composition in a hybrid context. / The segment contains a mix of technical language and programming concepts, with clear parameter descriptions that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which could improve its utility as training data. / The segment contains both programming language syntax and comments, providing a clear example of span segmentation between keywords (e.g., \"parameter\", \"null\") and phrases (\"unbind any m parameter currently bound\"). It's clean for training purposes with valuable patterns in code-comment structure."}}
{"raw": "Member Function Documentation\n03djs.material attachStandardEffect 'o3d Pack pack ! o3d Material material ! o3djs rendergraph ViewInfo viewInfo string effectType Builds a standard effect for & given material.", "type": "mixed", "id": {"id": "7deec2f6-031e-499a-8c21-b67ac0547f1d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear spans for function names (\"Member Function Documentation\"), parameters (\"03djs.material attachStandardEffect 'o3d Pack pack ! o3d Material material ! o3djs rendergraph ViewInfo viewInfo string effectType Builds a standard effect for & given material.\"), which can be useful in learning span segmentation. / Contains both programming constructs and documentation, with clear spans for function names, parameters, types, etc., which are valuable patterns to learn span composition from. / The segment contains a mix of programming constructs and comments, providing examples for both syntax recognition (code) and contextual understanding within the context (natural language). However, it lacks clarity in separating code from documentation text which may affect learning patterns slightly. / The segment contains a mix of programming concepts and documentation, with clear spans for function names (\"Member Function Documentation\"), parameters ('o3d Pack pack', 'o3d Material material'), return types (string), and descriptions that can be used to train the model on span segmentation in both code context and accompanying explanations. / Contains both programming constructs and documentation, with clear spanable elements like function names, parameters, types, etc., which are valuable for learning span segmentation in a tokenizer-free context."}}
{"raw": "Note that the texture is loaded asynchronously and so the result of this call may appear several seconds after it is called depending 0n how long it takes to download the texture. Parameters: url Url of texture. 03djs.simple. SimpleShape setDiffuseColor number r number g number b number a Sets the diffuse color of this shape.", "type": "mixed", "id": {"id": "1b92ab4e-fc9a-4702-8577-e37d07584e31"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related terms, with clear parameters for learning span segmentation in both contexts. / The segment contains a mix of descriptive text and programming parameters, with clear delineation between them that can aid in learning span segmentation for both types of content. / The segment contains a mix of explanatory text and parameter descriptions, with clear delineation between them that can be used to train the model on span segmentation in both contexts. / The segment contains a mix of explanatory text and programming parameters, with clear spans for both descriptions (\"Note that the texture is loaded asynchronously...\") and parameter definitions (e.g., \"url\", \"03djs.simple\"). It represents valuable patterns in span segmentation between natural language explanations and code constructs. / The segment contains both explanatory text and parameters with values, representing a mix of human language instructions alongside programming concepts that can be segmented into meaningful spans for training purposes."}}
{"raw": "VertexSource Class Reference\nInherits 03d ParamObject:\nInherited by 03d SkinEval:\nList_of all members\nDetailed Description\nVertexSource is an object that allows binding Streams such that the VertexSource updates the Buffers of the Streams that have been bound to it: An example of a VertexSource object is a SkinEval\nPublic Member Functions\nbool bindStream VertexSource source, Stream Semantic semantic, Number semantic_index)", "type": "mixed", "id": {"id": "a500a5a6-847b-42e1-a689-881a3b77eceb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains clear structured elements like class references, member functions with parameters and descriptions that are typical in programming documentation; it is clean for training purposes as a representation of API reference patterns. / Clear structure with identifiable spans like class names, function signatures, and object descriptions that are relevant for learning span segmentation in programming contexts. / The segment contains a mix of technical terms and structured elements that are indicative of both programming concepts (e.g., \"VertexSource\", \"Stream\") and hierarchical relationships (\"Inherits\"). These patterns can help the model learn span segmentation in contexts where code is intertwined with descriptive text. / The segment contains a mix of programming concepts and object-oriented terminology, which can help the model learn span segmentation in both contexts. It is well-structured with clear references to classes (\"VertexSource Class Reference\"), methods (\"Public Member Functions\"), parameters (e.g., \"Stream Semantic semantic\", \"Number semantic_index\") that are typical for code documentation or API descriptions. / The segment contains a mix of class reference descriptions and method signatures, which are clear structures suitable for learning span segmentation in both programming contexts (code) and documentation language (natural). It is clean but lacks context or examples that could improve its utility as training data."}}
{"raw": "float2 float3 float4 float4x4 int\nParamFloat2 ParamFloat3 ParamFloat4", "type": "code", "id": {"id": "d0627c9d-4a05-477c-87cc-e3633a4812b2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear separation of parameters and types, suitable for learning span segmentation in programming contexts. / Clear, structured representation of parameters with consistent naming conventions suitable for learning span segmentation in programming context. / Clear, structured representation of parameters and types suitable for span segmentation in programming contexts. / Clear separation of parameters and types, representing valuable patterns for learning span composition in programming context. / Clear separation of parameters and types; spans can be identified as meaningful units for learning."}}
{"raw": "Setting this has no meaning to O3D, but is useful for debugging and for the functions Client getObiects, Pack-getObject; RenderNode getRenderNodesByNamelnTree and RenderNode-getTransformsByNameInTree which search for objects by name. Reimplemented from 03d", "type": "mixed", "id": {"id": "dbfe3889-2a3f-4eae-8ded-72d5ee89ec91"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains a mix of programming functions and comments, with clear spanable elements like function names and object references. Structurally coherent for learning patterns in both language constructs (comments) and coding syntax. / Contains both programming concepts and documentation, with clear spanable elements like function names and object references. Structurally coherent for learning patterns in a tokenizer-free context. / Contains both programming concepts and language, with clear spanable elements like function names and object references. / The segment contains a mix of programming functions and comments, with clear structure for span segmentation; however, it lacks clarity due to typos (\"Obiects\" instead of \"Objects\", etc.). It is coherent but could benefit from proofreading before use in training data. / The segment contains a mix of technical terms and programming functions, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to typos (\"Obiects\" instead of \"Objects\", etc.). Clean-up is recommended for better training utility."}}
{"raw": "FieldnumComponents [inherited] The number of components in this field. This property is read-only.", "type": "code", "id": {"id": "3472d3ef-a9a6-40aa-81bc-c695793d1788"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured representation of a programming concept with meaningful spans for learning; well-suited as training data for span-aware models in the context of coding language. / Clear structure with identifiable spans; well-suited for learning span composition in programming contexts. / The segment combines a programming-like syntax with descriptive text, providing clear span segmentation opportunities for both language and coding constructs. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"FieldnumComponents\", \"[inherited]\", the phrase describing what it represents (\"The number of components in this field\"), indicating it's well-formed for training purposes. / Clear, structured representation of a programming concept with meaningful spans for learning."}}
{"raw": "Reimplemented in 03d NamedObject:\nArray 03d Param outputConnections [inherited] The output connections for this param:\nThis property is read-only:\nbool 03d.", "type": "mixed", "id": {"id": "163a0542-5485-47cd-bde3-bf85e1ea3e53"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and comments, with clear spanable elements like class names (\"03d NamedObject\"), properties (\"outputConnections\", \"bool 03d.\"), which are valuable for learning code structure alongside natural language descriptions (e.g., \"Reimplemented in\"). / The segment contains a mix of programming constructs (class, property) and comments/documentation style text which can help the model learn span segmentation in both contexts. However, it lacks clarity due to its informal structure (\"Reimplemented\" instead of \"Renamed\", for example). / The segment contains a mix of programming concepts and documentation, with clear spanable elements like class names (\"03d NamedObject\"), properties (\"outputConnections\", \"bool 03d.\"), which are valuable for learning both code structure and natural language descriptions in the context of software development. / Contains both structured elements (code constructs) and readable text, suitable for learning span segmentation in a tokenizer-free context. / Contains both structured elements (code constructs) and readable text, which can help the model learn span segmentation in a context that includes programming language syntax alongside descriptive comments."}}
{"raw": "Alternatively; if your application's source tree already contains a project file, either because you had previously worked on it in Eclipse or because it was generated by a tool like GWT's webAppCreator; you can import the project by going to File > Import > General and selecting Existing Projects into Workspace.", "type": "natural", "id": {"id": "8599d1dc-12da-4508-9b91-dedd089dce76"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear instructional text with identifiable phrases and actions suitable for training a span-aware model on sentence-level structure and vocabulary in English. / Clear instructional text with identifiable spans for actions and phrases, suitable as training data. / Clear instructional text with identifiable spans for actions and descriptions, suitable for learning span segmentation in a non-code context. / Clear instructional text with identifiable spans for actions and concepts, suitable for learning span segmentation in a non-code context. / Clear instructional text with identifiable spans for actions and descriptions, suitable for training a span-aware model on English prose."}}
{"raw": "[inherited] Unique id of the object:\nThis id will be unique, even across multiple O3D clients in the same page.", "type": "mixed", "id": {"id": "46642f2c-78c7-4cbb-9abe-927d414a56a4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear markers for inherited properties (\"[inherited]\") that can be segmented into meaningful spans such as \"Unique id\", \"object:\", and the explanatory text following it. / The segment contains a mixture of programming concepts (unique id, O3D clients) and documentation language (\"This id will be unique\"), which can help the model learn to identify spans in both contexts. However, it lacks clarity due to shorthand notation like \"[inherited]\". / The text segment contains a mix of programming concepts (unique id, O3D clients) and documentation-style language (\"This id will be unique\"), which can help the model learn span segmentation in both natural language contexts as well as code-related constructs. / The segment contains a mix of documentation-style text and programming-related terms, with clear spans for \"unique id,\" \"[inherited],\" and the context surrounding them (\"This id will be unique...\"). It's clean but lacks sufficient length or complexity to fully represent span segmentation patterns. / The segment combines both a programming context (unique id, O3D clients) and documentation-style comments (\"This id will be unique\"). It has clear spans for technical terms that can help the model learn span segmentation in code-related contexts intertwined with natural language explanations."}}
{"raw": "NamedObjectBase: Array 03d ParamQbject_params", "type": "code", "id": {"id": "1a7c366d-b9c0-4e4d-a33e-a9b5be719ce7"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming contexts. / Clear structured elements representing a programming concept, suitable for learning span composition in the context of coding patterns. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structured elements representing a programming construct, suitable for learning span composition in coding context. / Clear structured elements, well-suited for learning span composition in programming contexts."}}
{"raw": "Number 03d Fieldoffset [inherited] The offset of this field in the Buffer in bytes. This property is read-only:\nNumber 03d Field size [inherited]", "type": "code", "id": {"id": "7a31213f-6022-490a-862b-f4521db96ae3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; useful for learning span segmentation in programming contexts. / Clear structured elements with consistent naming conventions for fields, suitable as training data for span segmentation in programming contexts. / Clear, structured representation of programming concepts with identifiable spans for fields and properties in a buffer context. Suitable for learning span segmentation within coding constructs. / Clear, structured representation of programming constants with meaningful spans for learning field properties in a buffer context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only: bool 03d", "type": "mixed", "id": {"id": "f08b8660-2be3-4f6e-9899-c711a68025fe"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn both language patterns (natural) and coding constructs (code). However, some ambiguity in terms like \"Param\" could be clarified for better training utility. / The segment contains a mix of documentation (natural language) and programming concepts, with clear spanable elements like \"Param readOnly\", properties (\"This property is read-only\"), types (\"bool\") that can be useful for learning structured patterns in both code syntax understanding and natural language processing. / The segment contains a mix of documentation (natural language) and technical terms with clear span boundaries, representing valuable patterns for learning both syntax structures in programming languages as well as semantic relationships between properties like 'readOnly' and their descriptions. / Clear mix of language and programming constructs; spans can be identified for both types, representing valuable patterns in span segmentation across domains. / The segment contains a mix of language and technical terms, with clear span boundaries for both the description (\"Param readOnly [inherited]\") as well as metadata elements like property names (e.g., \"bool\"). It is coherent but lacks context which may affect its utility."}}
{"raw": "modifications to the array's members will affect them.", "type": "natural", "id": {"id": "398d7407-b168-452d-9a81-f819922f6bd8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with a subject (\"modifications\"), verb (\"will affect\"), and object (\"the array's members\"). Suitable for learning span segmentation in English prose. / The text segment contains a clear, declarative sentence with identifiable subject (\"modifications\"), verb (\"will affect\"), and object (\"the array's members\"). It is clean for training purposes as it represents coherent language patterns that can help the model learn span segmentation in English prose. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to missing context or variable names for full comprehension. / Clear sentence structure with a potential span for \"modifications to the array's members\" as an entity related to programming concepts, suitable for learning about language constructs and their effects on data structures in code documentation or educational materials. / lacks clear span boundaries and is too vague for effective training."}}
{"raw": "[inherited] Breaks a specific param-bind output connection on this param. Parameters:\ndestination_param param to unbind. 03d.", "type": "code", "id": {"id": "d9112f25-0d4b-4d95-8dbc-ddc7e7158482"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; useful for learning param-binding patterns in programming contexts. / Clear structure with identifiable spans; useful for learning param-binding patterns in programming contexts. / Clear structured elements with identifiable spans; represents valuable patterns for learning span composition in programming context. / The segment contains a mix of documentation (natural language) and technical notation, with clear markers for inherited behavior (\"[inherited]\") that can be segmented into meaningful spans such as \"Breaks\", \"[param-bind output connection]\", and the parameter description itself. / Clear structure with identifiable spans; useful for learning param-binding patterns in programming contexts."}}
{"raw": "o3djs_quaternions Quaterion rotationY(angle", "type": "code", "id": {"id": "cabfedad-208d-4740-b05a-2a4b185d42f1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans (function name, parameter). Well-suited for learning span segmentation in programming contexts. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear span for a function/method name and its parameters, suitable for learning programming patterns. / The segment lacks clarity and coherence; it's a fragment with unclear meaning, not representative of structured patterns for training. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "This property is read-only:\nNumber 03d CurveKeyinput [inherited]", "type": "code", "id": {"id": "49be5ec0-c6cf-4a13-99aa-9954c252c495"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear span segments with meaningful patterns; well-suited for learning structured content in programming contexts. / Clear structured elements with identifiable spans; well-suited for learning span composition in programming contexts. / Clear, structured representation of a property with inherited attributes in programming context. Suitable for learning span segmentation related to coding constructs. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / The segment contains a clear mix of language and technical notation, with identifiable spans such as \"Number\", \"[inherited]\", which can be useful for learning span segmentation in both contexts."}}
{"raw": "Note that they can still be used as temporaries, varyings, and function parameters inside shaders.", "type": "mixed", "id": {"id": "8ec23ec0-0404-49f1-9c51-86bc26a7fc79"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and programming concepts, with clear spans for phrases like \"temporaries\", \"varyings\", and \"function parameters\". It is coherent but lacks context to fully understand the domain-specific usage in shaders. / Clear sentence structure with identifiable spans for training, such as \"they\", \"temporaries\", and \"function parameters\". Well-formed text suitable for learning span composition in a tokenizer-free context. / Clear sentence structure with identifiable spans for training; coherent and representative of technical documentation language. / The segment contains a mix of technical language and programming concepts, with clear spans for phrases like \"temporaries,\" \"varyings,\" and \"function parameters.\" It's clean but lacks context which might be necessary to fully understand the usage within shaders. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"temporaries,\" \"varyings,\" and \"function parameters.\" It is clean for training purposes with clear compositional value in learning span segmentation within the context of shader programming."}}
{"raw": "Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source. Default = true. This is for helping with Param cycles.", "type": "mixed", "id": {"id": "43be2d87-2d9b-42ca-8e1a-ecf12132c536"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like syntax, with clear parameters that can be segmented into meaningful spans for learning span composition in both contexts. / The segment contains both a descriptive sentence and programming-related terms, which can help the model learn span segmentation in diverse contexts. However, it lacks clarity due to potential ambiguity with \"Param cycles.\" Further refinement could improve its utility as training data. / Clear spans of both descriptive text and programming-like syntax, representing useful patterns for span segmentation in a combined context. / Clear span segmentation between parameter descriptions and values; useful for learning both language constructs (natural) and programming conventions (code). / Clear mix of language and technical terms; spans can be identified for both syntax (code) and semantics (natural). Useful patterns emerge from the combination, representing a balanced training example across domains."}}
{"raw": "This property is read-only:\nString 03d ObjectBase_className [inherited] The concrete class name for an object derived from ObjectBase:", "type": "mixed", "id": {"id": "abd09e4c-6528-4d26-b297-c9c15fd302e6"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear mix of structured programming language elements (class names, properties) and documentation-style text that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully understand the usage or purpose within code structures; however, it still provides valuable patterns related to span segmentation in mixed content types. / The segment contains both a property description and an object class name, which are clear spans for learning span segmentation in the context of programming language documentation. It is clean but lacks contextual information that could improve its utility as training data. / The segment contains a mix of descriptive text and technical terms related to object-oriented programming, which can help the model learn span segmentation for both types of content. / Clear distinction between property description and object class name, representing both descriptive text (natural) and technical terms/code-like structure (\"ObjectBase_className\"). Suitable for learning span segmentation in a mixed context. / The segment contains a mix of programming concepts and documentation, with clear spanable elements like property descriptions (\"read-only\"), object names (\"String 03d ObjectBase_className\"), and inheritance notation ([inherited]). It is clean for training purposes as it represents valuable patterns in both natural language explanations (e.g., \"The concrete class name\") and code constructs."}}
{"raw": "Member Function Documentation\n! o3djs debug DebugHelper o3djs.debug createDebugHelper\n!o3d", "type": "mixed", "id": {"id": "87e9fc11-025e-44e0-a742-c5809255f6fb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear markers for function names (\"Member Function Documentation\") that can be used as spans; however, the presence of special characters like \"!\" may affect readability in natural text processing contexts. / The segment contains a mix of programming documentation and comments, with clear markers for function names (\"Member Function Documentation\") and language-specific syntax (e.g., \"!\" indicating an O3D comment). This provides valuable patterns in span segmentation between code constructs and natural language descriptions. / The segment contains a mix of programming documentation and comments, with clear markers for function names (\"Member Function Documentation\") and language-specific syntax (e.g., \"!\", \"@\"). This provides valuable patterns in span segmentation between code constructs and natural language descriptions within the context of software development. / The segment contains a mix of programming language syntax and documentation, with clear markers for function names (\"Member Function Documentation\") that can be segmented into meaningful spans (e.g., \"o3djs debug\", \"DebugHelper\"). It is clean but lacks context or content to fully represent the span composition. / The segment contains a mix of programming comments and function documentation, which includes clear span elements like keywords ('o3djs', 'DebugHelper') that are valuable for learning how to identify spans in code contextually combined with natural language descriptions."}}
{"raw": "Member Function Documentation\n03djs rendergraph ViewInfo.destroy Boolean opt_destroyDrawContext Boolean opt_destroyDrawList Destroys the various objects created for the view. Parameters: opt_destroyDrawContext True if you want view's DrawContext destroyed.", "type": "mixed", "id": {"id": "4371765b-890b-42b6-bbb7-529619849b62"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation (natural language) and function signature with parameters, which provides clear examples for span segmentation in both contexts. / The segment contains both a function signature and its description, which are clear spans for learning span segmentation in the context of programming documentation. It is clean but lacks contextual richness due to brevity. / The segment contains a mix of programming documentation with clear function descriptions and parameter lists, which are ideal for learning span segmentation in both contexts. / The segment contains both documentation (natural language) and function signature with parameters, providing a clear example of span segmentation between descriptive text and programming constructs. It's clean for training purposes as it represents valuable patterns in the context of software development APIs or libraries documentation. / Clear spans for both function documentation and parameter descriptions; represents a valuable pattern of span segmentation in technical writing."}}
{"raw": "FileRequest Class Reference\nInherits 03d ObjectBase:\nList of all members\nDetailed Description\nFileRequest object is used to carry out an asynchronous request for a file to be loaded. Its use parallels that of XMLHttpRequest; you create one, call open, set the onreadystatechange callback, and call send.", "type": "mixed", "id": {"id": "4130b225-f4b4-435e-8f09-7fc218a4291a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7333333333333334, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of structured information (class reference, inheritance details) and descriptive text that can be segmented into meaningful spans for training purposes. It is clean but lacks explicit span markers which are essential in tokenizer-free models like X-Spanformer. / The segment contains a mix of technical descriptions and programming concepts, with clear references to classes (\"FileRequest Class Reference\"), inheritance (\"Inherits ObjectBase:\"), methods (e.g., \"open\", \"send\"), which are valuable for learning span segmentation in both natural language explanations and code constructs. / The segment contains a mix of descriptive text and technical terms related to programming, with clear references that can be segmented into meaningful spans for training purposes. It is coherent but lacks detailed examples or code snippets which could improve its utility as an example in the X-Spanformer model's learning process."}}
{"raw": "o3djs rendergraph viewInfo viewInfo A Debug object to help with debugging 03d apps. A debug helper object provides functions to help debug your 03d application and manages the resources needed to do that for you. For example it can add axes, spheres and boxes to your transforms as well as draw lines in 3d space given 2 points. Parameters: pack Pack for this debug object to use to manage its resources.", "type": "mixed", "id": {"id": "7c64efb3-89d1-4596-b3ed-0b3f562bb2d3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical terms related to debugging in the context of an application, which can help with learning span segmentation for both programming constructs (code) and explanatory prose (natural language). / Contains both programming concepts and object-oriented terminology, useful for learning span segmentation in a hybrid context. / The segment contains a mix of programming concepts and object descriptions, which can help the model learn span segmentation for both technical terms (like \"Debug\", \"03d apps\") and natural language explanations (\"A debug helper object provides functions to...\"). / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"o3djs rendergraph viewInfo\", which is likely to represent the name or function in code context; it also includes natural language explanations like 'A Debug object' indicating its purpose. This combination provides valuable patterns for learning span segmentation across both domains. / The segment contains a mix of descriptive text and technical terms related to debugging in the context of an application, which likely includes both structured programming concepts (code) as well as explanatory prose that can help with learning span segmentation for natural language elements intertwined within code comments or documentation."}}
{"raw": "'03d. WorldViewProjectionInverseTransposeParamMatrix4'\nReturns:\nThe newly created Param or null on failure. Param 03d. ParamObject-getParam String param_name )", "type": "code", "id": {"id": "66bfe6ae-7116-4a5b-8d69-796397a82f8c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, with clear identifiers for spans such as '03d', '.WorldViewProjectionInverseTransposeParamMatrix4' which can be useful in learning span segmentation patterns across both code constructs and natural descriptions. / The segment contains a mix of programming language syntax and documentation, with clear identifiers for spans such as '03d' which can be used to train the model on recognizing different types of structured data within code comments or descriptions. / Clear structured elements with identifiable spans; well-formatted for training purposes, representing valuable patterns in programming constructs and parameter referencing. / Clear structured elements, representing valuable patterns for learning span composition in programming context. / Clear structured elements with meaningful spans; clean and well-formed for training purposes, representing valuable patterns in programming syntax and function calls."}}
{"raw": "Id 03d ObjectBase clientld [inherited] Unique id of the object:\nThis id will be unique, even across multiple O3D clients in the same page. This property is read-only:\nString 03d NamedQbject name [inherited] The object's name. Setting this has no meaning to 03D, but is useful for debugging and for the functions Client-getObjects, Pack:getObject; RenderNode_getRenderNodesByNamelnTree and RenderNode-getTransformsByNameInTree which search for objects by name:\nReimplemented from 03d", "type": "mixed", "id": {"id": "cfb96379-3d83-4a35-9576-9d9203d8be3f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both structured programming elements and comments, useful for learning span segmentation in a diverse context. / The segment contains a mix of programming concepts and documentation, with clear identifiers for objects (e.g., \"Id\", \"[inherited]\", unique id) that can be segmented into meaningful spans useful in training the model to understand both code constructs and their descriptions. / Clear distinction between object properties and descriptions, useful for learning span segmentation in both programming contexts and human-readable explanations. / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to identify spans in both contexts effectively. It is clean but lacks context for some terms like \"03d,\" making it somewhat ambiguous yet still useful as an example with clear structural elements that are representative of code documentation mixed with natural language descriptions. / The segment contains a mix of descriptive text and technical terms related to object properties, which can help the model learn span segmentation in both contexts. It is well-structured with clear identifiers for different spans (e.g., \"Id\", \"[inherited]\", etc.)."}}
{"raw": "Safari 4 for Mac crashes when the user pulls off a tab that is displaying an O3D content area.", "type": "natural", "id": {"id": "bf5a0e3c-6020-42d6-8321-6cad7c68c871"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with a clear problem statement involving both software (Safari) and an application feature (O3D content area). Suitable for learning about error reporting in user interfaces. / Clear sentence structure with a distinct subject, verb phrase and object; represents useful patterns for span segmentation in user reports. / The segment contains a mix of both technical language and software versioning, which can help the model learn to identify spans related to different domains (software names vs user actions). It is coherent but lacks context for meaningful span segmentation without additional data. / The segment contains a mix of product name, software version (code-like), and an issue description in plain English which can help the model learn to distinguish between different types of spans within natural language text combined with technical terms. / Clear sentence structure with a clear issue description; useful for learning context and error reporting patterns in text."}}
{"raw": "[inherited] Sets the priority of this render node. lower priorities are rendered first:\nFloat4 03d Viewport viewport The position and size to set the viewport in [left; top, width; height] format The default values are (0.0, 0.0, 1.0, 1.0). In other words, the full area. Note: These values must describe a rectangle that is 100% inside the client area.", "type": "mixed", "id": {"id": "f7a3582f-b396-4ac3-8ed8-d4aceacba104"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical parameters, with clear span boundaries for both the explanation (\"Sets the priority...\") and parameter descriptions (e.g., \"Float4\", \"[left; top]\"). It is clean but lacks context on how these values are used in practice. / The segment contains a mix of configuration settings and descriptions, with clear spanable elements like \"Float4\", \"[left; top]\", etc., which are useful for learning structured patterns in both code syntax and natural language explanations. / The segment contains a mix of technical language and configuration settings, with clear spanable elements like \"Float4\", \"[left; top]\", etc., which are useful for learning structured patterns in both code syntax and natural descriptions. / The segment contains a mix of configuration settings and descriptive text, with clear spanable elements like \"Float4\", \"[left; top]\", etc., which are valuable for learning both natural language descriptions in code context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "By default, gadget XML specs are cached by the gadgets server: When developing gadgets and making frequent changes to the XML spec, you may want to disable gadget caching, so that changes are immediately reflected every time the page is refreshed: To disable caching, append the ?nocache suffix to the URL of your gadget XML specification. For example: http: / / Www. mydomain _ com/ mygadget . xml ?", "type": "mixed", "id": {"id": "4bcc593c-bd3d-494d-92a9-bcd18c738462"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of URLs and XML specifications, with clear instructions on disabling caching for gadget development; it has meaningful spans that can be segmented into actionable parts (URL structure, suffix usage). / Clear structure with identifiable spans (URLs, XML spec names), representing both URL patterns and instructional content for disabling caching in a gadgets server context. / The segment contains a mix of URLs and XML specifications, with clear instructions for disabling caching; it has meaningful spans that can be segmented into actionable parts (URL structure, suffix usage). It is clean but lacks natural language context which could improve its utility as training data. / The segment contains a clear instructional pattern with identifiable spans for both URL structure and XML specification content, representing valuable patterns in span composition across different domains (natural language instructions combined with technical URLs). / The segment contains a mix of URLs and instructions, with clear examples that can be segmented into meaningful spans for learning purposes. It is clean but lacks punctuation which could affect readability slightly in training data context."}}
{"raw": "Constructor\n03djs.particles OneShot lo3djs-particles ParticleEmitter emitter I03d Transform opt_parent An object to manage a particle emitter instance as a one shot: Examples of one shot effects are things like an explosion, some fireworks Parameters: emitter The emitter to use for the one shot. opt_parent The parent for this one shot. Member Function Documentation\n03djs.particles OneShot setParent !", "type": "code", "id": {"id": "8273485c-c8aa-481a-9644-701ac1a0e5b8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements with consistent naming conventions and parameter descriptions suitable for learning span segmentation in programming contexts. / Clear structure with identifiable spans like class names, method signatures and parameters; well-suited for learning span segmentation in programming contexts. / Clear structure with identifiable spans for constructor, parameters and member functions in a programming context. Well-suited to learn span segmentation patterns specific to coding constructs. / Clear structure with identifiable spans, such as class names and method signatures; well-suited for learning span segmentation in programming contexts. / Clear structured elements like class names, methods and parameters; well-suited for learning span composition in programming context."}}
{"raw": "ENABLING GOOGLE SDKs IF YOUR PROJECT ALREADY HAS A WAR\nDIRECTORY\nTo enable Google Web Toolkit; right-click your project and select Google > Web Toolkit Settings.", "type": "natural", "id": {"id": "5bae67e5-e340-4266-a6af-ab28e79151a1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains both instructions (natural language) and references to software settings, which can help the model learn span segmentation for a variety of contexts including user guidance in technical environments. / The segment contains a mix of instructions (natural language) and technical terms related to software development, which can help the model learn span segmentation in both contexts. However, it lacks clear delimiters for spans; adding them could improve its utility as training data. / Clear instructional text with identifiable spans for actions and outcomes, suitable for training a span-aware model in understanding procedural documentation. / Clear instructional text with identifiable spans for actions and outcomes, suitable for learning span segmentation in a non-code context. / Clear instructional text with identifiable spans for actions and outcomes, suitable for training a span-aware model in processing user guidance documents."}}
{"raw": "Instead, the mandatory comment fields described above should indicate the vertex and pixel shader entry points The sample COLLADAConverter can be used to automatically convert CgFX and FX shader files containing techniques to the O3D format:\nMultipass Techniques FX and CgFX files may contain techniques with more than one pass.", "type": "mixed", "id": {"id": "2f8876dd-c577-4d81-9b69-23d6d8509c85"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and programming-related instructions, which can help the model learn span segmentation for both human-readable text (natural language) and specific syntax or terminology related to code constructs like shader entry points in graphics processing. / The segment contains a mix of technical language and instructions, with clear references to programming concepts like shader entry points that can be segmented into meaningful spans for training purposes. It is clean but lacks context which might affect its utility as standalone data. / Contains both technical descriptions and programming-related terms, with clear structure for span segmentation in a context that combines language (natural) and markup/code constructs (code). / Contains both technical terms and phrases that can be segmented into meaningful spans, representing a mix of programming concepts (e.g., shader entry points) with descriptive language suitable for training an encoder on span segmentation in code documentation. / The segment contains a mix of technical language and instructions, with clear references to programming concepts (e.g., \"vertex\", \"pixel shader entry points\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context-specific examples or varied patterns which could improve its utility as training data."}}
{"raw": "Module XML files should reside in your project's root package\nIf you are using the standard project structure your module XML can be as simple as the following example:\n<module rename-to-\"dynatable\"> <inherits name-\"com google gwt.user:User\" /> <entry-point class-\"com google gwt sample dynatable client DynaTable\" /> <lmodule>\nLOADING MODULES\nModule XML files are found on the Java classpath: Modules are always referred to by their logical names.", "type": "mixed", "id": {"id": "189f3c0f-927c-4c19-9a7d-2ff10d22bfa2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "The segment contains a mix of XML-like structures and plain text, with clear delineation between them that can be used to train the model on span segmentation in both contexts. However, there are some syntactical errors (e.g., \"lmodule\" instead of \"<library-module>\") which may need correction for optimal training utility. / The segment contains both XML markup and comments that can be segmented into meaningful spans, representing valuable patterns for learning span composition in a mixed content environment. It is clean but lacks coherence due to the abrupt ending of text (\"<lmodule>\"). / The segment contains a mix of XML-like tags and plain text, which may confuse the model due to its unconventional structure; lacks clear span segmentation patterns for training purposes. / The segment contains a mix of XML-like structures and plain text, which can help the model learn to identify both programming constructs (XML tags) as well as general language patterns for span segmentation. However, there are some inconsistencies in formatting that may need attention during training data preparation. / The segment contains a mix of XML-like structures and plain text, which can help the model learn to distinguish between different types of spans in both programming contexts (XML tags) and natural language descriptions. However, it lacks clarity due to potential formatting issues like \"lmodule\" instead of \"<lmodule>\"."}}
{"raw": "For example: float4 pixelShaderFunction (PixelShaderInput input) COLOR return float4 (1, 0, 0,1)\nor\nuniform float4 myColor;\nfloat4 pixelShaderFunction (PixelShaderInput input) COLOR return myColor;\nshader might do some lighting calculations For example: float4 pixelShaderFunction (PixelShaderInput input) COLOR float3 surfaceToLight = normalize (lightWorldPos input.worldPosition) float3 normal = normalize (input.normal) float3 surfaceToView = normalize (viewInverse [ 3] XYZ input.worldPosition) ;", "type": "mixed", "id": {"id": "6089e1fe-649f-463b-8cd7-a6f969fc6f7c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming constructs and comments, with clear span patterns for learning segment composition in a shader context. / Contains both programming constructs and comments, with clear span patterns for learning. / Contains both programming constructs and comments, with clear span patterns for learning segment composition in a shader context. / The segment contains clear patterns of both programming constructs and comments, representing valuable learning examples for span segmentation in a tokenizer-free context. / Clear structure with identifiable spans for shader function definitions and parameters, suitable patterns present for learning span composition in programming context."}}
{"raw": "The Creating a Heads-Up Display example discussed in this chapter modifies the position of the virtual camera and the transformation matrices of the 2D objects to animate the view and the 2D objects.", "type": "mixed", "id": {"id": "45002cde-f5a2-4891-932c-bb7a75b0cee3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans for learning, such as \"Creating a Heads-Up Display,\" \"virtual camera,\" etc., which are relevant to both natural language processing (NLP) tasks in code documentation contexts. / The text contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"Creating a Heads-Up Display,\" which is likely to represent valuable patterns for learning span composition in both natural language processing (NLP) tasks related to code documentation. / Contains both descriptive text and technical terms related to programming, useful for learning span segmentation in a context that combines language with coding concepts. / Contains both descriptive text and technical terms related to programming, suitable for learning span composition in a mixed context. / The segment contains a mix of descriptive text and technical terms related to programming concepts, which can help the model learn span segmentation for both types of content."}}
{"raw": "This property is read-only. Id 03d ObjectBase clientld [inherited] Unique id of the object:\nThis id will be unique, even across multiple 03D clients in the same page.", "type": "mixed", "id": {"id": "5005ac11-b89e-4c0f-ab80-bc873715747f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like identifiers, which can help the model learn to distinguish between different types of spans in both contexts. However, some elements like \"03D\" could be ambiguous without context on whether they are code or natural language references; thus it is not perfect but still valuable for training purposes. / The segment contains a mix of descriptive text and programming-like identifiers, which can help the model learn to distinguish between different types of spans in both contexts. However, some ambiguity with terms like \"03D\" could be clarified for better training outcomes. / The segment contains both structured programming comments and variable names, providing clear examples of span segmentation in a coding context with some inherent ambiguity due to the mix. / The segment contains a mix of readable text and programming-like identifiers, which can help the model learn to distinguish between different types of spans in both contexts. However, some characters are not standard (e.g., '03d' instead of '3D'), indicating potential issues with data cleanliness that should be addressed for optimal training utility. / The segment contains a mix of descriptive text and programming-like identifiers, which can help the model learn span segmentation for both types of content. However, there are some inconsistencies in formatting (e.g., \"03d\" vs \"03D\") that could confuse learners; thus it is not perfect but still valuable."}}
{"raw": "This property is read-only\n03d. MatrixAComposition Class Reference\nInherits 03d ParamObject:\nList of all members_", "type": "mixed", "id": {"id": "cfbea268-f0d3-46e8-ab92-93289fbbca5f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains a mix of programming language syntax and comments, with clear spanable elements like class names (\"MatrixAComposition\") and properties (\"read-only\"). The structure is coherent for learning both natural text patterns (like descriptions) and code constructs. / The segment contains a mix of programming language syntax and documentation, which includes clear identifiers like class names (\"MatrixAComposition\") that can be segmented into meaningful spans for learning purposes. It also references inheritance in code structure (Inherits), providing compositional value relevant to both natural languages' descriptions ('read-only') as well as coding constructs ('List of all members_'). / The segment combines both a property description and references to class members, which are clear spans for training purposes in understanding the relationship between properties/members within programming contexts. / Contains both programming constructs and documentation, with clear span segmentation opportunities for a tokenizer-free model. / The segment contains a mix of programming language syntax and documentation, with clear markers for different spans such as property names (\"This property is read-only\"), class references (\"03d. MatrixAComposition Class Reference\"), inheritance notation (\"Inherits 03d ParamObject:\"), lists (\"List of all members_\"). It has structural clarity suitable for training a span-aware model that can handle both code and natural language elements, representing valuable patterns in mixed content types."}}
{"raw": "RenderEvent Class Reference\nList_of all members\nDetailed Description\nThis class is used to pass infomation to a registered onrender callback:\nPublic Attributes\nNumber elapsedTime Number renderTime Number activeTime\nNumber transformsProcessed\nNumber transformsCulled\nNumber drawElementsProcessed\nNumber drawElementsCulled\nNumber drawElementsRendered Number primitivesRendered\nMember Data Documentation\nNumber 03d", "type": "mixed", "id": {"id": "ad23e530-3158-458c-999f-5bf95db9fd75"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related attributes, which can help the model learn to identify spans in both contexts. However, there are some inconsistencies like \"List_of all members\" that could be clarified for better training utility. / The segment contains a mix of descriptive text and technical attributes, which can help the model learn to distinguish between different types of spans in both domains. However, it lacks context for some terms (e.g., \"03d\"), affecting clarity slightly. / The segment contains a mix of descriptive text and technical attributes, which can help the model learn span segmentation for both documentation (natural language) and programming constructs (code). Despite some repetition (\"Number\"), it maintains clear structure with identifiable spans like class names, attribute lists. / The segment contains a mix of descriptive text and technical attributes, which can help the model learn both span segmentation in prose as well as structured data representation typical for programming contexts. / Contains a mix of descriptive text and programming-like attributes, with clear structure for span segmentation between class names, descriptions, attribute lists, and documentation references."}}
{"raw": "Parameters:\ndestination_param param to unbind.", "type": "mixed", "id": {"id": "3f3d8fef-2134-4e2f-866b-8a466e474440"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear parameters and instructions for unbinding, representing a useful pattern in both documentation (natural language) and configuration settings (code). / The segment contains a clear parameter name and its purpose, which is useful for learning span composition in both programming contexts (code) with the term \"param\" indicating variable binding context typical of code structures blended seamlessly into natural language explanation (\"destination_param\"). / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn span segmentation for both types of content. It is clear but lacks context or examples that could improve its utility as training data. / Clear parameter declaration with identifiable span for unbinding, suitable pattern recognition in programming context. / Clear parameter declaration suitable for span segmentation and learning patterns in programming context."}}
{"raw": "t.isAClassName ( '03d. Transform' ) ; t.isAClassName ( '03d. ParamObject' ) ; t.isAClassName ( '03d. Shape' ) ;\ntrue\ntrue\nfalse\nParameters:\nclass name Name of class to check for: Returns:\ntrue if this object is a or is derived from the given class name.", "type": "mixed", "id": {"id": "243de110-ce5b-4347-b691-41b8d4b8b4ff"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs (class names) and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to its brevity; additional context could improve training utility. / The segment contains a mix of programming constructs (class names) and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to its brevity; more examples would be beneficial for training purposes. / The segment contains clear, structured elements of programming classes and methods that can be segmented into meaningful spans for learning span composition in a tokenizer-free context. It is clean but lacks contextual natural language explanations which might reduce its utility slightly compared to mixed content types. / Contains both structured programming elements and comments, which can help in learning span segmentation for a tokenizer-free model. The clear distinction between class names as spans is valuable training data. / Contains both structured programming elements and comments, showing clear span segmentation opportunities in a mix of language types."}}
{"raw": "Samples/Utilities Changes Samples: Improved performance of Prince IO. The sample was previously hard-coded to run at 20fps. Samples: Several improvements to the Beach demo including: The ocean and the island now display the correct textures and have shaders that mix between two textures based on vertex alpha. There is an animated camera. There is a proxy island that loads quickly before the detailed island loads.", "type": "mixed", "id": {"id": "25f86ed5-eb60-48a7-baaa-893e4b92a374"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical details about software samples, with clear references to specific features (improved performance at different frames per second) that can be segmented into meaningful spans for training purposes. / The segment contains a mixture of descriptive text and technical terms related to software samples, which can help the model learn span segmentation for both narrative descriptions (natural language) and specific features or changes in code-related content. / Contains a mix of descriptive text and technical terms related to software samples, which can help the model learn span segmentation for both narrative descriptions (natural language) and specific features or improvements in programming context (code). / The segment contains a mixture of descriptive text and technical details, which can help the model learn to identify spans related both to narrative descriptions (natural language) as well as specific improvements or changes in code-related contexts (\"Samples/Utilities Changes Samples\"). / The segment contains a mixture of descriptive text and technical details about software changes, which can help the model learn to distinguish between different types of spans in both contexts."}}
{"raw": "float3 halfVector = normalize (surfaceTolight + surfaceToView) float4 litResult = lit (dot (normal, surfaceTolight)_ dot (normal_ halfVector) shininess) ; return float4 (diffuse * litResult.Y) ) rgb , diffuse.a) ;", "type": "code", "id": {"id": "cbda95ef-8be9-4274-bc4e-48885c5b8090"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear programming constructs with identifiable spans for learning; well-formed and representative of coding patterns. / Clear programming constructs, useful for learning span segmentation and composition in a coding context. / Clear, structured programming constructs with meaningful spans for learning; well-representative of target domain (code). / Clear programming constructs with meaningful spans; well-suited for learning span composition in a coding context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "The next chapter (to be provided), Animation and Skinning, shows you how to animate objects using the 03D animation and skinning system.", "type": "natural", "id": {"id": "b908113f-b08a-45a8-8ce4-aee7e8ea8378"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear narrative structure with identifiable spans for chapter title, section heading and descriptive text. Well-suited to demonstrate span segmentation in a textual context. / Clear narrative structure with identifiable spans for training (chapter title, description). Well-suited to learn span composition in contextually rich text. / Clear prose with identifiable spans for learning (\"next chapter\", \"Animation and Skinning\", etc.) / Clear narrative structure with identifiable spans for chapter title, description of content to follow; clean and coherent text suitable as training data. / The segment contains a mixture of descriptive text and technical instructions, with clear references to \"chapter,\" which can be segmented into spans like 'The next chapter' (natural language) and '(to be provided), Animation and Skinning,' indicating an upcoming section on 3D animation techniques. This is coherent for training purposes as it includes both natural language descriptions of content structure ('Animation and Skinning') along with a technical reference to the learning material's organization, which could help in understanding span segmentation between descriptive text (natural) and instructional directives or references ((code))."}}
{"raw": "This property is read-only\nArray 03d Buffer fields [inherited] The fields currently set on the buffer:\nThis property is read-only: String 03d NamedQbiect name [inherited] The object's name. Setting this has no meaning to O3D, but is useful for debugging and for the functions Client-getObjects; Pack-getObject; RenderNode_getRenderNodesByNamelnTree and RenderNode-getTransformsByNameInTree which search for objects by name. Reimplemented from 03d", "type": "mixed", "id": {"id": "cb99223b-d208-413d-b00e-52a09afbc743"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical terms related to object properties, which can be segmented into meaningful spans for learning purposes. Despite some repetition (\"This property is read-only\"), it provides clear examples that are representative of the target domain (mixed content). / The segment contains a mix of descriptive text and technical terms related to object properties, which can help the model learn span segmentation in both contexts. However, it lacks clear examples for some programming constructs like arrays or buffer fields that could improve its utility as training data. / The segment contains a mix of documentation (natural language) and O3D object properties, which are useful for learning span segmentation in both contexts. However, the clarity could be improved by separating code snippets from explanatory text to enhance training utility. / The segment contains a mix of documentation (natural language) and technical details related to programming constructs, which can be segmented into meaningful spans for training purposes. It is clean but lacks sufficient context or examples that would make it more representative as standalone data points. / The segment contains a mix of property descriptions and method/function names, which can be segmented into meaningful spans for learning span composition in both programming context (code) and descriptive text elements (natural language). However, it lacks clarity due to the presence of similar-looking strings (\"03d\" vs \"String 03d\") that could confuse learners."}}
{"raw": "03d. Param:= .unbindOutputs [inherited] Breaks all param-bind output connections o this param. Member Data Documentation\nString 03d ObjectBase_className", "type": "mixed", "id": {"id": "32f6f90c-8e0e-4905-aeb0-77cfd0852824"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear identifiers for spans like \"Param\", \"[inherited]\", etc., which are valuable patterns to learn span segmentation in both code constructs (e.g., function names) and natural descriptions (\"Member Data Documentation\"). / The segment contains a mix of programming-related terms and documentation, with clear structured elements like object names (\"String\", \"03d\") that can be segmented into meaningful spans for learning purposes. Despite some spelling inconsistencies (e.g., 'Param' vs '.param'), it retains enough clarity to serve as training data. / Contains a mix of programming language syntax and documentation, with clear spans for both keywords (\"Param\", \"Breaks\") and phrases (\"param-bind output connections\"). The segment is clean but lacks context to fully understand the code's purpose or function. / The segment contains a mix of programming language syntax and documentation, with clear identifiers for object names (\"String\") that can be segmented into meaningful spans useful in training an encoder to understand both natural language descriptions (like \"Member Data Documentation\") alongside code constructs such as class naming conventions. / The segment contains a mix of programming concepts and documentation, with clear identifiers for spans like \"Param\", \"[inherited]\", etc., which are valuable patterns to learn span composition in both natural language descriptions related to code behavior (\"Breaks all param-bind output connections\") and technical terms."}}
{"raw": "bool 03d. ParamObject removeParam Param param Removes a Param from a ParamObject: [inherited]\nThis function will fail if the param does not exist on this ParamQbject or if the param is unremovable. Parameters:\nparam param to remove_ Returns:\nTrue if the param was removed.", "type": "mixed", "id": {"id": "1f3ff327-1d60-4b7b-8d6b-7a812b9d2f6d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both structured programming language elements and descriptive text, providing a good mix of patterns for span segmentation in X-Spanformer training data. / The segment contains a mix of programming language syntax and comments, with clear indications for spans such as function names (\"removeParam\"), parameters (\"param to remove_\"), types (\"bool\", \"True\"), which are valuable patterns for learning span composition in both code understanding and natural language processing. / The segment contains a mix of programming language syntax and comments, with clear identifiers for parameters (\"param\", \"removeParam\") that can be segmented into meaningful spans; it represents valuable patterns in span composition across both code constructs (e.g., function names) and natural language descriptions. / The segment combines both programming concepts and documentation, providing clear examples of span segmentation between function descriptions (natural language) and parameters/code elements (code). It is coherent for training purposes with a mix of natural text explaining code constructs which are valuable learning patterns for the model. / Clear distinction between language and programming constructs; spans can be identified for both syntax (code) and semantics (natural)."}}
{"raw": "The dimensions of the texture and the canvas object match those of the quad in order to get pixel-accurate results with the appropriate orthographic projection: The resulting rectangle Shape is positioned at the origin.", "type": "mixed", "id": {"id": "b30fd843-21d7-4e50-9ada-4a93f192c9b8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text contains both descriptive language and technical terms related to graphics programming, which can help the model learn span segmentation for a variety of contexts including descriptions (natural) combined with specific terminology or code constructs that are relevant in software development environments. / The text contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"texture dimensions,\" \"canvas object,\" etc., which are relevant for learning span composition in both natural language processing (NLP) tasks related to code documentation or descriptions. / The segment contains a mix of programming concepts and descriptive text, with clear references to object properties (dimensions) that can be segmented into meaningful spans for learning purposes. It also includes technical terms like \"texture,\" which are relevant in both natural language descriptions related to graphics or UI design as well as code comments/documentation contexts. / Contains both descriptive language and technical terms related to graphics programming, showing clear span segmentation opportunities between concepts like \"texture\", \"canvas object\", etc., which are valuable for learning context-aware spans in a mixed-content environment. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, such as \"dimensions,\" \"texture,\" \"canvas object,\" etc., which are relevant for learning span composition in both code-related contexts (e.g., programming) and natural language descriptions."}}
{"raw": "shader can get colors or values from a texture. In your pixel shader code, use the texZD () function to return a Float4 color from a 2D texture.", "type": "mixed", "id": {"id": "b6ad3169-2dba-49c9-a9dc-7d6c5fd43924"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming instructions and function names, providing clear examples for span segmentation in both contexts. / The segment contains a mix of programming language syntax and descriptive text, with clear references to functions (texZD) that can be segmented into meaningful spans for learning purposes. It is well-formed as an instructional example combining natural language explanations within code context. / The segment contains a clear instructional phrase followed by an example of programming syntax, demonstrating both language and coding elements suitable for span segmentation learning. / Clear blend of programming instructions and terminology, with identifiable spans for both language (\"shader can get colors\") and function/code reference (\"texZD()\"). Represents valuable patterns in span segmentation across natural language descriptions and code syntax. / Clear mix of programming instructions and function names, with identifiable spans for both language elements and technical terms."}}
{"raw": "Handling Events\nIntroduction The 03D plug-in supports several ways of receiving events from the host operating system.", "type": "natural", "id": {"id": "9fcf0117-95a5-4acd-aaf8-f6b7f7f1f362"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear prose structure with identifiable spans for \"Handling Events,\" \"Introduction,\" and other phrases; clean, coherent text suitable as training data. / Clear, coherent prose with a discernible structure; suitable for learning span segmentation in non-code contexts. / Clear prose with identifiable sections; useful for learning span composition in text. / Clear prose with identifiable spans; useful for learning sentence and phrase segmentation in NLP tasks. / Clear prose structure with identifiable spans (headings, paragraphs). Suitable for learning span segmentation in non-code text."}}
{"raw": "view View matrix to transform with: projection Projection matrix to transform with: clientWidth width of client area: clientHeight height of client area Returns:", "type": "mixed", "id": {"id": "ef8da291-81bf-4a63-bec7-4dc4f047de73"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains a mix of programming constructs and comments, with clear spanable elements like function names (\"view\"), parameters (e.g., \"projection\", \"clientWidth\"). Despite being somewhat informal due to the presence of natural language explanations within code-like structures, it offers valuable patterns for learning both syntax recognition in coding contexts as well as contextual understanding. / The segment contains a mix of programming concepts and language, with clear spans for potential learning (e.g., \"view\", \"matrix to transform with:\", etc.). It is clean but lacks context which could be beneficial in training data. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans such as function names (\"view\"), keywords (\"matrix\", \"transform\", etc.), parameters (\": projection Projection matrix to transform with:\", \": clientWidth width of client area:\"), return values (\"Returns:\"). It is clean but lacks context or content beyond the code-like structure. / The segment contains a mix of programming constructs and comments, which can help the model learn span segmentation for both types of content. However, it lacks context or complete sentences that would make its compositional value higher. Cleanness is good but could benefit from more structured examples with clearer separation between code snippets and natural language explanations. / Contains both programming constructs and descriptive text, useful for learning span segmentation in a diverse context."}}
{"raw": "For example: sampler mySampler;\nfloat4 pixelShaderFunction (PixelShaderInput input) COLOR return texZD (mySampler, input.texCoords) ;\nFor cube-mapped textures, use the texCUBE ( ) function: One advantage of the pixel shader is that it allows you to perform per-pixel computations for any attribute value.", "type": "mixed", "id": {"id": "b21a95e7-d5ff-4782-8656-6389634681e0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming constructs (code) and explanatory text, providing a diverse range of spans for learning span segmentation in different contexts. / Contains both programming constructs (code) and explanatory text, offering diverse span patterns for learning. / The segment contains a mix of programming constructs (code) and explanatory text, providing clear examples for span segmentation in both contexts. It is well-formed with identifiable spans like function names (\"sampler\", \"texZD\"), code snippets (\"float4 pixelShaderFunction (PixelShaderInput input) COLOR return texZD (mySampler, input.texCoords);\"), comments explaining the purpose of functions and their usage which are valuable for learning span composition in a mixed context. / Clear spans of both programming constructs and explanatory text, representing valuable patterns for learning span segmentation in a mixed context. / The segment contains both programming constructs (code) and explanatory text, which can help the model learn to distinguish between different types of spans in a unified context."}}
{"raw": "This support is modeled after standard DOM3 mechanisms as much as possible and includes support for the following: Event callbacks Event listeners for multiple handlers Keyboard events\nEvent Callbacks The lowest-level interface to 03D events, for those who want things as fast and unfiltered as possible, is through the event callback API: pluginObject _ client.", "type": "mixed", "id": {"id": "e5b08e8e-7276-4a6c-826e-be5ea06bb52d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and programming concepts, with clear references to DOM3 mechanisms (natural language) and event callbacks API for plugins (code). It has identifiable spans that can be used as training data due to its compositional value in representing both natural language explanations alongside code constructs. / The segment contains a mix of technical descriptions and programming concepts, with clear references to DOM3 mechanisms (natural language) alongside API usage examples in the context of event handling for web development (code). It demonstrates meaningful spans that can be segmented into natural-language explanations as well as code-related terms. / The segment contains a mix of technical descriptions and programming concepts that can be segmented into meaningful spans, such as \"Event callbacks,\" \"pluginObject _ client.\" It is clean but lacks context for full comprehension by the model. / The segment contains a mix of technical descriptions and programming concepts with clear, identifiable spans for both \"Event Callbacks\" as an object or concept in DOM3 mechanisms (natural language) and the API reference (\"pluginObject _ client.\" - code). It is clean but lacks context which could be beneficial. / The segment contains both structured programming concepts (event callbacks, event listeners) and descriptive text that can help the model learn span segmentation in a coding context with embedded explanations."}}
{"raw": "Detailed Description\nDrawList gets used during rendering to collect DrawElements to render: Each Material references a DrawList: Depending on the material, as DrawElements get collected they will be put on different DrawLists.", "type": "mixed", "id": {"id": "627927c8-ab3a-4a13-b505-e4d44e8525a3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear distinction between descriptive text and technical terms related to rendering processes, with identifiable spans for both \"DrawList\" as a concept (natural language) and its usage in different contexts within the code domain. / The segment contains a mix of technical descriptions and programming concepts, with clear references to terms like \"DrawList,\" which can be segmented into meaningful spans for learning purposes. It is coherent but lacks context that could improve its utility as training data. / The text contains a mixture of technical descriptions and programming concepts, with clear references to 'DrawList', which can be segmented into meaningful spans for learning span composition in both contexts. It is clean but lacks explicit code examples or natural language explanations that could enhance its training utility further. / The segment contains a mix of technical descriptions and programming concepts, with clear references to terms like \"DrawList,\" which can be segmented into meaningful spans for learning span composition in both natural language context (descriptions) and code constructs (references). / The segment contains a mix of technical descriptions and programming concepts, with clear references to 'DrawList', which can be segmented into meaningful spans for learning span composition in both contexts. It is clean but lacks explicit code examples or natural language explanations that could improve its utility as training data."}}
{"raw": "var t 3 pack.createObject ( '03d. Transform' ) ;\nt.isAClassName ( '03d. Transform' ) ;\ntrue\nt.isAClassName ( '03d. ParamObject' ) ; t.isAClassName ( '03d. Shape' ) ;\ntrue\nfalse\nParameters:\nclass name Name of class to check for Returns:\ntrue if this object is a or is derived from the given class name.", "type": "code", "id": {"id": "7a192bbd-d74c-499c-ba44-7f35badf2e1f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and comments, with clear spanable elements like variable declarations (`var t`), method calls (e.g., `t.isAClassName()`), object properties ('Parameters:' label). It is clean but lacks coherence as it abruptly ends. / Clear structure with identifiable spans; represents valuable patterns for learning span segmentation in programming context. / Clear structure with identifiable spans such as variable declarations, method calls (isAClassName), and parameter lists; clean for training purposes. / Clear structured elements like variable declarations, method calls; clean and well-formatted for training purposes. Represents valuable patterns in learning span composition within programming contexts. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "Id 03d ObjectBase clientId [inherited] Unique id of the object. This id will be unique, even across multiple 03D clients in the same page.", "type": "mixed", "id": {"id": "22155e81-8995-4947-92f3-900d938ab549"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains a mix of identifiers and descriptions, with clear spans for 'clientId' as an object attribute in the context of software objects or APIs. The segment is clean but lacks natural language complexity that could be beneficial to span segmentation learning; however, it has valuable patterns related to code constructs which are useful for training purposes. / Clear distinction between identifiers and descriptions, useful for learning span segmentation in both programming context (clientId) and descriptive text (\"Unique id of the object\"). / The segment contains a mix of technical identifiers and documentation, which can help the model learn span segmentation for both programming constructs (object IDs) and descriptive text elements in software development contexts. / The segment contains a mix of programming concepts and documentation, with clear identifiers for spans like \"clientId\" which can be useful in training the model to recognize span boundaries within both natural language descriptions (e.g., 'Unique id') and code constructs ('inherited', '[inherited]'). / The segment contains a mix of descriptive text and programming-like identifiers, providing clear examples for span segmentation in both contexts."}}
{"raw": "ParamObject copyParams ParamObject source_param_object [inherited] Copies all the params from a the given source_param_object to this param object. Does not replace any currently existing params with the same name.", "type": "mixed", "id": {"id": "7ae2219c-5f70-41a8-b105-7ee87a928304"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both a programming-like function description and parameter names, which can help the model learn span segmentation for different types of content. However, it lacks clarity in its structure due to inconsistent spacing (\"a\" instead of \"the\"). / The segment contains a mix of programming concepts and documentation, with clear spanable phrases like \"copyParams\", \"[inherited]\", which are useful for learning both syntax (code) patterns as well as natural language descriptions in code context. / The segment contains a mix of programming concepts and documentation, with clear spanable elements like function names (\"copyParams\"), parameter descriptions (e.g., \"ParamObject\", \"[inherited]\") that can aid in learning the composition rules for both code constructs and natural language explanations. / The segment contains a mix of programming concepts and language, with clear spanable phrases like \"copyParams\", \"[inherited]\", which can be useful for learning how to parse such constructs in code documentation or comments. / The segment contains a mix of programming concepts and documentation, with clear spans for parameter names (\"ParamObject\", \"source_param_object\") that can be useful in training the model to understand span composition across different contexts. However, there are minor spelling errors like 'a' instead of 'the', which could affect clarity but don't significantly detract from its overall utility as mixed content is involved here."}}
{"raw": "Actually this just calls countDown_ to account for the count starting at 1.", "type": "natural", "id": {"id": "9740858d-34ac-403a-a3fa-d26b087c0214"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terminology and comments, with clear structure for span segmentation; it represents valuable patterns in both coding context (function call) and language constructs (comment). / Clear, coherent sentence with a discernible action and object relationship suitable for training on span segmentation in English text. / Clear sentence structure with a discernible action and object, suitable for learning span segmentation in English text. / Clear sentence structure with a discernible action and object, suitable for learning span segmentation in English text. / Clear, coherent sentence with a discernible action and object relationship suitable for learning span segmentation in English text."}}
{"raw": "This capability is particularly effective, for example, in calculating the specular lighting component: You will need to balance performance considerations against quality and evaluate the tradeoffs of using the pixel shader for fine-grained computation, or the vertex shader for more efficient (and somewhat less explicit) specification of attributes.", "type": "natural", "id": {"id": "ecdd9fb6-5aaf-47ae-801f-e13b61fea339"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear sentence structure with identifiable spans; useful for learning span segmentation in prose. / Clear prose with identifiable phrases and concepts suitable for span segmentation; represents valuable patterns in language structure. / Clear sentence structure with identifiable spans for phrases and concepts; useful patterns in complex sentences. / Clear prose with identifiable phrases and concepts suitable for span segmentation, though lacks explicit programming context. / Clear sentences with complex structures; spans can be identified for training purposes."}}
{"raw": "setEventCallback (type, handler) pluginObject _ client clearEventCallback (type)\nBoth functions are idempotent and return void.", "type": "mixed", "id": {"id": "afdc5dbc-ed9f-4340-acaf-d7efc694862d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming functions and comments, demonstrating clear span segmentation between function names/methods (code) and descriptive text/comments (natural language). It is clean for training purposes with valuable patterns in code structure combined with explanatory natural language segments. / Contains both programming functions and comments, showing clear span segmentation opportunities in a coding context with embedded documentation. / The segment contains both programming function names and comments, demonstrating a clear structure with identifiable spans for learning purposes in the context of span-aware models dealing with combined language constructs. / The segment contains a mix of programming function names and comments, with clear structure for span segmentation; however, it lacks context which could be beneficial in training. / The segment contains both programming function names and comments, which are clear structures that can be segmented into meaningful spans for a tokenizer-free span-aware model to learn from. It is clean but lacks context or additional code examples needed for comprehensive training utility."}}
{"raw": "VertexBuffer Class Reference\nInherits 03d VertexBufferBase: List of all members_\nDetailed Description\nVertexBuffer is a Buffer object used for storing vertex data for geometry. (e.g. vertex positions, normals, colors, etc).", "type": "mixed", "id": {"id": "c13f6da1-91a0-4625-8c2e-c802007c8b5b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of class reference notation and descriptive text, which provides clear examples for span segmentation in both programming context (class names) and explanatory prose about the VertexBuffer's purpose. / The segment contains a mix of class reference notation and descriptive text, with clear distinctions between the title (natural language), inheritance information (code-like structure), description content (natural language). It presents meaningful patterns for learning span segmentation in both code constructs (\"Class Reference\", \"Inherits\") and natural descriptions. / Clear structure with spans for class reference, inheritance details, and descriptions; useful patterns in span composition. / Contains both structured programming concepts and descriptive text, useful for learning span segmentation in a diverse context. / Clear structure with both class reference and technical description, representing valuable patterns for learning span composition in a programming context."}}
{"raw": "WorldViewProjectionParamMatrix4' , '03d. WorldViewProjectionInverseParamMatrix4' , '03d. WorldViewProjectionTransposeParamMatrix4' , '03d. WorldViewProjectionInverseTransposeParamMatrix4'\nReturns:\nThe newly created Param or null on failure.", "type": "code", "id": {"id": "c7ff8df3-d34a-47dd-a237-452eeef0595b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear and consistent pattern of parameter names, suitable for learning span segmentation in programming context. / Clear, structured list of method names with consistent formatting suitable for span segmentation in a coding context. / Clear pattern of function names and parameters, representative for learning span segmentation in programming context. / Clear, structured representation of programming constants and functions; valuable for learning span segmentation in a coding context. / Clear structured elements with consistent naming conventions indicative of programming constructs, suitable for learning span segmentation in a coding context."}}
{"raw": "Param bind Param source_param [inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from: Passing in null will unbind any m parameter currently bound: Returns: True if the bind succeeded.", "type": "mixed", "id": {"id": "c7c0743f-d83f-40e5-a78e-ee0b37c06966"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and parameter bindings, which are clear structures suitable for learning span segmentation in both programming contexts (code) and explanatory text (natural language). It is coherent but could be more concise to improve clarity further. / The segment contains a mix of technical descriptions and parameter bindings, which are clear structures that can be segmented into meaningful spans for learning purposes. It is clean but could benefit from more context or examples to increase its utility as training data. / The segment contains a mix of technical descriptions and parameter bindings, which can help the model learn span segmentation in both structured (code-like) syntax as well as descriptive text elements. It is coherent but lacks context for full comprehension without additional examples or explanations. / The segment contains a mix of technical descriptions and parameter bindings, with clear spans for terms like \"Param\", \"[inherited]\", etc., representing valuable patterns in span composition across both natural language explanations (e.g., 'Directly binds two Param elements') and code-like structures. / The segment contains a mix of technical language and parameter binding concepts, with clear spans for terms like \"Param\", \"source_param\", etc., which are useful patterns to learn span segmentation in both natural text descriptions (\"Directly binds two Param elements\") and code-like expressions."}}
{"raw": "This property is read-only:\nbool 03d Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only. bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source.", "type": "mixed", "id": {"id": "f53eb7bc-0052-40d4-8b94-1349fbc52961"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains clear, structured elements with meaningful spans that can be identified as both property descriptions and boolean values in a programming context; it is clean for training purposes. / The segment contains clear, structured elements with meaningful spans that represent patterns for learning span composition in both programming and documentation contexts. It is cleanly formatted to be representative of target domains like configuration files or code comments/documentation. / Clear span segmentation between property descriptions and their respective codes; useful for learning both syntax (code) patterns and contextual understanding of properties in documentation. / The segment contains clear, structured elements with meaningful spans that represent patterns for learning span composition in both programming language syntax and documentation style. It is clean, coherent, well-formed text suitable as training data. / The segment contains clear, structured elements with meaningful spans related to properties and parameters in a programming context; it is clean for training purposes. However, the presence of repeated phrases (\"This property\") slightly lowers its score as they may not be ideal examples due to redundancy."}}
{"raw": "opt_clearColor color to clear view. opt_priority Optional base priority for created objects. opt_viewport viewport settings for view.", "type": "mixed", "id": {"id": "e0ea4a08-8dcd-4df9-95fe-59c9306175f4"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-related terms and phrases that can be segmented into meaningful spans, such as \"opt_clearColor\", \"color to clear view.\", which are likely properties or settings in code configuration files; it is clean but lacks context for full compositional value. / The segment contains a mix of programming-related terms and configurations that can be segmented into meaningful spans, such as \"opt_clearColor\", which could represent an option for clearing color in the viewport settings; it is clean but lacks context to fully understand its compositional value. / The segment contains a mix of programming-related terms and settings, with clear spanable phrases like \"opt_clearColor color to clear view\" that can help the model learn both coding patterns and natural language expressions related to configuration options. / The segment contains a mix of programming-related terms and phrases, which can help the model learn span segmentation for both technical language (code) elements like \"opt_clearColor\" or \"opt_priority\", as well as natural language descriptions (\"view\"). / The segment contains a mix of programming-related terms and settings, which can be segmented into meaningful spans for learning purposes; however, it lacks context that would make the patterns more comprehensible to X-Spanformer without further data enrichment."}}
{"raw": "Another advantage of the pixel shader is that it has access to textures, whereas the vertex shader does not: Your pixel shader; for example, could have two texture samplers set as uniform parameters.", "type": "mixed", "id": {"id": "0f0784bf-ddef-47a7-a612-4ed00e8832e8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming concepts (\"pixel shader\", \"vertex shader\") and their descriptions, providing a good mix of structured elements for learning span segmentation in an X-Spanformer model. / The segment contains both programming concepts (\"pixel shader\", \"vertex shader\") and their descriptions, which are clear spans for a tokenizer-free model to learn from. It represents valuable patterns in span composition across natural language explanations of code constructs. / Contains both programming concepts and language, useful for learning span segmentation in a technical context. / The segment contains both programming concepts (\"pixel shader\", \"vertex shader\") and their descriptions, providing a clear example of span segmentation in the context of computer graphics or similar fields where natural language explanations are common alongside code constructs. / Contains both programming concepts and textual explanation, demonstrating span segmentation between technical terms and descriptions."}}
{"raw": "A VertexBuffer can be rendered directly by the GPU. See also:\nSourceBuffer\nPublic Member Functions\nArray get Array getAt Number start_index; Number num_elements_ bool set (Array values bool set RawData raw_data) bool set RawData raw_data, size_ t offset; size t length) setAt Number start_index, Array values) bool allocateElements Number num_elements)", "type": "mixed", "id": {"id": "7fe26d95-6352-43f6-9fca-329891c17f11"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and function signatures, demonstrating clear span segmentation opportunities for both language constructs (e.g., \"VertexBuffer\", \"GPU\") and syntactical elements (\"get Array getAt Number start_index;\"). It is clean with well-defined patterns that are valuable in learning how to parse mixed content. / Clear structure with identifiable spans; includes both programming concepts and function signatures, representing valuable patterns for learning span composition in a mixed context. / Clear spans of both programming constructs (functions, parameters) and documentation text; represents valuable patterns for learning span segmentation in a combined context. / Clear spans for both programming constructs and documentation, representing valuable patterns for learning span segmentation in a mixed context. / The segment contains a mix of programming concepts and function signatures, which can help the model learn span segmentation for both language constructs (like \"Public Member Functions\") and technical terms (\"VertexBuffer\", \"GPU\"). It is clean but lacks context or examples that could improve its training utility."}}
{"raw": "Array 03d. Counter:getCallbackCounts Returns all the counts for which all callback has been added.", "type": "mixed", "id": {"id": "34a7342f-ec50-44d2-bc64-88eb3494a5e7"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear reference to programming concepts (array, callback) and is well-formed for training purposes in the context of learning span segmentation within coding constructs. / The segment contains a mix of programming terminology and documentation style, which can help the model learn span segmentation in both contexts. However, it lacks context for full comprehension; additional examples may be needed to improve clarity on boundaries between spans. / Clear structure with identifiable spans; useful for learning patterns in programming documentation and function descriptions. / The segment contains a mix of programming-related terminology and structured text, which can help the model learn span segmentation in both contexts. However, it lacks clarity on what \"Array\" refers to or how it's used within this context (\"03d\"). / The segment contains a mix of programming terminology and structured data, which can be segmented into meaningful spans for learning purposes; however, it lacks context or clarity on the function's usage in natural language text."}}
{"raw": "ObjectBase.isAClassName String class name [inherited] Takes the name of a class as an argument; and returns true if this object is either an instance of that", "type": "mixed", "id": {"id": "38adaa50-43fb-43fa-853c-26de3c26de50"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and language, with clear spans for \"ObjectBase\", \"isAClassName\", etc., representing valuable patterns in span segmentation across both domains. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to missing context or explanation for some terms like \"ObjectBase\" and \"[inherited].\" / The text segment contains a mix of programming concepts and language, with clear structure for span segmentation like \"ObjectBase.isAClassName\", \"[inherited]\", etc., which are valuable patterns to learn from in terms of both code syntax and natural language descriptions within the context. / The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation; however, it lacks context which could be beneficial for training purposes. / The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation; however, it lacks context which could be beneficial for learning patterns in both domains."}}
{"raw": "This is the number of draw elements the renderer considered for rendering: If a transform is not traversed either because it is not in one of the subtrees the TreeTraversals are setup to traverse or because it is marked as visible = false then any draw elements in that part of the transform graph are not processed: This property is read-only:\nNumber 03d RenderEventdrawElementsRendered The number of draw elements rendered last frame.", "type": "mixed", "id": {"id": "0b2bd53c-7f39-494c-b830-f4ac668a463c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical terms related to rendering, which can help the model learn span segmentation for both narrative explanations (natural language) and specific identifiers or properties relevant in code contexts. However, it lacks clear delimiters between spans that could be problematic without further context clues. / The segment contains a mix of descriptive text and technical terms related to rendering, with clear references that can be segmented into meaningful spans for learning purposes. However, the presence of numbers (e.g., \"03d\") may require further context or clarification in training data sets focused on natural language processing alone. / The segment contains a mix of descriptive text and technical terms related to rendering processes, which can help the model learn span segmentation in both contexts. However, it lacks clear examples or varied patterns that would significantly improve its training utility. / The segment contains a mixture of descriptive text and technical terms related to rendering, with clear structure for span segmentation; it includes both explanatory prose (\"This is the number...\") and specific terminology or identifiers that could be useful in training an encoder on code-related natural language. / The segment contains a mix of descriptive text and technical terms related to rendering, with clear references that can be segmented into meaningful spans for training purposes."}}
{"raw": "One texture could be a bitmap of colors, while a second texture could be a map of per-pixel normals.", "type": "natural", "id": {"id": "8dee371e-2a84-4c91-837a-de72a84b2c1c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear and coherent sentence with identifiable spans; useful for learning span composition in text. / Clear distinction between two concepts, useful for learning span composition in contextually rich text. / Clear distinction between two concepts, useful for learning span composition in text. / The text segment contains clear, meaningful spans related to textures and maps that can be segmented for learning purposes in a tokenizer-free context. It is clean with coherent structure suitable as training data. / Clear distinction between two concepts, useful for learning span composition in text."}}
{"raw": "these functions are idempotent and return void.", "type": "code", "id": {"id": "98bd3d24-e0a3-4630-b4e0-24f7d8c029ba"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, well-defined spans with meaningful patterns for learning span composition in programming context. / Clear span segmentation possible; well-representative of programming patterns and idioms. / Clear, concise programming-related content with identifiable spans for function names and descriptions. Well-suited to learn span composition in a coding context. / Clear, well-defined spans representing functions and keywords; good for learning span composition in programming context. / The segment contains a clear mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. It's clean but lacks context for full comprehension; however, it still provides valuable patterns related to code structure and documentation practices."}}
{"raw": "RenderNode:getRenderNodesByNameInTree String name [inherited] Searches for render nodes that match the given name in the hierarchy under and including this render node.", "type": "mixed", "id": {"id": "4bee89a1-d7dc-47d6-8743-bff8ec88c8f5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terminology and function-like text, which can help the model learn both language patterns in documentation as well as syntactical structures common to coding languages. / The text segment contains a mix of programming language syntax and documentation, with clear structure for span segmentation; it is clean but lacks context to fully represent the domain's patterns. / The segment contains a mix of programming terminology and function descriptions, which can help the model learn span segmentation in both contexts. It is clean but lacks context for full comprehension by X-Spanformer without additional data. / The segment contains a mix of programming concepts and language, with clear structure for span segmentation; it includes function names, parameters (with type hint), inherited properties/methods indication (\"inherited\"), which are valuable patterns to learn from. / The segment combines a programming function call with its description, providing clear span patterns for both syntax and semantics in the context of software development documentation."}}
{"raw": "Bufferset RawData raw_data, size t offset, size t length [inherited] Sets the values in the buffer given a RawData object:\nParameters:\nraw data contains data to assign to the Buffer data itself: offset is a byte offset from the start of raw data length is the byte length of the data to set Returns: True if operation was successful:\nbool 03d.", "type": "mixed", "id": {"id": "23c97ec5-a0a7-42cb-a400-30c9ca3f15ab"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and language, with clear structure for spans like \"Bufferset RawData\", function signature, parameters description (\"raw_data\", \"offset\", \"length\"), return type (\"bool\") which are valuable patterns to learn span composition in both code context. / The segment contains both programming constructs and comments, providing a clear example of span segmentation between language elements (code) and descriptive text (comments). It is clean but lacks contextual coherence as it appears to be an excerpt from documentation or code with missing parts. / The segment contains both programming language syntax and comments, which can help the model learn span segmentation for different types of content. However, it lacks clarity due to missing punctuation or proper formatting in code blocks; this could be improved with better structuring. / The segment contains a mix of programming concepts and documentation, with clear structure for span segmentation; however, it lacks coherence in the explanation which may hinder learning. / The segment contains a mix of programming concepts and language, with clear parameters for learning span segmentation in both contexts. However, the presence of special characters like '03d' may require further cleaning or clarification to ensure optimal training utility."}}
{"raw": "Since there can be several render nodes with a given name the results are returned in an array:\nNote that modifications to this array [e.g: push()] will not affect the underlying RenderNode; while modifications to the array's members will affect them: Parameters:\nname Rendernode name to look for: Returns:\nAn array containing all nodes among this node and its decendants that have the given name.", "type": "mixed", "id": {"id": "0450ab55-3754-4b02-bdfd-43505d579405"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related terminology, with clear indications for span segmentation such as function names (\"RenderNode\"), parameters (\"name\", \"Returns:\"), and actions (\"push()\"). It is clean but lacks context or examples that could improve its utility. / The segment contains a mix of descriptive text and technical terms related to programming concepts, with clear references that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples which could improve its utility as training data. / The segment contains a mix of descriptive text and programming-related terms, with clear references to an array structure in the context of render nodes that can be segmented into meaningful spans for learning purposes. / The segment contains a mix of descriptive text and pseudo-code-like structures, which can help the model learn span segmentation in both contexts. It is clean but lacks context for some terms like \"RenderNode\". Adding examples with more natural language explanations could improve its utility as training data. / Clear distinction between descriptive text and structured parameters; useful for learning span segmentation in both contexts."}}
{"raw": "paramA will NOT evaluate when paramB asks for its value.", "type": "mixed", "id": {"id": "12172243-b825-449a-bc46-4df0df4a045a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-like expressions and English, with clear structure for span segmentation around variable names (\"paramA\", \"paramB\") and logical operators (\"NOT\"). It represents valuable patterns in both code semantics (variable interaction) and natural language syntax (logical negation). / The segment contains a clear interaction between parameters and conditions, which can be segmented into meaningful spans for learning span composition in both programming contexts (code) and parameter interactions described naturally. / The segment contains a mix of programming-like syntax and English, with clear parameter references that can be segmented into meaningful spans for learning purposes. It is coherent but lacks context which may affect its utility in training an encoder without further data augmentation or additional examples to provide necessary background information. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. It is clean but lacks context for full comprehension; additional examples may be needed to improve learning outcomes. / The segment contains a mix of programming language constructs (parameters and function calls) with English-like phrases, which can help the model learn span segmentation in both contexts. It is clean but lacks context for full comprehension; however, it still provides valuable patterns related to variable referencing within code structures combined with natural language expressions."}}
{"raw": "Array 03d Param outputConnections [inherited] The output connections for this param.", "type": "code", "id": {"id": "f0082b87-2bb5-439c-88c6-3490c64aa826"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming contexts. / Clear spans identified; 'Array', '03d Param outputConnections [inherited]' and '[inherited] The output connections for this param.' are meaningful segments that represent a mix of natural language explanation with code-like notation, useful for learning span segmentation in both contexts. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming contexts."}}
{"raw": "Buffer set RawData raw data [inherited] Sets the values in the buffer given a RawData object.", "type": "mixed", "id": {"id": "40d727ef-835e-41e4-8acc-0720e3312658"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terminology and documentation, with clear spans for both the function name 'Buffer set' as an action phrase in coding context ('Sets') and its description that includes natural language explanation about what it does (the rest). This provides valuable patterns across different types. / The segment contains a mix of programming terminology and documentation, with clear spans for both the function name (\"Buffer set\") as an action phrase in English (natural language), and \"RawData raw data\" which could be considered code-like elements referring to variables or objects. This combination can help X-Spanformer learn span segmentation across different types of content within a single context. / The segment contains a mix of programming concepts and language, with clear spans for \"Buffer set\", \"[inherited]\", and the function description which can help in learning span segmentation between natural language explanations (docstrings) and code constructs. / The segment contains a mix of programming terminology and documentation, with clear spans for both the function name (\"Buffer set\") as an action phrase in coding context (span1), \"RawData\" representing code variable or object span2, \"[inherited]\" indicating inheritance status which is common in software development documents spanning across multiple lines/spans. The sentence structure allows identification of meaningful segments suitable to train a tokenizer-free model on mixed content types. / The segment contains a mix of programming concepts and language, with clear spanable phrases like \"Buffer set RawData raw data\" that can be used to train the model on recognizing both natural language descriptions alongside code constructs."}}
{"raw": "CounterCallback counter   callback [inherited] Adds a callback for a given count value.", "type": "code", "id": {"id": "e14a286f-c0a6-41a8-bdbb-22e63cf1af2a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with meaningful spans; represents valuable patterns for learning span composition in programming context. / Clear structure with a function name and description, suitable for learning span segmentation in programming context. / Clear structure with meaningful spans; represents valuable patterns for learning span composition in programming context. / Clear structure with meaningful spans; represents valuable patterns for learning span composition in programming context. / Clear structure with meaningful spans; represents valuable patterns for learning span composition in programming context."}}
{"raw": "Array 03d. RenderNode getRenderNodesInTree [inherited] Returns this render node and all its descendants Note that this render node might not be in the render graph:\nNote that modifications to this array [e.g: push()] will not affect the underlying RenderNode; while modifications to the array's members will affect them:", "type": "mixed", "id": {"id": "ba977c76-21b9-4265-a17b-a82248018122"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and programming concepts, with clear references to arrays (data structures) in the context of rendering nodes which can be segmented into meaningful spans for learning purposes. However, it lacks clarity due to shorthand notation like \"Array 03d.\" / The segment contains a mix of technical terms and programming concepts, with clear references to arrays (\"Array\"), functions/methods (\"RenderNode getRenderNodesInTree\", \"push()\"). It provides context for learning span segmentation in both code constructs (e.g., function names) and natural language descriptions. / The segment contains a mix of descriptive text and programming-related terms, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clear examples for some code constructs like \"push()\". Overall clean but could benefit from more varied patterns or clearer separation into distinct segments. / The segment contains a mix of technical descriptions and programming concepts, with clear references to arrays (\"Array\"), functions/methods (\"RenderNode getRenderNodesInTree\", \"push()\"). It demonstrates meaningful spans for both code constructs (e.g., function names) and natural language explanations. / The segment contains a mix of technical terms and programming concepts that can be segmented into meaningful spans, such as \"Array\", \"RenderNode\", \"[inherited]\", etc., which are useful for learning span composition in both code understanding and natural language processing contexts."}}
{"raw": "This property is read-only:\nbool 03d Param readOnly [inherited] If true the param is read only. Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only: bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source.", "type": "mixed", "id": {"id": "382a3b26-7d56-4287-a208-b9f35aa26754"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both descriptive text and programming-related terms, which can help the model learn to differentiate between spans of different types (natural language vs technical terminology). It is clean but lacks context for meaningful span segmentation due to its brief nature; however, it still offers valuable patterns. / The segment contains both descriptive text and programming-related terms, showing clear structure for span segmentation; however, it lacks context to fully understand the usage of properties in a real-world scenario. / The segment contains both descriptive text and programming-related terms, which can help the model learn span segmentation in a context that includes technical documentation alongside actual parameter descriptions commonly found within software development environments. / Contains both readable text and programming constructs, with clear span segmentation opportunities in the context of properties being read-only or updatable. / Clear, structured properties with consistent patterns suitable for span segmentation in programming contexts."}}
{"raw": "This is a big time saver; and GWTTestSuite is easy to use, So using it is a good idea.", "type": "natural", "id": {"id": "f4fc6e92-52ad-4c2c-ac14-4ab822166679"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.7, "source_file": "GXT Theme Creation.docx.pdf", "notes": "Clear sentence structure with identifiable phrases; good for learning span composition in text. / Clear sentence structure with potential for learning phrase spans; clean and coherent text segment representative of English prose. / Clear sentence structure with potential for learning phrase segmentation; however, lacks complexity and variety in patterns. / Clear sentence structure with potential for learning phrase segmentation; however, it lacks complexity and domain-specific patterns. / Clear sentence structure with meaningful phrases; good for learning span composition in English text."}}
{"raw": "transform transform contains a local matrix parameter: When transforms are arranged in a parentlchild relationship, their local matrices will be concatenated automatically to provide a world matrix.", "type": "mixed", "id": {"id": "683bd797-b340-4f52-bb38-4cb801d22a52"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "shared_processor", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming concepts (\"local matrix\", \"world matrix\") and a description of their relationship, which can help the model learn span segmentation in technical documentation that includes code-like structures. / The segment contains both technical language and programming concepts, with clear parent-child relationships that can be used to learn span segmentation in a tokenizer-free context. It is clean but lacks sufficient detail for comprehensive training without additional examples or contexts. / The segment contains both programming concepts (\"local matrix\", \"world matrix\") and a descriptive sentence, providing valuable patterns for learning span composition in the context of software documentation or tutorials. / The text contains both programming concepts (transforms, matrices) and their relationships in a hierarchical structure that can be segmented into meaningful spans for training purposes. It is clean but lacks context or additional examples to improve its utility as an isolated segment. / The segment contains both technical language and programming concepts, with clear parent-child relationships between transforms that can be segmented into meaningful spans for learning purposes."}}
