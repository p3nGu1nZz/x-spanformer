{"raw": "The input of this key:\nNumber 03d CurveKey output [inherited] The output of this key:\n03d. LinearCurveKey Class Reference\nInherits 03d", "type": "mixed", "id": {"id": "3ff7bf6b-a69f-4da9-b895-812cfe8da592"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both structured programming references and a mix of textual descriptions, which can help the model learn span segmentation in diverse contexts. However, it lacks contextual coherence for training purposes due to its fragmented nature. / The segment contains both structured programming references and a mix of text, which can help the model learn span segmentation in diverse contexts. However, it lacks clarity due to repetition (\"03d\") that might confuse learning patterns for spans related specifically to code versus natural language descriptions. / The segment contains a mix of structured elements (keys, class references) that can be segmented into meaningful spans for learning span composition in both programming and documentation contexts. It is clean but lacks context to fully evaluate its training utility without additional surrounding text. / The segment contains a mix of structured programming elements and documentation, with clear inheritance patterns that can be segmented into meaningful spans for learning span composition in both contexts. / Contains both structured programming references and comments, useful for learning span segmentation in a coding context."}}
{"raw": "this render node might not be in the render graph: Note that modifications to this array [e-g: push()] will not affect the underlying RenderNode; while modifications to the array's members will affect them: Returns: An array containing all render nodes of the subtree.", "type": "mixed", "id": {"id": "1214cd11-1eaf-4ae6-999c-cb4aed6aa9d8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical documentation and programming concepts, with clear references to arrays (\"[e-g: push()]\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context which could affect its utility as training data. / The segment contains a mix of technical language and programming concepts, with clear references to data structures (arrays) that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or coherence as it appears out-of-place without surrounding text. / Clear distinction between explanatory text and programming constructs, useful for learning span segmentation in both domains. / The segment contains a mix of technical language and structured data (render nodes, arrays), with clear span segmentation opportunities for both programming constructs (\"RenderNode\", \"[e-g: push()]\") and natural descriptions (\"this render node might not be in the render graph\"). / The segment contains a mix of technical language and programming concepts, with clear delineation between explanatory text (\"this render node might not be in the render graph\") and specific instructions or data structures (\"Returns: An array containing all render nodes...\"). It provides examples that can help learn span segmentation for both natural descriptions as well as code constructs."}}
{"raw": "Listof all members\nDetailed Description\nParam which stores a DrawContext:\nPublic Member Functions\nbool bind Param source_param) unbindInput unbindOutput Param destination_param)", "type": "mixed", "id": {"id": "1dc42cce-ddcc-4d4b-878e-85534a54a66f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to identify spans in both contexts effectively. / Clear list-like structure with a mix of descriptive text and programming-related terms, suitable for learning span segmentation in both contexts. / The segment contains a mix of structured elements (list, descriptions) and programming constructs that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully understand the content's domain or function within code structures. / The segment contains a mixture of lists, descriptions and function signatures which can help the model learn to identify different types of spans in both structured (code) and unstructured text (natural language). However, it lacks context for some elements like \"Listof all members\" or specific details about what is meant by 'Bind' functions. / The segment contains a mix of programming constructs and documentation, with clear delineation between function signatures (spans) that can be used for training span segmentation in both contexts."}}
{"raw": "conditional expression\nassignment operator ASSIGN MUL ASSIGN DIV ASSIGN ADD ASSIGN SUB ASSIGN BITWISE AND ASSIGN BITWISE OR ASSIGN BITWISE XOR ASSIGN BITWISE SHIFTL ASSIGN BITWISE SHIFTR ASSIGN\nconstant_expression (ID) = > variable_expression literal value\nconditional_expression logical or expression\nQUESTION expression COLON conditional expression\n?\nlogical_ or expression exclusive or expression\nOR exclusive or expression ) *\nlogical_ and_expression NOT ) ? inclusive or expression\nAND\nNOT ) ?", "type": "code", "id": {"id": "4ae247d9-ccb1-490b-a5b9-a339a5d574db"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans like expressions, operators; well-suited for learning span composition in programming contexts. / Clear syntactic structure representing programming constructs, useful for learning span segmentation in a coding context. / Clear structure with identifiable spans like expressions, operators; well-suited for learning span segmentation in programming context. / Clear structure with identifiable spans like expressions, operators; useful for learning span segmentation in programming context. / Clear structure with identifiable spans like expressions, operators; represents valuable patterns for learning span composition in programming context. However, some punctuation and formatting issues may affect clarity slightly."}}
{"raw": "ObjectBase clientId [inherited] Unique id of the object. This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nbool 03d Element_cull", "type": "mixed", "id": {"id": "4133c245-f679-44d1-9acf-8fc6c304614c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-related terms, with clear identifiers for spans like \"clientId\" which is useful for learning span segmentation in both contexts. However, the presence of code-like syntax (\"bool\", \"[inherited]\", etc.) may confuse models trained solely on natural language or exclusively on coding patterns without mixed-context training data. / Contains both a descriptive text segment and programming-related terms, which can help the model learn to distinguish between different types of spans in varied contexts. The structure is clear with identifiable elements like property descriptions (natural language) alongside code constructs (\"clientId\", \"Unique id\"). / The segment contains a mix of descriptive text and technical terms, with clear identifiers like 'clientId' that can be segmented into meaningful spans for learning purposes. It also includes programming-related syntax ('bool', '[inherited]', etc.), which is valuable in the context of span-aware models dealing with code snippets or documentation containing both natural language explanations and coding elements. / The segment contains both a descriptive text and programming-related terms, which can help the model learn span segmentation for different types of content. However, it lacks clarity in separating spans due to overlapping context between natural language explanation (\"Unique id\") and code syntax (\"bool 03d Element_cull\"). / The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to potential confusion with similar-looking characters (e.g., '03' vs '0')."}}
{"raw": "true if this object is a or is derived from the given class name. 03d. Param unbindInput [inherited] Breaks any input connection coming into the Param:\n03d. Param unbindOutput Param destination_param [inherited] Breaks a specific param-bind output connection o this param:", "type": "code", "id": {"id": "73404e17-bb0f-4ca5-8fd1-7dc63fc341dc"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans related to programming constructs; useful for learning span segmentation in a coding context. / Clear syntactic structure with identifiable spans; useful for learning programming constructs and patterns. / Clear syntactical structure with identifiable spans like function names, parameters and comments indicating logical segments in programming context. Well-formed for training purposes. / The segment lacks clear, meaningful spans and is not coherent for training purposes; it appears to be a mix of documentation with programming-like syntax that doesn't form well-defined patterns suitable for span segmentation learning. / The segment lacks clear, meaningful spans and is not coherent or representative of useful patterns for span segmentation training. It mixes language with unclear references to programming constructs without context."}}
{"raw": "Parameters: a Operand. b Operand. Returns: (lo3djs_quaternions Quaterion/number)", "type": "code", "id": {"id": "3d3ad657-a2f5-4dcc-8fac-102561f34d87"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear parameters and return types, representing valuable patterns for learning span composition in programming contexts. / Clear structure with parameters and return types, suitable for learning span segmentation in programming contexts. / Clear separation of parameters and return type, representing valuable patterns for learning span composition in both programming context (code) and descriptive text elements (natural language). / Clear parameters and return types, suitable for learning span segmentation in programming contexts. / Clear parameters and return types, representing valuable patterns for learning span composition in programming context."}}
{"raw": "Parameters: pack The pack to create the deserialized objects in. json", "type": "mixed", "id": {"id": "18813470-7b08-476e-aeb8-2707655817c0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear parameter declaration with both descriptive text and structured data (key-value pair), which is representative of the target domain for X-Spanformer training in handling span-aware encoding across natural language descriptions within code-like structures. / The segment contains a mix of programming language syntax and comments, with clear parameters for potential span segmentation; it is clean but lacks context to fully evaluate its training utility. / Clear mix of parameter description and JSON-like structure, useful for learning span segmentation in both contexts. / The segment contains a clear command with parameters that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts and human-readable instructions. It is clean but lacks context or content beyond the parameter definition itself. / Clear parameters and values, suitable for learning span composition in both language context (pack) and technical syntax (json)."}}
{"raw": "Member Function Documentation\nbool 03d. Param bind Param source_param", "type": "mixed", "id": {"id": "ba50ca66-d3fb-4557-8046-baaf1c09d96f"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines a programming function signature with comments, providing clear span patterns for both language constructs and documentation elements. / The segment contains a clear function signature with parameters, representing valuable patterns for learning span composition in both programming and documentation contexts. / The segment combines a function name with its documentation, which includes both structured (code-like) and unstructured elements useful for learning span segmentation in diverse contexts. / The segment contains both a function signature and documentation, which are clear spans for training in span-aware models that handle multiple content types. It is clean but lacks context to fully represent natural language or code patterns independently; however, it offers valuable examples of how such elements can be combined within the same text block. / The segment contains a mix of programming terminology and documentation structure, with clear spans for function names (\"Member Function\"), parameters (\"Param source_param\"), and boolean values indicating success or failure in an API context. It is clean but lacks contextual richness that could improve training utility."}}
{"raw": "inclusive or expression ) *\ninclusive or expression exclusive or expression (BITWISE OR exclusive or expression )", "type": "mixed", "id": {"id": "b8bba5bc-fc2f-43eb-aefe-177f6f6d2607"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming expressions and logical operators, which can be segmented into meaningful spans for learning purposes; it is clean but lacks context or clarity in its current form. / Clear structure with logical operators and bitwise expressions suitable for span segmentation in programming context. / The segment contains a mix of programming expressions and logical operators, which can be segmented into meaningful spans for learning purposes; however, it lacks context or clarity on its own. / The text segment contains a mix of programming constructs and logical expressions, which can be segmented into meaningful spans for learning purposes; it is clean but lacks context or clarity in its current form. / The segment contains a mix of programming expressions and logical operators, presenting clear patterns for span segmentation that are relevant to both coding syntax understanding and the semantics behind conditional logic in software development."}}
{"raw": "Passing in null will unbind any m parameter currently bound: Returns: True if the bind succeeded. bool 03d. ObjectBase.isAClassName String class name [inherited] Takes the name ofa class as an argument, and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "e1d12ada-250a-4802-8835-f6ef3c4bf717"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text contains both programming concepts (e.g., \"m parameter\", \"bind succeeded\") and language constructs (\"ObjectBase.isAClassName String class name [inherited]\"), which can help the model learn span segmentation in a code context interspersed with natural descriptions. / The segment mixes programming concepts with a pseudo-code-like syntax, lacking clear structure for meaningful span segmentation and not clean enough to serve as training data. / The segment mixes programming concepts with a non-standard notation (\"ObjectBase.isAClassName String class name [inherited]\"), which lacks clarity and consistency for training purposes. / The segment contains a mix of programming concepts and documentation style, but lacks clear structure for meaningful span segmentation; it is not coherent as training data. / The segment mixes programming concepts with a pseudo-code-like syntax, lacking clear structure for meaningful span segmentation and not cleanly representing either domain's patterns."}}
{"raw": "o3djsmath Matrix4 matrix Reorients the vertices, positions and normals, of this vertexInfo by the given matrix. In other words, it multiplies each vertex by the given matrix and each normal by the inverse-transpose of the given matrix\nParameters: matrix Matrix by which to multiply: o3djs.primitives. VertexInfosetTriangle number triangleIndex number indexl number index2 number index3 Sets the vertex indices of thye triangle at the given triangle index: Parameters: triangleIndex The index of the triangle.", "type": "mixed", "id": {"id": "5d4d7b8e-f809-4352-a7bc-d8fb7514ece5"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains both programming concepts and language, with clear spanable elements like function names (Matrix4), parameters descriptions (\"matrix\", \"triangleIndex\"), which are valuable for learning composition in a tokenizer-free context. However, the presence of natural language explanations may slightly reduce clarity but still offers useful patterns for training. / Contains both programming concepts and language, with clear spanable elements like function names, parameters descriptions, which are useful for learning structured patterns in a tokenizer-free context. / Contains both programming concepts and language, with clear spanable elements like function names (\"Matrix4\", \"Reorients\"), parameters (\"matrix Matrix by which to multiply:\"), method descriptions (e.g., multiplying vertices). However, it lacks coherence in natural prose structure. / Contains both structured programming elements and descriptive text, with clear spanable segments like function names, parameters descriptions, etc., suitable for learning diverse patterns in a tokenizer-free context. / Contains both structured programming concepts and descriptive text, with clear spanable elements like function names (\"Matrix4\"), parameters (\"matrix\", \"triangleIndex\"), types (\"VertexInfosetTriangle number triangleIndex\") which are useful for learning composition in a tokenizer-free context."}}
{"raw": "Material createMaterialFromEffect(effect) Io3d Material  createNonTexturedMaterial(type) 03dis_simple SimpleShape   createSimpleShape(shape, material) lo3djs simple_SimpleShape createSphere(radius; smoothness) 03d. Material  createTexturedMaterial(type) ! o3djs simple_Scene loadScene(url)", "type": "mixed", "id": {"id": "01a8e67e-ef84-4e9f-b21f-972249f88f16"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mixture of programming commands and comments, with clear delimiters for different constructs (e.g., function calls). It represents valuable patterns in both coding syntax and documentation style that can aid the model's understanding of span segmentation across code snippets interspersed within natural language explanations. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (e.g., \"createMaterialFromEffect\", \"loadScene\"). It represents valuable patterns in both code structure and natural language descriptions within the context of 3D material creation. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (e.g., `createMaterialFromEffect`, `loadScene`). It includes both code snippets (`03dis_simple SimpleShape`) and natural language descriptions or commands. Despite some inconsistencies in formatting (\"lo3djs\" vs \"o3djs\"), it retains structural clarity that can aid a span-aware model's learning process, especially given the mixed nature of content which is representative for such models. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans; however, it lacks coherence due to the presence of both code snippets (e.g., function calls) and natural language descriptions/commentary within one block. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans; however, the presence of non-standard characters (e.g., '03') may confuse tokenization systems without further cleaning or standardizing code conventions."}}
{"raw": "Transform rotateY Number radians Pre-composes the local matrix of this Transform with a rotation about the y-axis. For example, if the local matrix is a translation, the new local matrix will rotate around the y-axis and then translate.", "type": "mixed", "id": {"id": "37cd237a-7f96-4f16-a6ea-78225cbfda64"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear combination of descriptive text and programming-related terms, useful for learning span segmentation in both domains. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"Transform\", \"rotateY Number radians Pre-composes the local matrix\" which are useful for learning span composition in both code-related contexts (like CSS transforms) and natural language explanations. / The segment contains a mix of technical terms and descriptions that can be segmented into meaningful spans, such as \"Transform rotateY\", \"Number radians Pre-composes the local matrix\", which are useful for learning span composition in both natural language processing (NLP) tasks related to code documentation. / The segment contains a mix of technical terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both programming contexts (e.g., \"Transform\", \"rotateY\") and natural language descriptions (\"Number radians Pre-composes the local matrix\"). / The segment contains a mix of technical terms and instructions that can be segmented into meaningful spans, such as \"Transform\", \"rotateY Number radians Pre-composes the local matrix\" which are code-like constructs along with natural language explanations like \"For example\". It is clean for training purposes."}}
{"raw": "Pack createDepthStencilSurface Number width, Number height\nCreates a new RenderDepthStencilSurface object of a format suitable for use as a depth-stencil render target. Note: The dimensions of the RenderDepthStencilSurface must be a power of two.", "type": "code", "id": {"id": "d05a5f04-d1fc-4d52-ae94-bc3709de8006"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear span patterns with a mix of programming constructs and descriptive text, suitable for learning both syntax recognition in coding contexts as well as semantic understanding in documentation. / Clear structure with identifiable spans; combines programming concepts and descriptions, useful for learning span segmentation in both contexts. / Clear function declaration and parameters; useful for learning span composition in programming contexts. / Clear function signature and description with identifiable spans for learning (e.g., \"Pack createDepthStencilSurface\", parameters, return type). Well-formed content representative of programming constructs. / Clear structure with identifiable spans (function name, parameters) and valuable patterns for learning span composition in programming context."}}
{"raw": "VertexInfo Class Reference Listof all members\nDetailed Description VertexInfo. Used to store vertices and indices. Source o3djs/debugjs\nConstructor 03dis_debug VertexInfo(opt_vertices, opt_indices)", "type": "mixed", "id": {"id": "8e9a00e3-45de-424e-9cd3-544b826a48bd"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs (class reference, constructor) and comments/documentation that can be segmented into meaningful spans for learning span composition in both contexts. However, the presence of natural language elements like \"List\" makes it less ideal as pure code training data but still valuable due to its structural clarity within mixed content. / The segment contains both programming constructs (class reference, constructor) and comments/documentation in a structured format that can help the model learn span segmentation for different types of content. / The segment contains both a class reference (natural language) and programming constructs, which can help the model learn span segmentation in diverse contexts. However, it lacks clarity due to missing punctuation or context clues for proper parsing into spans. / The segment contains a mix of class reference (natural language) and programming elements, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to formatting issues like missing spaces (\"Listof\" should be \"list of\", etc.). / The segment contains both a class reference and method signatures, which are clear structures suitable for span segmentation in the context of programming languages. It represents valuable patterns combining documentation (natural language) with code constructs that X-Spanformer could learn from to understand such contexts better."}}
{"raw": "03djs.primitives. VertexInfo.addTangentStreams number opt_semanticIndex Calculate tangents and binormals based on the positions, normals and texture coordinates found in existing streams. Parameters: opt_semanticInd The semantic index of the texture coordinate to use and the tangent and ex binormal streams to add. Defaults to zero 03djs primitives.", "type": "code", "id": {"id": "8b21d9e0-b7c6-4161-a9f6-908cec535861"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear semantic markers for span segmentation (e.g., function names like 'addTangentStreams', parameters descriptions). It is coherent but lacks natural linguistic structure due to its technical nature; however, it represents valuable patterns in both code semantics and parameterization. / The segment contains a mix of programming language syntax and comments, with clear semantic markers for potential span segmentation (e.g., function names like \"addTangentStreams\", parameters such as \"opt_semanticIndex\"). It represents valuable patterns in both code structure and natural language descriptions. / Clear structure with identifiable spans for tangents, binormals and semantic indices; well-suited to learning span composition in programming context. / Clear structure with identifiable spans for tangents, binormals; well-defined parameters and defaults indicative of programming patterns. / Clear structure with identifiable spans for parameters and descriptions, representing valuable patterns in programming syntax and semantics."}}
{"raw": "multiplicative_expression cast expression (MUL DIV MOD) cast expression\nX\ncast expression LPAREN ID RPAREN postfix_expression LPAREN basic type_specifier RPAREN postfix_expression unary_ expression\nunary_expression (PLUS | MINUS ) unary_expression", "type": "code", "id": {"id": "7b07ac9e-f968-4b34-b90f-a53182aafaa0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear syntactic structure with identifiable spans for expressions, operators, and types; well-suited to learn span segmentation in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming constructs. / Clear structured patterns of expressions and operators suitable for span segmentation in programming context. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming constructs. / Clear structure with identifiable spans for expressions, operators, and types; well-suited to learn span segmentation in programming constructs."}}
{"raw": "This property is read-only. bool 03d Param readOnly [inherited] If true the param is read only.", "type": "mixed", "id": {"id": "abb66134-ff55-4a6d-b1a0-ec4f8854bb0b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, with clear span boundaries for both the property name (\"read-only\") as an identifier phrase in English text style (natural), and its associated code attributes like \"bool\", \"[inherited]\", which are typical syntactic elements found within coding languages. It also includes inline documentation that is common practice among programmers to explain what a particular line or block of code does, thus providing valuable patterns for learning span segmentation across both natural language explanations in comments (natural) and programming constructs/code attributes (code). / The segment contains both a descriptive phrase and an inline comment, which are common in programming contexts; it provides clear examples of span segmentation between language constructs (natural vs. code). / The segment contains a mix of programming language syntax and documentation, with clear span boundaries for both the property description (\"This property is read-only\") as well as its type declaration (\"bool\"). It represents valuable patterns in terms of natural language explanation combined with code semantics which are beneficial to learn. / The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation; it represents valuable patterns in both human-readable text (comments) and technical constructs (code). / The segment contains a mix of language and technical terms, with clear indications for span segmentation (property name, boolean value). It is clean but lacks context or examples that could improve its training utility."}}
{"raw": "Returns:\nTrue if the param was removed. Member Data Documentation\nbool 03d RenderNode active [inherited] Setting false skips this render node. Setting true processes this render node. (ie, renders whatever it's supposed to render)", "type": "mixed", "id": {"id": "528ec34e-8442-42d0-933c-066c0482ad31"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation (natural language) and technical terms with clear span boundaries, useful for learning both contexts. / The segment contains both descriptive text and programming-related terms, which can help the model learn to distinguish between different types of spans in a context that includes multiple languages (natural language descriptions with technical code elements). / The segment contains both technical documentation (natural language) and programming concepts, which can help the model learn to distinguish between different types of spans in a hybrid context. / The segment contains a mix of documentation (natural language) and configuration settings for software rendering nodes, with clear span boundaries between descriptive text (\"Returns:\", \"Setting true processes this render node.\") and code-like expressions (\"bool\", \"[inherited]\", etc.). It is clean but lacks context to fully understand the purpose or function. / Clear distinction between documentation (natural language) and configuration settings/code snippets; spans can be identified for both types, representing valuable patterns for learning span composition in a tokenizer-free context."}}
{"raw": "Parameters:\nwidth The width of the RenderSurface in pixels height The height of the RenderSurface in pixels Returns:\nThe RenderSurface object:\nFileRequest 03d. Pack createFileRequest String type Creates a FileRequest to be used to asynchronously load a Texture:\nParameters:\ntype Must be \"TEXTURE\" Returns:\na FileRequest\nObiectBase 03d. Pack createObject String type_ name Creates an Object by Class name.", "type": "mixed", "id": {"id": "c0d71d62-90f8-4018-a5ac-1d96cca3e503"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and object-oriented terminology, which can help the model learn span segmentation in both contexts. However, it lacks coherence as it's not well-formed text; instead, it resembles code snippets or API documentation excerpts with parameters listed separately from their descriptions. / The segment contains a mix of parameter descriptions and object creation commands, which are structurally clear for span segmentation; however, the presence of different programming languages (JavaScript-like syntax) may pose challenges in learning consistent patterns across spans. / The segment contains a mix of parameter descriptions and object instantiation commands, which are structurally clear for span segmentation; it represents valuable patterns across both programming constructs (code) and descriptive language (natural). However, the presence of multiple languages within one block may require careful handling during training. / The segment contains a mix of parameter descriptions and object creation commands, which are structurally clear for span segmentation in both programming contexts (code) and descriptive text formats (natural language). It represents valuable patterns that can aid the model's understanding of different syntactic structures. / The segment contains both structured programming constructs and descriptive text, providing a variety of patterns for span segmentation in different contexts. However, the presence of typographical errors (\"ObiectBase\" instead of \"ObjectBase\") may slightly reduce clarity but still retains its compositional value as training data."}}
{"raw": "Its value can not be set nor can it be used as the destination in a ParamBind\nThis property is read-only. bool 03d Param updatelnput [inherited] If true, this param will make sure its input param is up to date when using it as a source.", "type": "mixed", "id": {"id": "3bcba4b8-4dc2-4ed3-80e4-4b4416ec47f8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to its informal structure (\"Its value\") and incomplete sentences (e.g., \"can not be set\"). / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a mixture context. However, it lacks clarity due to its informal structure (\"Its value\") and potential ambiguity without further contextual information. / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to its informal nature (\"Its value\") and incomplete sentence structure. / The segment contains both programming language syntax and comments, which can help the model learn to distinguish between different types of spans in a combined context. However, it lacks clarity due to mixing natural text with code-like elements without clear separation or consistent formatting. / The segment contains both descriptive text and programming-related terms, showing a mix of language styles that can help the model learn span segmentation in diverse contexts."}}
{"raw": "+\nprimary_expression constructor variable or call expression literal value LPAREN expression RPAREN\nvariable_expression ID LBRACKET expression RBRACKET\n?\nvariable or call expression returns [03d String identifier, 03d String arglist] ID\nLBRACKET expression RBRACKET\n?\nLPAREN argument_expression_ list RPAREN\nconstructor vector_type_specifier matrix type_ specifier LPAREN expression COMMA expression )", "type": "code", "id": {"id": "8aff302a-babf-4090-86ac-0e9be49b9c7b"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear syntactic structure with identifiable spans for programming constructs, suitable training data. / The segment lacks clarity and coherence, making it difficult to identify meaningful spans or learnable patterns for span segmentation; it's a mix of syntax-like elements without clear context. / The segment contains clear syntactic patterns of programming constructs, which are ideal for training a span-aware model on coding syntax and structure. Despite being somewhat terse with symbols like \"+\", it is still well-formed in terms of representing variable expressions within the context of an abstract language or pseudo-code format that could be beneficial to understand code semantics without relying heavily on tokenization. / The segment contains clear syntactic structures of programming language constructs, which are valuable for learning span segmentation in a tokenizer-free context. However, it lacks coherence as it's not an executable snippet but rather appears to be part of documentation or abstract syntax representation. / Clear syntactic structure representing programming constructs, useful for learning span segmentation in coding contexts."}}
{"raw": "createObject ( '03d. Transform' ) ;\nt.className =\n'03d. Transform' ;", "type": "code", "id": {"id": "651868a2-b376-4539-b97c-4dbcb1825284"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements for span segmentation; well-formatted and representative of programming constructs. / Clear structure with identifiable spans; represents valuable patterns for learning span composition in programming context. / Clear structured elements like function calls and object properties, suitable for learning span composition in programming contexts. / Clear structure with identifiable spans for class names and object creation; clean, well-formatted representation of programming constructs. / Clear structure with identifiable spans for object creation and class naming in programming context. Well-suited to learn span composition patterns typical of coding syntax."}}
{"raw": "CanvasPaint 03d ClearBuffer 03d Counter 03d. Curve\n03d DrawContext\n03d DrawElement\n03d DrawList\n03d", "type": "code", "id": {"id": "4f521b77-09d1-4dd8-9eb8-bb88e7cbaa41"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements representing function names and identifiers, suitable for learning span segmentation in programming context. / Clear, structured segments representing method names and properties typical in programming context; useful for learning span composition related to coding patterns. / Clear structure with identifiable spans related to programming constructs; clean and coherent for training purposes. / Clear structure with identifiable spans representing function names and parameters, suitable for learning span composition in programming context. / Clear structure with identifiable spans related to programming constructs, suitable for learning span segmentation in a coding context."}}
{"raw": "Elementmaterial [inherited] The Material for this element. String 03d NamedObjectname [inherited] The object's name.", "type": "code", "id": {"id": "1273207c-8558-4bd9-9513-d1e5c194d631"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear span patterns for programming elements; clean and coherent, representing valuable training data for a tokenizer-free model focused on coding syntax. / Contains both structured data (names, types) and unstructured descriptions (\"The Material for this element\"), representing a mix of patterns useful in span segmentation. / Clear spanable elements with consistent naming conventions, suitable for learning both syntax and semantics in a mixed context. / Clear, structured elements representing meaningful spans; clean and well-formatted for training purposes. / Clear structured elements with identifiable spans; represents valuable patterns for learning span composition in programming contexts."}}
{"raw": "[inherited] Directly binds two Param elements such that this parameter gets its value from the source parameter: The source must be compatible with this parameter:\nParameters:\nsource_para The parameter that the value originates from: Passing in null will unbind any m parameter currently bound. Returns:\nTrue if the bind succeeded.", "type": "mixed", "id": {"id": "72abd384-300d-4c9b-84e6-4be0ce188c8e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of structured comments and parameter descriptions that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both documentation (natural language) and programming context (code). / The segment contains a mix of technical documentation (natural language) and programming concepts, with clear references to parameters (\"source_para\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks context on how the binding process works or examples which could improve its utility as training data. / The segment contains a mix of documentation (natural language) and configuration-like statements, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to shorthand notation like \"[inherited]\" without context or explanation. / The segment contains a mix of documentation-style text and programming concepts, with clear references to parameters (\"source_para\") that can be segmented into meaningful spans for learning purposes. It is clean but lacks explicit examples or varied contexts which could improve its utility as training data. / The segment contains a mix of descriptive text and structured parameter definitions, which can help the model learn both span segmentation in prose as well as syntactical patterns found within programming contexts. However, it lacks explicit examples with varied complexity that could further improve its utility for training purposes."}}
{"raw": "DrawPass\n03d Effect\n03d FunctionEval\n03d IndexBuffer\n03d Material\n03d ParamArray 93d", "type": "code", "id": {"id": "782337e5-33c2-4ca6-afaf-ce74f9559038"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured commands typical for shader programming; well-suited to learn span segmentation in a coding context. / Clear, structured list of programming-related terms suitable for span segmentation and learning patterns in a coding context. / Clear structured elements representing function names and parameters, suitable for span segmentation in programming context. / Clear, structured list of programming constructs; well-suited for learning span segmentation in a coding context. / Clear, structured list of function names likely representing meaningful spans in a programming context; clean and coherent for training purposes."}}
{"raw": ".unbindOutput Param destination_param [inherited] Breaks a specific param-bind output connection on this param: Parameters:\ndestination_param param to unbind. 03d.", "type": "mixed", "id": {"id": "6a5a4211-91e3-40cf-87c7-fbb11acab352"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear parameters that can be segmented into meaningful spans for learning purposes. However, the presence of an unclear character (\"03d.\") may slightly reduce its score due to potential ambiguity in interpretation or formatting errors. / The segment contains a mix of programming language syntax and documentation, with clear structured elements like function names (\"unbindOutput\") that can be segmented into meaningful spans for training purposes. It is clean but lacks context or additional examples to improve its utility as standalone data. / The segment contains a mix of descriptive text and programming-related terms, with clear structure for span segmentation; however, the presence of an ambiguous symbol (03d) reduces clarity slightly. / The segment contains a mix of descriptive text and programming-related terms, with clear delimiters for potential spans like \".unbindOutput\", \"destination_param\", etc., which can be useful in learning span segmentation patterns across different contexts. / The segment contains a mix of programming language syntax and documentation, with clear parameter names that can be segmented into meaningful spans for learning purposes. Despite the presence of an unusual character sequence (\"03d.\"), it still maintains sufficient clarity to serve as training data."}}
{"raw": "Setting this has no meaning to 03D, but is useful for debugging and for the functions Client_getObjects, Pack-getObject, RenderNode getRenderNodesByNamelnTree and RenderNode:getTransformsByNameInTree which search for objects by name. Reimplemented from 03d NamedObjectBase:", "type": "mixed", "id": {"id": "6c2149d0-34eb-446d-8121-8bf8b51c526d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical descriptions and function names, which can be segmented into meaningful spans for learning span composition in both programming contexts (code) and explanatory text (natural language). It is clean but lacks context that could improve its utility as training data. / The segment combines both programming concepts and debugging practices, providing a rich context for learning span segmentation in diverse contexts. It includes function names which are clear spans to be learned by the model. However, it lacks explicit natural language explanations that could further enhance its utility as training data. / The segment contains a mixture of technical descriptions and function names, which are structurally clear for span segmentation; it is clean but lacks context to fully represent the domain's patterns. / The segment contains a mix of technical descriptions and function names, which can help the model learn span segmentation for both human-readable text (natural language) and programming constructs (code). Despite being somewhat informal (\"Setting this has no meaning to\"), it still maintains structural clarity with identifiable spans like \"Client_getObjects,\" making it valuable training data. / The segment contains a mix of technical descriptions and function names, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to potential typos (\"NamelnTree\" should be \"NameNodeTree\") and could benefit from further cleaning for optimal training utility."}}
{"raw": "'03d. WorldViewProjectionInverseTransposeParamMatrix4'\nReturns:\nThe newly created Param or null on failure. Param 03d. ParamObject-getParam String param_name ) [inherited] Searches by name for a Param defined in the object:\nParameters:\nparam name Name to search for Returns:\nThe Param with the given name, Or null otherwise.", "type": "mixed", "id": {"id": "49c1a3b1-07bb-4772-bff5-73a4a1a56521"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines both programming language syntax and documentation, which can help the model learn to distinguish between different types of spans in a context that includes variable names (code) alongside descriptions or comments about them (natural). However, it lacks clarity due to potential misinterpretation as code. / The segment contains a mix of programming language syntax and documentation, with clear structured elements like function names ('WorldViewProjectionInverseTransposeParamMatrix4'), return types (e.g., 'Returns:'), parameters descriptions ('Parameters:', followed by parameter details). It represents valuable patterns for learning span composition in both code structure and natural language explanations. / The segment contains a mix of programming concepts and language, with clear structure for learning span segmentation in both contexts. However, the presence of '03d' as an identifier could be ambiguous without context; it may represent code or natural text depending on usage which might need clarification during training data curation. / The segment mixes programming concepts with a lack of clear, coherent sentences or phrases that can be easily segmented into meaningful spans for training purposes. It also lacks context and clarity needed to understand the structure fully. / Clear structured elements with identifiable spans, representing valuable patterns for learning span composition in programming context."}}
{"raw": "[inherited] The object's name. This property is read-only.", "type": "mixed", "id": {"id": "ef34a1ff-bbb5-4194-8971-a0bcc170a659"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of documentation language (\"The object's name\") and programming concepts (read-only property), which can help the model learn span segmentation in both contexts. / The segment contains a mix of markup language and plain text, with clear indication that 'The object's name' is an inherited property which can be segmented into meaningful spans for training purposes. It represents valuable patterns in both natural language descriptions (e.g., \"This property's read-only\") and code-like syntax (\"[inherited]\"). / The segment contains a mix of documentation-style text and programming-like syntax, which can help the model learn to recognize span boundaries in both contexts. However, it lacks sufficient length or complexity for robust training data evaluation. / The segment contains a mix of documentation style (natural language) and programming concepts, with clear span identification for both the property name \"The object's name\" as an inherited attribute in object-oriented code design. It is clean but lacks context which might be necessary to fully understand its usage or purpose within larger systems; however, it still provides valuable patterns related to inheritance properties that can aid learning about mixed content types. / The segment contains a mix of language and markup, with clear span boundaries for \"The object's name\" as an inherited property description in programming context. It is clean but lacks contextual richness needed to fully represent the domain's patterns."}}
{"raw": "int literal DECIMAL LITERAL literal value DECIMAL LITERAL FLOAT LITERAL STRING LITERAL+ T FALSE T TRUE float literal FLOAT LITERAL NOT NOT_EQUAL AND LPAREN RPAREN MUL MUL ASSIGN PLUS PLUS PLUS ADD ASSIGN COMMA MINUS MINUS MINUS SUB ASSIGN DIV DIV ASSIGN MOD ASSIGN COLON SEMI LESS LESSEQUAL ASSIGN EQUAL GREATER GREATEREQUAL QUESTION LBRACKET RBRACKET LCURLY OR RCURLY DOT BITWISE NOT BITWISE SHIFTL BITWISE SHIFTR BITWISE AND BITWISE OR BITWISE XOR BITWISE SHIFTL ASSIGN BITWISE SHIFTR ASSIGN BITWISE AND ASSIGN", "type": "code", "id": {"id": "656011b5-296f-4c77-a842-08a18e62a9eb"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8200000000000001, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured representation of programming constructs and operators suitable for learning span segmentation in a tokenizer-free context. / The segment contains clear, structured programming constructs that can be segmented into meaningful spans for learning span composition in a tokenizer-free context. It is clean and well-formed as it represents an unambiguous sequence of operators used within expressions or statements typical to many coding languages like C-like syntax. / The segment contains a clear sequence of programming constructs and operators, which can be segmented into meaningful spans for learning span composition in the context of parsing or understanding arithmetic expressions within coding languages. It is clean from an instructional perspective but lacks natural language elements to provide compositional value outside its domain-specific use case. / The segment contains a clear sequence of programming syntax and constructs, which are valuable for learning span segmentation in the context of coding languages. It is well-formed with identifiable patterns like operators, literals, parentheses grouping expressions that can be segmented into meaningful spans suitable as training data for an X-Spanformer model focused on code understanding. / Clear structure with distinct programming constructs and operators, representing valuable patterns for learning span composition in a coding context."}}
{"raw": "[inherited] Unique id of the object:\nThis id will be unique, even across multiple O3D clients in the same page. This property is read-only: String 03d NamedQbiect name [inherited] The object's name. Setting this has no meaning to 03D, but is useful for debugging and for the functions ClientgetObjects, Pack-getObject, RenderNode_getRenderNodesByNameInIree and RenderNode-getTransformsByNameInTree which search for objects by name. Reimplemented from 03d NamedQbiectBase:\nNumber 03d FieldnumComponents", "type": "mixed", "id": {"id": "cf87f948-fe6b-4bdd-ac86-a680c079b132"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical terms and properties that are not clearly structured for meaningful span segmentation; lacks coherence as it appears to be an excerpt from documentation with incomplete sentences, making its utility questionable. / The segment contains a mix of documentation-style text and programming-related terms, with clear identifiers like \"Unique id\" that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully evaluate its training utility without additional examples or surrounding content. / The segment contains a mixture of structured data (code-like elements) and descriptive text, which can help the model learn to differentiate between spans in both contexts. It has clear identifiers like \"Unique id\" that are useful for span segmentation training purposes. / The segment contains both structured programming elements (fields, methods) and descriptive text that can be segmented into meaningful spans for a span-aware model to learn from. It is clean but lacks context which could improve its utility as training data. / The segment contains a mix of documentation-style text and programming-related terms, which could help the model learn span segmentation in both contexts. However, it lacks clear examples for some constructs like \"FieldnumComponents.\" More varied segments are needed to improve learning outcomes."}}
{"raw": "ParamObject 03d Primitive 03d RenderFrameCounter 03d RenderNode\n03d RenderSurfaceSet\n03d Sampler 93d SecondCounter 03d Shape 03d Skin 03d SkinEval 03d", "type": "code", "id": {"id": "bac1e16f-0817-4993-bf2d-173812cd161c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements representing meaningful spans for a tokenizer-free, span-aware model in the context of programming constructs. / Clear structured elements representing meaningful spans for a tokenizer-free, span-aware model; well-suited to learning patterns in programming constructs. / Clear, structured representation of programming constructs; spans can be segmented into meaningful identifiers and types for learning purposes. / Clear, structured representation of programming constructs; spans can be identified as individual elements or groups (e.g., \"ParamObject\", \"RenderFrameCounter\"). Well-formed for training purposes and represents valuable patterns in learning span composition within a coding context. / Clear, structured representation of programming constructs; spans can be identified as individual elements or groups relevant to a coding context."}}
{"raw": "ClearBufferclearColor The color to clear the buffer in RGBA Float4 format:\nbool 03d ClearBuffer_clearColorFlag true clears the current render target's color buffer to the clear color: false does not clear the color buffer", "type": "mixed", "id": {"id": "ad88162b-a2b4-4401-9dcc-c6e55c289b0a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming language syntax and descriptive text, providing a good mix of structured elements for learning span segmentation in different contexts. / The segment contains a mix of programming concepts and language, with clear spans for both the function name \"ClearBuffer\" as well as its parameters (\"clearColorFlag\") which are identifiable in code context; it is clean but lacks natural linguistic structure. / The segment contains both programming language syntax and descriptive text, showing clear structure for span segmentation with terms like \"ClearBuffer_clearColorFlag\" which can be identified as a single entity in the context of code documentation. It is clean but lacks contextual coherence due to mixing languages; however, it still represents valuable patterns that X-Spanformer could learn from mixed content types. / The segment contains both programming language syntax and descriptive text, providing a clear example of span segmentation between commands/flags (e.g., \"ClearBuffer_clearColorFlag\") and their descriptions (\"true clears the current render target's color buffer to the clear color\"). It is well-formed for training purposes. / The segment contains a mix of programming language syntax and comments, with clear structure for span segmentation between commands/flags (e.g., \"ClearBuffer_clearColorFlag\", \"true\") and descriptions (\"clears the current render target's color buffer to the clear color\"). It is coherent but lacks context."}}
{"raw": "03d. BezierCurveKey Class Reference\nInherits 03d. CurveKey:\nList of allmembers\nDetailed Description\nAn CurveKey that uses a bezier curve for interpolation between this key and the next\nPublic Member Functions\ndestroy bool isAClassName (String class_name)\nPublic Attributes\nFloat2 inTangent Float2 outTangent Number input Number output Id clientld", "type": "mixed", "id": {"id": "a633f17b-040d-4689-96ae-c29d4b60ddfd"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of class names, attributes with types and values (code), along with descriptions that are in English prose form which is beneficial for training an encoder to understand both natural language context as well as code constructs. It has clear structural elements like method signatures (\"destroy bool\") indicating span boundaries suitable for learning patterns related to programming languages mixed with documentation style text. / Clear structure with class references, attributes and methods indicative of programming constructs; good for learning span segmentation in a coding context. / The segment contains a mix of class names, attributes and descriptions which can be segmented into meaningful spans for learning span composition in both programming context (code) as well as technical documentation language (natural). / The segment contains both structured programming elements (class, member functions) and descriptive text that can help the model learn span segmentation in a context combining coding constructs with documentation language. / Clear structure with class references, attributes and methods; represents valuable patterns for learning span composition in programming context."}}
{"raw": "Number 03d Primitive numberVertices The number of vertices the primitive has. Shape 03d Element_owner [inherited] The current owner of this Draw Element: Pass in null to stop being owned. Note: Elements are referenced by the Pack they are created in and their owner: If the Element is removed from its Pack then setting the owner to null will free the Element: Or; visa versa, if you set the Element's owner to null then removing it from its Pack will free the Element:\nArray 03d", "type": "code", "id": {"id": "b90e0d4f-560c-4c32-b3ed-1786ecbcadd2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured programming concepts with meaningful spans like \"Primitive numberVertices\" and ownership patterns in elements. Well-suited for learning span segmentation within a coding context. / Clear distinction between descriptive text and technical terms related to a programming context, with identifiable spans for both elements. / Clear structure with meaningful spans; represents valuable patterns for learning span composition in programming context. / The segment contains a mix of technical descriptions and structured data (primitive numbers, elements), which can help the model learn span segmentation in both contexts. However, it lacks clarity due to fragmented sentences; thus it's not perfect but still valuable for training purposes. / Clear structure with identifiable spans related to programming concepts; clean and coherent for training purposes."}}
{"raw": "Param updateInput [inherited] If true, this param will make sure its input param is up to date when using it as a source. Default = true. This is for helping with Param cycles. If paramA gets its value from paramB and paramB gets its value from paramA: Ifyou go paramA:value, paramB will evaluate then copy to paramA If you go paramB.value, paramA will evaluate then copy to paramB. Ifyou set paramB updateInput = false, then: If you go paramA.value, paramB will evaluate then copy to paramA. If you go", "type": "mixed", "id": {"id": "89499f2a-4344-4c69-98c9-43feac88fea0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and programming-like syntax, which can help the model learn span segmentation in both contexts; however, it lacks clarity due to potential misinterpretation as code or natural language. Further refinement may be needed for optimal training utility. / The segment contains a mix of technical descriptions and parameter settings, which can be segmented into meaningful spans for learning span composition in both programming contexts (code) and explanatory text (natural language). However, the explanation is somewhat convoluted; clarity could improve training utility with better formatting. / The segment contains a mix of technical language and configuration-like instructions, with clear parameter references that can be segmented into meaningful spans for learning span composition in both contexts. / The segment contains a mix of technical documentation and programming concepts, with clear parameter descriptions that can be segmented into meaningful spans for learning span composition in both contexts. However, the text is somewhat repetitive which may affect clarity slightly but still retains its compositional value as training data. / The text contains a mixture of technical descriptions and pseudo-code-like structures, which can help the model learn span segmentation in both programming contexts (code) as well as explanatory prose that describes how parameters interact within an algorithmic process. However, there are some inconsistencies with punctuation (\"Ifyou go\" instead of \"If you go\") affecting clarity slightly but not significantly enough to discard it entirely for training purposes."}}
{"raw": "03d. Shape\n!03djs primitives_VertexInfo 03djs.primitives createPlaneVertices\nnumber\nwidth\nnumber depth number subdivisionsWidth number subdivisionsDepth !o3djsmath Matrix4 opt_matrix Creates XZ plane vertices The created plane has position, normal and uv streams.", "type": "mixed", "id": {"id": "9b52cae6-b84f-4654-b1f0-30224ddc8e6e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (\"03djs primitives_VertexInfo\"), variable assignments (e.g., \"number width\", \"Matrix4 opt_matrix\"). It is coherent but lacks context or natural language explanation. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (\"03djs primitives_VertexInfo\"), variable assignments (e.g., \"number width\", \"opt_matrix Creates XZ plane vertices\"). It is coherent but lacks natural language context. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans such as function names (\"03djs primitives_VertexInfo\"), variable assignments (e.g., \"number width\", \"Matrix4 opt_matrix\"), which are valuable patterns to learn. However, the presence of non-standard characters like '0' instead of 'o', mixed casing ('Opt_Matrix'), and lack of punctuation may affect clarity slightly but still retain compositional value for training purposes. / The segment contains a mix of programming constructs and comments, with clear delimiters for spans; however, it lacks coherence due to the presence of both human-readable text (\"Shape\", \"Create XZ plane vertices\") and code-like syntax (e.g., \"!03djs primitives_VertexInfo\"). / The segment contains a mix of programming constructs and comments, with clear delimiters for spans like function names (`03djs primitives_VertexInfo`), variable declarations (e.g., `number width number depth number subdivisionsWidth number subdivisionsDepth`), and code statements. It is coherent but lacks context or explanation that could improve its training utility."}}
{"raw": "BITWISE XOR ASSIGN\n'^='\nBREAK break' BUFFER buffer' ; COLUMN MAJOR column major' ; CBUFFER cbuffer' CENTROID centroid' T CONST const' CONTINUE continue' ; DISCARD discard\" DO do ' ELSE 'else' EXTERN 'extern' T FALSE false' ; FLOAT (('f' |'F') ( '1' |'L') ( '0 ' | '0' ) ( 'a' | 'A') ( 't' | 'T') )", "type": "code", "id": {"id": "8ba8a6c6-71a5-450c-9405-896859f82ff6"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, well-defined spans representing programming constructs and constants; suitable for learning span segmentation in a coding context. / Clear structure with programming constructs, useful for learning span segmentation in a coding context. / Clear, well-defined programming constructs and keywords suitable for learning span segmentation in a coding context. / Clear structure with programming constructs and keywords, useful for learning span segmentation in coding context. / Clear and distinct programming constructs; useful for learning span segmentation in a coding context."}}
{"raw": "The offset of this field in the Buffer in bytes. This property is read-only:\nNumber 03d Field size [inherited] The size of one element of this field. This property is read-only:\n03d. UInt32Field Class Reference\nInherits 03d Field\nList_of all members\nDetailed Description\nfield that contains integers.", "type": "mixed", "id": {"id": "b0deefb9-9efd-4075-8f9a-4e9517043a3a"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines both descriptive text and technical details about a field in programming, which includes clear spanable elements like \"offset,\" \"Buffer,\" \"[in bytes],\" etc., representing valuable patterns for learning span composition across natural language descriptions of code constructs. / The segment combines both technical descriptions and structured data, which can help the model learn span segmentation in a context that includes programming concepts alongside descriptive text. However, it lacks clarity due to repetition (\"The offset of this field...\") and could be improved for better training utility by removing redundancy or clarifying its structure further. / Clear structure with distinct segments; useful for learning span segmentation in programming contexts. / The segment combines both descriptive text and technical details about a field in programming, which can help the model learn span segmentation for different types of content. / The segment combines both descriptive text and technical details about a field in programming, showing clear structure for span segmentation with terms like \"offset,\" \"Buffer,\" \"Field size,\" etc., which are valuable patterns to learn from. It is clean but lacks context or examples that could enhance its utility as training data."}}
{"raw": "o3djs particles OneShot I03d Transform opt_parent o3djs particles ParticleEmitter createOneShot Creates a OneShot particle emitter instance.", "type": "mixed", "id": {"id": "c1c24a22-8087-4815-8209-f55fa67ed0db"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming terms and descriptions, with clear spans for both syntax (code constructs) like \"o3djs particles\" or function calls (\"createOneShot\"), as well as natural language explanations such as \"Creates a OneShot particle emitter instance.\" This combination provides valuable patterns in span segmentation across different content types. / The segment contains a mix of programming terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both contexts. / The segment contains a mix of programming terms and object names that can be segmented into meaningful spans, reflecting the structure found in software documentation or API references which are valuable for learning span composition. / The segment contains a mix of programming terms and phrases that can be segmented into meaningful spans, representing valuable patterns for learning span composition in both domains. It is clean but lacks context to fully understand the code's purpose or function within its larger scope. / The segment contains a mix of programming terminology and function calls, which can help the model learn span segmentation for both language constructs (e.g., \"OneShot\", \"ParticleEmitter\") and code-specific elements (\"o3djs particles\")."}}
{"raw": "To make a particle system be continuous set this to match the lifeTime.", "type": "mixed", "id": {"id": "fad335ce-46a3-4e84-b8d3-08199138c732"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear instruction with identifiable spans (\"particle system\", \"continuous set this to match the lifeTime\"), representing valuable patterns for learning span composition in both programming contexts and natural language instructions. It is clean, coherent, but lacks context which might be beneficial for more comprehensive training data. / The segment contains a clear instruction with both imperative language and technical terms, which can help the model learn to distinguish between different types of spans in programming contexts combined with human instructions. / The segment contains a clear instruction with both technical terms (\"particle system\", \"lifeTime\") and programming concepts, providing valuable patterns for learning span composition in the context of software development documentation or code comments. / The segment contains a mix of programming instructions and comments, with clear span boundaries for both the command (\"make\") and its argument (\"particle system\"). It is clean but lacks context which might be necessary to understand fully in training scenarios. / Contains a mix of programming instructions and comments, with clear span for the actionable instruction (\"set this to match\"). The structure is clean enough that it can be used as an example where natural language meets code semantics."}}
{"raw": "; FOR for' IF 1f' T IN in' INLINE inline' ; T INOUT inout' T LINEAR linear' MATRIX ('m' | 'M' )", "type": "code", "id": {"id": "55f74625-e2f7-4afc-978d-3d0c770cc1d0"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear programming constructs and patterns for span segmentation; well-suited to learning tokenizer-free encoding of code segments. / Clear programming constructs and keywords; well-suited for learning span segmentation in a coding context. / Clear programming constructs and keywords identifiable as spans; well-suited for learning span composition in a coding context. / Clear programming constructs and keywords; well-suited for learning span segmentation in a coding context. / Clear programming constructs and patterns for span segmentation; well-defined syntax elements."}}
{"raw": "ClearBuffer clearDepthFlag true clears the current render target's depth buffer to the clear depth value. false does not clear the depth buffer:\nNumber 03d ClearBuffer_clearStencil The value to clear the stencil buffer to (0 - 255).", "type": "mixed", "id": {"id": "66ff15a0-f0ff-4480-b9e1-57865de922b2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment combines both programming instructions and numerical values, which can help the model learn span segmentation for different types of content within a single context. However, it lacks clarity in separating natural language explanations from code constructs due to its brevity. / Contains both programming instructions and numerical values, showcasing clear span segmentation opportunities in a technical context. / The segment contains a mix of programming concepts and values, with clear structure for span segmentation; however, it lacks context which could be beneficial in training. / The segment contains both programming instructions and numerical values, demonstrating clear patterns for span segmentation in a coding context with embedded constants. / Contains both programming concepts and values, useful for learning span segmentation in a mix of contexts."}}
{"raw": "Public Member Functions\nsetAt Number start_index; Array values) Array getAt Number start_index, Number num_elements) bool isAClassName (String class_ name)\nPublic Attributes\nNumber numComponents Buffer buffer\nNumber offset\nNumber size\nString name Id clientld String className", "type": "mixed", "id": {"id": "306d526c-8713-4f54-933c-23fe26369cff"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans for functions, attributes; well-suited to learn span segmentation in programming context. / The segment contains a mix of programming constructs and attributes, with clear spanable elements like function names (\"Public Member Functions\"), parameters (e.g., \"Number start_index\", \"Array values\"), method calls (\"getAt\"), boolean expressions (\"isAClassName\"), class members (\"public Attributes\"), variable declarations (\"String name Id clientld String className\"). It is well-formed and clean, representing valuable patterns for learning span composition in both code structures. / Clear structure with identifiable spans; combines both class-like structures and attribute definitions, representing valuable patterns for learning span segmentation in a mixed context. / Clear structure with identifiable spans; useful for learning span segmentation in programming context. / Clear structure with identifiable spans; represents both class/object-oriented programming patterns and attribute/method definitions, enhancing span composition learning for a tokenizer-free model."}}
{"raw": "Viewport 03d. Matrix4AxisRotation 03d Matrix4Composition 03d Matrix4Scale 03d Matrix4Translation 03d ParamOp2FloatsToFloat2 93d ParamQp3FloatsToFloat? 03d ParamOpAFloatsToFloat4 03d", "type": "code", "id": {"id": "1f98cb3f-3e86-4b19-ac6f-07ff18a14066"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear, structured programming constructs identifiable as spans; clean and coherent for training purposes. / Clear structured elements representing span composition; clean and well-formatted for training purposes. / Clear, structured programming constructs; spans are identifiable as function names and parameters. Well-suited for learning span segmentation in a coding context. / Clear structured elements representing meaningful spans for a tokenizer-free span-aware model; well-suited to learning patterns in programming constructs. / Clear, structured programming constructs with identifiable spans for learning; well-suited to X-Spanformer training."}}
{"raw": "Id 03d ObjectBase clientId [inherited] Unique id of the object. This id will be unique, even across multiple 03D clients in the same page. This property is read-only\nParam 03d Param inputConnection [inherited] The input connection for this param:\nThis property is read-only:", "type": "mixed", "id": {"id": "bd3da256-dd02-4492-bc41-ac154425e813"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of identifiers and descriptions that can be segmented into meaningful spans, such as \"Id\", \"[inherited]\", etc., which are useful for learning span composition in both code-like structures (e.g., property names) and natural language explanations (\"Unique id\"). / The segment contains a mix of structured identifiers and descriptions, with clear separation between object properties (spans) that can be used for training span segmentation in both programming contexts and documentation language. / The segment contains a mix of descriptive text and structured data (ID, Param), which can help the model learn both span segmentation in human language as well as recognizing patterns typical for programming contexts like identifiers or parameters with their descriptions. However, it lacks coherence due to its fragmented nature; thus it's not ideal but still valuable enough to be kept for mixed-context learning purposes. / The segment contains a mix of structured identifiers and descriptions, which can help the model learn to differentiate between different types of spans in both programming contexts (IDs) and descriptive text. However, it lacks clarity due to repetition (\"inherited\" appears twice). / The segment contains a mix of structured identifiers and descriptions, with clear patterns for span segmentation that can be useful in training the model to understand both programming constructs (e.g., object properties) and descriptive text elements. However, it lacks context which might affect its utility as standalone data."}}
{"raw": "WorldViewParamMatrix4 Class Reference\nInherits 03d ParamMatrix4;\nList of allmembers\nDetailed Description\ntype of ParamMatrix4 that supplies the current world view matrix at render time.", "type": "mixed", "id": {"id": "748378d2-e343-4356-b42d-005a8332581e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of class reference notation and descriptive text, with clear structured elements like \"WorldViewParamMatrix4 Class Reference,\" which can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples that could improve its training utility. / The segment contains a mix of class reference notation and descriptive text, providing both structured (class name) and unstructured elements that can help the model learn span segmentation in different contexts. / The segment contains a mix of class reference notation and descriptive text, with clear structure for span segmentation into terms like \"WorldViewParamMatrix4 Class Reference,\" inheritance notations (\"Inherits\"), member listings (\"List of allmembers\"), descriptions (\"Detailed Description type of ParamMatrix4 that supplies the current world view matrix at render time.\"), which are valuable patterns to learn. / Clear mix of class reference (code) and descriptive text, representing both structured programming elements and explanatory prose. / The segment contains a mix of class reference notation (code) and descriptive text, which can help the model learn span segmentation for both programming constructs (\"WorldViewParamMatrix4 Class Reference\", \"Inherits\") as well as natural language descriptions (\"Detailed Description\")."}}
{"raw": "Number num components\nDefines a field on this buffer\nNote: Creating a field after having allocated the buffer is an expensive operation as the data currently in the buffer has to be shuffled around to make room for the new field. Parameters:\nfield_type\ntype of data in the field. Valid types are \"FloatField\" \"UInt32Field\" \"UByteNField\".", "type": "mixed", "id": {"id": "ee55537a-0d45-4538-914a-1d289663c512"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of descriptive text and technical terms related to buffer fields, which can help the model learn span segmentation for both human-readable descriptions (\"Number num components\", \"Defines a field on this buffer\") and specific programming concepts (\"field_type\"). / The segment contains a mix of descriptive text and technical specifications, which can help the model learn to distinguish between different types of spans in both domains. It is structured clearly with identifiable components like field definitions that are common patterns for span segmentation tasks involving code documentation or configuration descriptions. / The segment contains a mix of descriptive text and technical terms related to buffer fields, which can help the model learn span segmentation for both human-readable descriptions (\"Number num components\", \"Defines a field on this buffer\") as well as specific programming constructs (e.g., parameter names like \"field_type\"). / The segment contains a mix of descriptive text and programming-related terms, which can help the model learn span segmentation in both contexts. However, it lacks clear examples for each type separately; thus it's not ideal as standalone training data but could be useful when combined with other segments. / The segment contains a mix of descriptive text and programming-related terms, with clear delineation between the explanation (\"Defines a field on this buffer\") and technical specifications (field types). It is clean for training purposes but lacks contextual examples or varied sentence structures that could improve its utility."}}
{"raw": "ClearBuffer clearStencilFlag true clears the current render target's stencil buffer to the clear stencil value.", "type": "code", "id": {"id": "27bb97b7-3ed4-4aed-9b99-35867b8f2411"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear programming concept with identifiable spans such as function names, parameters (e.g., \"clearStencilFlag\"), and descriptions (\"clears the current render target's stencil buffer to the clear stencil value\"). It is clean for training purposes from an NLP perspective. / The segment contains a clear programming-related term (\"ClearBuffer\") and an associated flag value, representing valuable patterns for learning span composition in the context of coding language semantics. / The segment contains a clear command with parameters that can be segmented into meaningful spans for learning, representing valuable patterns in programming language syntax and semantics. It is clean and well-formed as part of the target domain (code). / The segment contains a clear command with parameters that are easily identifiable as meaningful spans for learning span composition in the context of programming language constructs. It is clean and well-formed, representing valuable patterns relevant to X-Spanformer training data focused on coding syntax understanding. / The segment contains a clear, structured command with identifiable spans for the 'ClearBuffer' function and its parameters in programming context. It's clean, well-formed, representing valuable patterns for learning span composition within coding constructs."}}
{"raw": "String 03d NamedObjectBase name [inherited] The object's name. This property is read-only:", "type": "mixed", "id": {"id": "7bc27377-a2bc-4878-b54a-152937149d4e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear spans for the object name (\"String 03d\") that can be used to learn span segmentation in both natural text (documentation) and code constructs. However, it lacks coherence as an isolated example; additional context would improve its utility. / The segment contains a mix of programming language syntax and documentation, with clear span boundaries for both the identifier 'String' as part of an object name in code ('03d NamedObjectBase') and its descriptive text ('The object's name'). It is clean but lacks context. / The segment contains a mix of programming-like syntax and comments, which can be useful for learning span segmentation in both contexts. However, the clarity could improve with better formatting or additional context to enhance training utility. / The segment contains a mix of programming language syntax and comments, which can be useful for learning span segmentation in both contexts. However, the clarity could improve by separating syntactic elements from descriptive text. / The segment contains a mix of programming concepts and documentation, with clear spanable elements like \"String\", \"[inherited]\", which are useful for learning both syntax (code) patterns as well as natural language descriptions in technical contexts. However, the lack of context makes it less ideal compared to fully fleshed-out examples."}}
{"raw": "Note that modifications to this array [e.g. push()] will not affect the underlying ParamObiect; while modifications to the array's members will affect them:\nThis property is read-only:\nPrimitiveType 03d Primitive_primitiveType The type of primitive the primitive is (i.e,, PrimitivePOINTLIST; Primitive. LINELIST, Primitive. TRIANGLELIST; etc.)", "type": "mixed", "id": {"id": "91a447a8-2abf-4640-8f9c-08abe99ede7d"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of technical notes and programming concepts, with clear spanable elements like array modifications (e.g., push()), read-only properties (\"This property is read-only:\"), primitive types (\"Primitive_primitiveType\"), which are valuable for learning the composition in both natural language explanations and code constructs. / The segment contains both structured programming concepts and comments, which can help the model learn span segmentation in a coding context with embedded explanations. / The segment contains a mix of comments, programming language constructs (e.g., array references), and technical terms that can be segmented into meaningful spans for learning purposes. Despite some informal phrasing (\"[e.g.]\"), it is clean enough to serve as training data with minor adjustments. / The segment contains a mixture of comments and programming constructs, with clear spans for both the note/comment (\"Note that modifications...\") as well as technical terms like \"ParamObiect\" which can be useful in learning span segmentation across different contexts. / The segment contains a mix of programming concepts and documentation, with clear structure for learning span segmentation in both contexts. However, the presence of typographical errors (\"Primitive_primitiveType\" instead of \"Primitive primitiveType\") may affect clarity slightly but does not significantly detract from its overall utility as training data."}}
{"raw": "bool 03d. ParamObject removeParam Param param Removes a Param from a ParamObject: [inherited]\nThis function will fail if the param does not exist on this ParamQbject or if the param is unremovable. Parameters:\nparam param to remove.", "type": "mixed", "id": {"id": "c24ef9e6-0ac7-40a1-a483-92b92893c5bd"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear structured elements like function names (\"removeParam\"), parameters (\"param param to remove.\"), which are valuable for learning span segmentation in both code context (e.g., \"bool\", \"03d.\", \"[inherited]\") and natural language descriptions. / Clear distinction between language and programming constructs; spans can be identified for both types, representing valuable patterns in span segmentation across different domains. / The segment contains both programming language keywords and comments, demonstrating a clear structure with identifiable spans for learning purposes. It includes function names (\"removeParam\"), parameters (\"param param to remove.\"), code-like syntax (e.g., \"bool\", \"03d.\", \"[inherited]\") as well as natural language explanations that are coherent within the context of programming documentation. / The segment contains a mix of programming concepts and documentation, with clear spans for both the function name \"removeParam\" as well as its parameters description which are valuable patterns to learn span segmentation in code context. / The segment contains a mix of programming language syntax and comments, with clear indications for parameter removal in an object context; it has meaningful spans that can be learned by the model."}}
{"raw": "see http://developer:mozilla org/en/DOMlevent initKeyEvent Parameters: eventName one of 'keypress' , 'keydown' or 'keyup' . charCode the character code for the key: keyCode the key code for the key: control whether the control key is down: alt whether the alt/option key is down_ shift whether the shift key is down: meta whether the meta/command key is down: number 03djs.event-getEventKeyChar ! Event event Extracts the key char in number form from the event; in a cross-browser manner", "type": "mixed", "id": {"id": "403c3a69-d9aa-46ca-9f0c-524cde577d4c"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment mixes URLs, programming concepts (DOM event parameters), and a mix of English text with technical terms; lacks clear structure for meaningful span segmentation. / The segment contains a mix of URLs, programming concepts (DOM event parameters), and descriptions that can be segmented into meaningful spans for learning span composition in both contexts. However, the presence of special characters like ':', ' ', '_', and punctuation may pose challenges during training due to potential tokenization issues; thus it is not perfect but still valuable as mixed content. / The segment mixes URLs, programming terms (like 'event', 'keyCode'), and a mix of English words with punctuation; lacks clear structure for meaningful span segmentation. / The segment contains a mix of URLs, programming parameters descriptions (natural language), and specific key codes which are clear spans for the model to learn from. It's clean but lacks contextual coherence as it jumps between different types without transitions or explanations. / The segment contains a mix of URLs, programming concepts (DOM event parameters), and descriptions that can be segmented into meaningful spans for training purposes; however, it lacks clarity due to the presence of special characters like ':', which may confuse tokenization processes."}}
{"raw": "( 'n' | 'N') ( 'g' | 'G' ) ; STRUCT struct' SWITCH switch TBUFFER tbuffer TEXTURE ('t' | 'T') ( 'e' | 'E' ) ( 'x'|'X') ('t' | 'T') ( 'u' | 'U') ('r' | 'R' ) ( 'e' | 'E' ) ; TEXTURELD TexturelD' ; TEXTUREIDARRAY TexturelDArray' ; TEXTUREZD Texture2D' ; TEXTUREZDARRAY Texture2DArray' ; TEXTUREZDMS Texture2DMS TEXTUREZDMSARRAY Texture2DMSArray' 1 TEXTURE3D Texture3D ' TEXTURECUBE TextureCUBE TEXTURECUBEARRAY TextureCUBEArray' TEXTURERECT TextureRECT ' T TRUE true TYPEDEF typedef' UNIFORM uniform VECTOR ('v' |", "type": "code", "id": {"id": "acac8bc7-b122-47c5-b2eb-cd22ac4cb869"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.76, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structured elements representing programming constructs, suitable for learning span segmentation in a coding context. / Clear, structured programming constructs with consistent naming patterns for spans; well-representative of target domain (code). / The segment lacks clear, meaningful spans due to its arbitrary combination of characters and symbols without context or coherence in either programming syntax or semantics. It doesn't represent structured patterns for learning span composition effectively as a training dataset. / Clear structure with identifiable patterns for span segmentation; well-suited to training a tokenizer-free, span-aware model focused on programming constructs. / Clear, structured patterns of variable names and constants suitable for span segmentation in programming context."}}
{"raw": "num components number of components in the field. Returns:\nThe created field.", "type": "mixed", "id": {"id": "52e24a45-30b1-4cb5-ae30-f7f5e53391b8"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of numbers, variable names (\"num components\", \"number of components\"), and programming-related terms that can be segmented into meaningful spans for learning purposes in both natural language processing (NLP) tasks related to code comprehension as well as general text understanding. / The segment contains a mix of programming terminology and documentation, with clear phrases that can be segmented into meaningful spans for learning purposes. It is clean but lacks context or examples to improve its training utility further. / The segment contains a mix of numerical values, variable names (\"num components\", \"number of components\"), and programming-related terminology that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully understand the domain or function it represents in code. / The segment contains a mix of programming-related terminology and documentation-style text, which can help the model learn span segmentation for both technical terms (\"num components\", \"number of components\") as well as natural language phrases like \"in the field\" and \"Returns\". / The segment contains a mix of numerical values and descriptive text, which can help the model learn to distinguish between different types of spans in both numeric expressions (e.g., \"num components\") and natural language descriptions (\"number of components\")."}}
{"raw": "Reimplemented in 03d NamedQbiect: Array 03d Param outputConnections [inherited] The output connections for this param. This property is read-only:\nbool 03d Param readOnly [inherited] If true the param is read only.", "type": "mixed", "id": {"id": "ccf7f195-7036-4131-bbb3-33f186136731"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation in both contexts. However, it lacks clarity due to inconsistent formatting (\"03d\" instead of \"3D\"). Clean up for better training utility. / Clear structured elements with identifiable spans; represents valuable patterns for learning span composition in programming contexts. / The segment contains a mix of programming terms and descriptions, with clear spanable elements like \"03d NamedQbiect\", which can be useful for learning how to parse such constructs in code contextually embedded within natural language explanations. / The segment contains a mix of programming terminology and descriptions, with clear spanable elements like class names (\"03d NamedQbiect\"), properties (\"outputConnections\", \"readOnly\") that can be useful for learning context-aware segmentation in both code structures and natural language explanations. / Contains both structured programming elements and comments, which can help the model learn span segmentation in a coding context with embedded documentation."}}
{"raw": "Returns:\nTrue if the param was removed.", "type": "mixed", "id": {"id": "ff0d246d-5c53-40db-a853-fde8a058c23e"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a clear function signature with parameters and return values, representing valuable patterns for learning span composition in both programming contexts (code) and documentation language structures (natural). / Clear, concise statement with a predictable structure suitable for learning span segmentation in the context of conditional statements and boolean expressions. / Clear, concise statement with a predictable structure suitable for learning span segmentation in the context of conditional expressions and function return values. / The segment contains a clear function signature with parameters and return values, which are common in programming documentation; it represents valuable patterns for learning span composition between technical terms like \"Returns\", \"True\", \"param was removed\". / The segment contains a clear function signature with parameters and return values, which are common in programming documentation; it represents valuable patterns for learning span composition between keywords like \"Returns\", boolean expressions (\"True\"), parameter names (\"param\"), etc., across both natural language descriptions (docstrings) and code constructs."}}
{"raw": "compatible with this parameter: Parameters: source_para The parameter that the value originates from.", "type": "mixed", "id": {"id": "fd5b2b35-ac47-47c0-a5b7-434412424736"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming-like syntax and descriptive text, which can help the model learn to distinguish between different types of spans in both contexts. However, it lacks clarity due to potential ambiguity (\"compatible with this parameter\" could refer to multiple things). / The segment contains a mix of parameter descriptions and programming context, which can help the model learn span segmentation in both domains. It is clean but lacks complexity for higher scores. / The segment contains a mix of parameter names and descriptions, which can help the model learn span segmentation in both programming contexts (code) and documentation language (natural). However, it lacks context for full comprehension; additional examples with more varied content would improve training utility. / The segment contains a mix of parameter notation and descriptive text, offering clear examples for span segmentation in both technical (code-like) expressions (\"source_para\") and explanatory phrases (\"The parameter that the value originates from\"). This combination can help X-Spanformer learn to distinguish between different types of spans. / The segment contains a mix of parameter names and descriptions, which can be useful for learning span segmentation in both programming contexts (code) and documentation language (natural). However, the clarity is somewhat compromised by lack of punctuation or context clues that would normally aid understanding."}}
{"raw": "03d. Transform rotateZYX Vector3 radiansXYZ Pre-composes the local matrix of this Transform with a rotation: Interprets the three entries of the given vector as angles by which to rotate around the X, y and z axes Rotates around the X-axis first; then the y-axis, then the z-axis. Parameters: radiansXYZ A vector of angles (in radians) by which to rotate around the X, y and z axes. 03d.Transform.scale Number X, Number Y, Number Z Pre-composes the local matrix of this transform by a scaling transformation. For", "type": "code", "id": {"id": "b469d4a5-58e1-4af5-9f5f-36bf682499a9"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Contains clear structured elements like function names, parameters and descriptions which are useful for learning span segmentation in both programming contexts (code) and explanations or documentation style text (natural language). / Clear structure with identifiable spans for rotation angles and scaling parameters, representing valuable patterns in programming context. / Clear, structured commands with identifiable parameters for learning transformations and scaling in a programming context. / Clear structure with identifiable spans for rotation angles and scaling parameters, suitable patterns for learning span composition in programming context. / Clear structured elements with distinct spans for parameters and descriptions, representing valuable patterns in programming constructs."}}
{"raw": "This allows you to specify different features per area.", "type": "natural", "id": {"id": "f78ff815-f401-4d7d-81b9-2678f016bc85"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.74, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear instructional text with a potential span for \"different features per area\" that can be segmented and understood in context. / Clear, coherent sentence with a clear subject (\"you\") and verb (\"allows\"), indicating an action related to specifying features per area; suitable for learning span composition in the context of instructions or descriptions. / Clear, coherent sentence with a meaningful span of instructions for learning context and composition in natural language. / The segment contains a clear, coherent sentence with potential for learning about feature specification in different contexts; however, it lacks complexity and variety needed to train an advanced model effectively. / Clear, coherent sentence with a single meaningful span; good for learning simple noun phrases and action verbs in context."}}
{"raw": "This property is read-only. Id 03d ObjectBase clientld [inherited] Unique id of the object.", "type": "mixed", "id": {"id": "8cd4e294-44a0-46be-9bc9-f8bb57e89408"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming language syntax and documentation, with clear identifiers like \"Id\", which can be segmented into meaningful spans for learning purposes. However, the readability could improve by correcting typos (\"clientld\" should likely read as \"Client ID\") to enhance training utility further. / The segment contains a mix of programming language syntax and comments, which can be useful for learning span segmentation in both contexts. However, the readability could improve by separating syntactic elements from descriptive text. / The segment contains a mix of programming language syntax and comments, with clear identifiers for object properties that can be segmented into meaningful spans such as \"This property is read-only\", \"[inherited]\", and \"Unique id\". It represents valuable patterns in both code structure (object attributes) and natural language descriptions. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation for both types of content. However, it lacks clarity due to potential typos (\"clientld\" instead of \"Client\") that could confuse learners if not cleaned up first. / The segment contains a mix of programming language syntax and comments, which can help the model learn span segmentation for both types of content. However, it lacks clarity due to potential typos (\"clientld\" instead of \"Client\") and missing punctuation or capitalization that could hinder learning if not cleaned up."}}
{"raw": "[inherited] Unique id of the object. This id will be unique, even across multiple 03D clients in the same page. This property is read-only:\nNumber 03d. CurveKey input [inherited] The input of this key:\nFloat2 03d BezierCurveKeyinTangent The in tangent for this key:\nNumber 03d.", "type": "mixed", "id": {"id": "50627295-9de6-49d6-897a-c240c0a9fcec"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.7, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a mix of programming concepts and documentation, with clear identifiers like \"Unique id\" that can be segmented into meaningful spans for learning purposes. However, the presence of multiple similar terms (e.g., '03d') could potentially confuse learners without context or additional data to disambiguate them. / The segment contains a mix of descriptive text and structured data (code-like elements), with clear spans for both types that can be used to learn span segmentation in diverse contexts. / The segment contains a mix of descriptive text and technical terms related to programming, with clear structure for span segmentation; however, it lacks context or examples that would improve its utility as training data. / The segment contains a mix of descriptive text and programming-related terms, with clear identifiers like \"Unique id\" that can be segmented into meaningful spans for learning purposes. It is clean but lacks context to fully evaluate its training utility without additional examples. / The segment contains a mix of descriptive text and technical terms with clear span boundaries, representing valuable patterns for learning both language structure (natural) and coding constructs (code). However, the presence of \"inherited\" without context reduces clarity slightly but does not significantly detract from its utility."}}
{"raw": "Passing in null will unbind any m parameter currently bound: Returns: True if the bind succeeded.\nbool 03d. ObjectBase.isAClassName String class name [inherited] Takes the name of a class as an argument, and returns true if this object is either an instance of that class or derives from that class.", "type": "mixed", "id": {"id": "0b8960ca-69ae-473c-997e-420c0214bec2"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains both programming concepts (object-oriented inheritance) and a function signature, providing diverse patterns for span segmentation in the context of software documentation or educational material on object-oriented principles. / The segment contains both programming concepts (e.g., \"ObjectBase.isAClassName\") and explanatory text (\"Passing in null will unbind any m parameter currently bound\"), which can help the model learn span segmentation for code comments, documentation strings, or natural language explanations. / The segment contains both programming concepts (e.g., \"ObjectBase.isAClassName\") and language constructs (\"Passing in null\", boolean expressions), which are valuable for learning span segmentation across different domains. However, the mix of natural language explanations with code syntax may require careful handling during training to ensure accurate model performance on mixed content types. / The segment contains both programming concepts (e.g., \"m parameter\", \"bind succeeded\") and object-oriented terminology (\"ObjectBase.isAClassName\"), which can help the model learn span segmentation across different domains. However, it lacks context for a full understanding of each concept's usage in code or documentation separately. / The segment contains both programming concepts and language constructs, offering diverse patterns for span segmentation training in a tokenizer-free context."}}
{"raw": "Parameters: width Width of the plane.", "type": "mixed", "id": {"id": "b61d2514-e8a2-4ad1-aa7d-27e878d6cea1"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The segment contains a parameter definition with clear structure, suitable for learning span composition in both programming contexts and documentation language. / Clear parameter declaration with a mix of words and symbols, representing valuable patterns for learning span composition in both textual descriptions (natural language) and programming context (code). / Clear parameter declaration with a mix of words and symbols, representing valuable patterns for learning span composition in both text and programming contexts. / Clear parameter declaration with a spanable term \"width\" and its descriptive phrase, suitable for learning both coding context (parameters) and language structure. / The segment contains a parameter definition with clear structure, representing valuable patterns for learning span composition in both programming and documentation contexts."}}
{"raw": "opt_matrix A matrix by which to multiply all the vertices. Returns: lo3dis primitivesVertexInfo The created sphere vertices. 03djs.primitives create VertexInfo Creates a new VertexInfo.\nReturns: lo3djs_primitives VertexInfo", "type": "mixed", "id": {"id": "95c88e23-5e13-436d-a95e-ad9b8dedc071"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.72, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "The text segment contains a mix of programming language syntax and comments, with clear delimiters for spans (e.g., function names like \"opt_matrix\" or return types). It is well-formed but lacks context to fully understand the domain-specific patterns it represents. / The segment contains a mix of programming language syntax and comments, with clear delimiters for spans such as function names (\"opt_matrix\", \"create VertexInfo\") that can be used to train the model on span segmentation in code context. / The segment contains a mix of programming language syntax and comments, with clear delimiters for spans (e.g., \"Returns:\", function names). It is coherent but lacks context to fully understand the domain-specific patterns it represents. More examples would be beneficial. / The segment contains a mix of programming language syntax and documentation, with clear references to functions/methods (e.g., \"opt_matrix\", \"create VertexInfo\") that can be segmented into meaningful spans for learning purposes. However, the presence of typographical errors (\"lo3dis\" instead of likely \"lo3djs\") slightly reduces its score but still maintains good structural clarity and compositional value as a mixed content example. / The segment contains a mix of programming language syntax and comments, with clear delimiters for spans such as function names (\"opt_matrix\", \"create VertexInfo\") that can be used to train the model on span segmentation in code context."}}
{"raw": "ViewProjectionParamMatrix4 Class Reference\nInherits 03d ParamMatrix4: List of all members_\nDetailed Description\ntype of ParamMatrix4 that supplies the current view projection matrix at render time. Public Member Functions\nbool bind Param source_param) unbindlnput unbindQutput Param destination_param) unbindQutputs bool isAClassName (String class name)\nPublic Attributes\nMatrix4 value\nbool updateInput bool readOnly Param inputConnection Array outputConnections String name Id clientId String className", "type": "code", "id": {"id": "6c6ef0c1-1d7a-438d-9af2-1a12a313aac3"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.8, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear structure with identifiable spans like class names, function signatures and attributes; well-suited for learning span composition in programming context. / Clear structure with identifiable spans like class names, function signatures, and attributes; well-suited for learning span segmentation in programming contexts. / The segment contains a mix of class references and method signatures, which are clear structures suitable for learning span segmentation in both programming contexts (code) and descriptive text elements related to software documentation (natural language). However, the presence of underscores (\"_\") may confuse tokenization. / Clear structure with identifiable spans like class names, method signatures, and attributes; well-suited for learning span segmentation in programming contexts. / Clear structure with identifiable spans like class names, methods (bind/unbind), attributes/members; well-suited for learning span segmentation in programming contexts."}}
{"raw": "CurveKey output [inherited] The output of this key:\nFloat2 03d BezierCurveKey outTangent The out tangent for this key:", "type": "mixed", "id": {"id": "d2ad87b1-d22f-4e52-ac38-570fc5bb7012"}, "meta": {"status": "keep", "tags": [], "doc_language": "en", "extracted_by": "pdf2seg", "confidence": 0.78, "source_file": "63892020-The-o3d-Bible-by-Kara-Rawson.pdf", "notes": "Clear separation of phrases and terms, representing both language (natural) elements like \"output\", \"tangent\" as well as technical notation (\"Float2\") indicative of programming constructs; useful for learning span segmentation in a code context with natural descriptions. / Clear structure with identifiable spans; includes both programming constructs and documentation, representing valuable patterns for learning span composition in a tokenizer-free context. / Contains a mix of programming language syntax and comments, with clear spanable elements like function names (\"outTangent\") and descriptive phrases (\"Float2\", \"03d BezierCurveKey outTangent\"). The segment is clean for training purposes as it represents valuable patterns in both code structure (e.g., key-value pairs) and natural descriptions. / Clear distinction between descriptive text and technical terms/code-like phrases, useful for learning span segmentation in both domains. / Contains both programming constructs and descriptive text, with clear spanable elements like key names (\"CurveKey\", \"Float2\") and descriptions of outputs which are useful for learning context-aware spans in a mix of code documentation."}}
